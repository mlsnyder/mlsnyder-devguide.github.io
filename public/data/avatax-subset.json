{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "AvaTax API",
    "description": "REST interface to Avalara's enterprise tax service, AvaTax.",
    "contact": {
      "name": "Avalara Developer Community",
      "url": "https://community.avalara.com"
    },
    "license": {
      "name": "Terms of Use",
      "url": "https://www.avalara.com/terms-of-use/"
    }
  },
  "host": "sandbox-rest.avatax.com",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "paths": {
    "/api/v2/transactions/create": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Calculate Tax",
        "description": "Records a new transaction in AvaTax.\r\n\r\nThe `CreateTransaction` endpoint uses the configuration values specified by your company to identify the correct tax rules\r\nand rates to apply to all line items in this transaction, and reports the total tax calculated by AvaTax based on your\r\ncompany's configuration and the data provided in this API call.\r\n\r\nIf you don't specify type in the provided data, a new transaction with type of SalesOrder will be recorded by default.\r\n\r\nA transaction represents a unique potentially taxable action that your company has recorded, and transactions include actions like\r\nsales, purchases, inventory transfer, and returns (also called refunds).\r\nYou may specify one or more of the following values in the '$include' parameter to fetch additional nested data, using commas to separate multiple values:\r\n            \r\n* Lines\r\n* Details (implies lines)\r\n* Summary (implies details)\r\n* Addresses\r\n            \r\nIf you don't specify '$include' parameter, it will include both details and addresses.",
        "operationId": "CreateTransaction",
        "consumes": ["application/json", "text/json", "application/json-patch+json"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "model",
          "in": "body",
          "description": "The transaction you wish to create",
          "required": false,
          "schema": {
            "$ref": "#/definitions/CreateTransactionModel"
          }
        }, {
          "name": "$include",
          "in": "query",
          "description": "A comma separated list of child objects to return underneath the primary object.",
          "required": false,
          "type": "string"
        }, {
          "name": "X-Avalara-Client",
          "in": "header",
          "description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format `(app name); (app version); (library name); (library version); (machine name)`. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
          "required": false,
          "type": "string",
          "default": "Swagger UI; 17.5.1-73; Custom; 1.0"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransactionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "BadRequest"
          }
        },
        "security": [{
          "UserSecurity": [],
          "OauthSecurity": []
        }]
      }
    },
    "/api/v2/addresses/resolve": {
      "get": {
        "tags": ["Addresses"],
        "summary": "Validate an Address",
        "description": "Resolve an address against Avalara's address-validation system.  If the address can be resolved, this API \r\nprovides the latitude and longitude of the resolved location.  The value 'resolutionQuality' can be used \r\nto identify how closely this address can be located.  If the address cannot be clearly located, use the \r\n'messages' structure to learn more about problems with this address.\r\nThis is the same API as the POST /api/v2/addresses/resolve endpoint.\r\nBoth verbs are supported to provide for flexible implementation.",
        "operationId": "ResolveAddress",
        "consumes": [],
        "produces": ["application/json"],
        "parameters": [{
          "name": "line1",
          "in": "query",
          "description": "Line 1",
          "required": false,
          "type": "string"
        }, {
          "name": "line2",
          "in": "query",
          "description": "Line 2",
          "required": false,
          "type": "string"
        }, {
          "name": "line3",
          "in": "query",
          "description": "Line 3",
          "required": false,
          "type": "string"
        }, {
          "name": "city",
          "in": "query",
          "description": "City",
          "required": false,
          "type": "string"
        }, {
          "name": "region",
          "in": "query",
          "description": "State / Province / Region",
          "required": false,
          "type": "string"
        }, {
          "name": "postalCode",
          "in": "query",
          "description": "Postal Code / Zip Code",
          "required": false,
          "type": "string"
        }, {
          "name": "country",
          "in": "query",
          "description": "Two character ISO 3166 Country Code (see /api/v2/definitions/countries for a full list)",
          "required": false,
          "type": "string"
        }, {
          "name": "textCase",
          "in": "query",
          "description": "selectable text case for address validation",
          "required": false,
          "type": "string",
          "enum": ["Upper", "Mixed"],
          "x-enum-type": "TextCase",
          "x-enum-description": "Casing to use for validation result",
          "x-enum-value-comments": {
            "Upper": "Upper case",
            "Mixed": "Mixed Case"
          }
        }, {
          "name": "latitude",
          "in": "query",
          "description": "Geospatial latitude measurement",
          "required": false,
          "type": "number",
          "format": "double"
        }, {
          "name": "longitude",
          "in": "query",
          "description": "Geospatial longitude measurement",
          "required": false,
          "type": "number",
          "format": "double"
        }, {
          "name": "X-Avalara-Client",
          "in": "header",
          "description": "Identifies the software you are using to call this API to aid in debugging and verification.\r\n                    This is a string in the format `(app name); (app version); (library name); (library version); (machine name)`. \r\n                    For more information about designing an Avalara client string for your application, please see the developer website.",
          "required": false,
          "type": "string",
          "default": "Swagger UI; 17.5.1-73; Custom; 1.0"
        }],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddressResolutionModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "BadRequest"
          }
        },
        "security": [{
          "UserSecurity": [],
          "OauthSecurity": []
        }]
      }
    }  
  },
  "definitions": {
    "AccountModel": {
      "description": "An AvaTax account.",
      "required": ["id", "name"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number assigned to this account.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "name": {
          "description": "The name of this account.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Test Account"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The earliest date on which this account may be used.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "If this account has been closed, this is the last date the account was open.",
          "type": "string"
        },
        "accountStatusId": {
          "description": "The current status of this account.",
          "enum": ["Inactive", "Active", "Test", "New"],
          "type": "string",
          "example": "Test",
          "x-enum-type": "AccountStatusId",
          "x-enum-description": "Status of an Avalara account",
          "x-enum-value-comments": {
            "Inactive": "This account is not currently active.",
            "Active": "This account is active and in use.",
            "Test": "This account is flagged as a test account and may be temporary.",
            "New": "The account is new and is currently in the onboarding process."
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "subscriptions": {
          "description": "Optional: A list of subscriptions granted to this account.  To fetch this list, add the query string \"?$include=Subscriptions\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionModel"
          }
        },
        "users": {
          "description": "Optional: A list of all the users belonging to this account.  To fetch this list, add the query string \"?$include=Users\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserModel"
          }
        }
      },
      "example": {
        "id": 12345,
        "name": "Test Account",
        "effectiveDate": "2017-05-16T00:00:00-07:00",
        "accountStatusId": "Test"
      }
    },
    "SubscriptionModel": {
      "description": "Represents a service that this account has subscribed to.",
      "required": ["id", "accountId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this subscription.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "accountId": {
          "format": "int32",
          "description": "The unique ID number of the account this subscription belongs to.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "subscriptionTypeId": {
          "format": "int32",
          "description": "The unique ID number of the service that the account is subscribed to.",
          "type": "integer",
          "example": 2
        },
        "subscriptionDescription": {
          "description": "A friendly description of the service that the account is subscribed to.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "AvaTaxPro"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The date when the subscription began.",
          "type": "string",
          "example": "2015-01-01T00:00:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "If the subscription has ended or will end, this date indicates when the subscription ends.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 12345,
        "accountId": 123456789,
        "subscriptionTypeId": 2,
        "subscriptionDescription": "AvaTaxPro",
        "effectiveDate": "2015-01-01"
      }
    },
    "UserModel": {
      "description": "An account user who is permitted to use AvaTax.",
      "required": ["id", "accountId", "userName", "email", "postalCode", "securityRoleId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this user.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "accountId": {
          "format": "int32",
          "description": "The unique ID number of the account to which this user belongs.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "companyId": {
          "format": "int32",
          "description": "If this user is locked to one company (and its children), this is the unique ID number of the company to which this user belongs.",
          "type": "integer",
          "example": 123456
        },
        "userName": {
          "description": "The username which is used to log on to the AvaTax website, or to authenticate against API calls.",
          "maxLength": 50,
          "minLength": 5,
          "type": "string",
          "readOnly": true,
          "example": "bobExample"
        },
        "firstName": {
          "description": "The first or given name of the user.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Bob"
        },
        "lastName": {
          "description": "The last or family name of the user.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Example"
        },
        "email": {
          "description": "The email address to be used to contact this user.  If the user has forgotten a password, an email can be sent to this email address with information on how to reset this password.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "bob@example.org"
        },
        "postalCode": {
          "description": "The postal code in which this user resides.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": "98110"
        },
        "securityRoleId": {
          "description": "The security level for this user.",
          "enum": ["NoAccess", "SiteAdmin", "AccountOperator", "AccountAdmin", "AccountUser", "SystemAdmin", "Registrar", "CSPTester", "CSPAdmin", "SystemOperator", "TechnicalSupportUser", "TechnicalSupportAdmin", "TreasuryUser", "TreasuryAdmin", "ComplianceUser", "ComplianceAdmin", "ProStoresOperator", "CompanyUser", "CompanyAdmin", "ComplianceTempUser", "ComplianceRootUser", "ComplianceOperator", "SSTAdmin"],
          "type": "string",
          "example": "AccountUser",
          "x-enum-type": "SecurityRoleId",
          "x-enum-description": "Permission level of a user",
          "x-enum-value-comments": {
            "NoAccess": "NoAccess",
            "SiteAdmin": "SiteAdmin",
            "AccountOperator": "AccountOperator",
            "AccountAdmin": "AccountAdmin",
            "AccountUser": "AccountUser",
            "SystemAdmin": "SystemAdmin",
            "Registrar": "Registrar",
            "CSPTester": "CSPTester",
            "CSPAdmin": "CSPAdmin",
            "SystemOperator": "SystemOperator",
            "TechnicalSupportUser": "TechnicalSupportUser",
            "TechnicalSupportAdmin": "TechnicalSupportAdmin",
            "TreasuryUser": "TreasuryUser",
            "TreasuryAdmin": "TreasuryAdmin",
            "ComplianceUser": "ComplianceUser",
            "ComplianceAdmin": "ComplianceAdmin",
            "ProStoresOperator": "ProStoresOperator",
            "CompanyUser": "CompanyUser",
            "CompanyAdmin": "CompanyAdmin",
            "ComplianceTempUser": "ComplianceTempUser",
            "ComplianceRootUser": "ComplianceRootUser",
            "ComplianceOperator": "ComplianceOperator",
            "SSTAdmin": "SSTAdmin"
          }
        },
        "passwordStatus": {
          "description": "The status of the user's password.",
          "enum": ["UserCannotChange", "UserCanChange", "UserMustChange"],
          "type": "string",
          "example": "UserCanChange",
          "x-enum-type": "PasswordStatusId",
          "x-enum-description": "PasswordStatusId",
          "x-enum-value-comments": {
            "UserCannotChange": "UserCannotChange",
            "UserCanChange": "UserCanChange",
            "UserMustChange": "UserMustChange"
          }
        },
        "isActive": {
          "description": "True if this user is currently active.",
          "type": "boolean",
          "example": true
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 12345,
        "accountId": 123456789,
        "companyId": 123456,
        "userName": "bobExample",
        "firstName": "Bob",
        "lastName": "Example",
        "email": "bob@example.org",
        "postalCode": "98110",
        "securityRoleId": "AccountUser",
        "passwordStatus": "UserCanChange",
        "isActive": true
      }
    },
    "ErrorDetail": {
      "description": "Message object",
      "type": "object",
      "properties": {
        "code": {
          "description": "Name of the error or message.",
          "enum": ["ServerConfiguration", "AccountInvalidException", "CompanyInvalidException", "EntityNotFoundError", "ValueRequiredError", "RangeError", "RangeCompareError", "RangeSetError", "TaxpayerNumberRequired", "CommonPassword", "WeakPassword", "StringLengthError", "EmailValidationError", "EmailMissingError", "ParserFieldNameError", "ParserFieldValueError", "ParserSyntaxError", "ParserTooManyParametersError", "ParserUnterminatedValueError", "DeleteUserSelfError", "OldPasswordInvalid", "CannotChangePassword", "CannotChangeCompanyCode", "DateFormatError", "NoDefaultCompany", "AuthenticationException", "AuthorizationException", "ValidationException", "InactiveUserError", "AuthenticationIncomplete", "BasicAuthIncorrect", "IdentityServerError", "BearerTokenInvalid", "ModelRequiredException", "AccountExpiredException", "VisibilityError", "BearerTokenNotSupported", "InvalidSecurityRole", "InvalidRegistrarAction", "RemoteServerError", "NoFilterCriteriaException", "OpenClauseException", "JsonFormatError", "UnhandledException", "ReportingCompanyMustHaveContactsError", "CompanyProfileNotSet", "ModelStateInvalid", "DateRangeError", "InvalidDateRangeError", "DeleteInformation", "CannotCreateDeletedObjects", "CannotModifyDeletedObjects", "ReturnNameNotFound", "InvalidAddressTypeAndCategory", "DefaultCompanyLocation", "InvalidCountry", "InvalidCountryRegion", "BrazilValidationError", "BrazilExemptValidationError", "BrazilPisCofinsError", "JurisdictionNotFoundError", "MedicalExciseError", "RateDependsTaxabilityError", "RateDependsEuropeError", "InvalidRateTypeCode", "RateTypeNotSupported", "CannotUpdateNestedObjects", "UPCCodeInvalidChars", "UPCCodeInvalidLength", "IncorrectPathError", "InvalidJurisdictionType", "MustConfirmResetLicenseKey", "DuplicateCompanyCode", "TINFormatError", "DuplicateNexusError", "UnknownNexusError", "ParentNexusNotFound", "InvalidTaxCodeType", "CannotActivateCompany", "DuplicateEntityProperty", "ReportingEntityError", "InvalidReturnOperationError", "CannotDeleteCompany", "CountryOverridesNotAvailable", "JurisdictionOverrideMismatch", "DuplicateSystemTaxCode", "SSTOverridesNotAvailable", "NexusDateMismatch", "TechSupportAuditRequired", "NexusParentDateMismatch", "BearerTokenParseUserIdError", "RetrieveUserError", "InvalidConfigurationSetting", "InvalidConfigurationValue", "InvalidEnumValue", "TaxCodeAssociatedTaxRule", "CannotSwitchAccountId", "RequestIncomplete", "BatchSalesAuditMustBeZippedError", "BatchZipMustContainOneFileError", "BatchInvalidFileTypeError", "PointOfSaleFileSize", "PointOfSaleSetup", "GetTaxError", "AddressConflictException", "DocumentCodeConflict", "MissingAddress", "InvalidParameter", "InvalidParameterValue", "CompanyCodeConflict", "DocumentFetchLimit", "AddressIncomplete", "AddressLocationNotFound", "MissingLine", "InvalidAddressTextCase", "DocumentNotCommitted", "MultiDocumentTypesError", "InvalidDocumentTypesToFetch", "BadDocumentFetch", "ServerUnreachable", "SubscriptionRequired", "AccountExists", "InvitationOnly", "ZTBListConnectorFail", "ZTBCreateSubscriptionsFail", "FreeTrialNotAvailable", "InvalidDocumentStatusForRefund", "RefundTypeAndPercentageMismatch", "InvalidDocumentTypeForRefund", "RefundTypeAndLineMismatch", "NullRefundPercentageAndLines", "InvalidRefundType", "RefundPercentageForTaxOnly", "LineNoOutOfRange", "RefundPercentageOutOfRange", "TaxRateNotAvailableForFreeInThisCountry", "FilingCalendarCannotBeDeleted", "InvalidEffectiveDate", "NonOutletForm", "QuestionNotNeededForThisAddress", "QuestionNotValidForThisAddress", "CannotModifyLockedTransaction", "LineAlreadyExists", "LineDoesNotExist", "LinesNotSpecified"],
          "type": "string",
          "example": "DeleteInformation",
          "x-enum-type": "ErrorCodeId",
          "x-enum-description": "Represents a error code message",
          "x-enum-value-comments": {
            "ServerConfiguration": "Server has a configuration or setup problem",
            "AccountInvalidException": "User doesn't have rights to this account or company",
            "EntityNotFoundError": "Use this error message when the user is trying to fetch a single object and the object either does not exist or cannot be seen by the current user.",
            "BatchSalesAuditMustBeZippedError": "Batch errors",
            "PointOfSaleFileSize": "Point Of Sale API exceptions",
            "GetTaxError": "Errors in Soap V1 Passthrough / GetTax calls",
            "BadDocumentFetch": "Represents a malformed document fetch command",
            "ServerUnreachable": "Represents a SQL server timeout error / deadlock error",
            "SubscriptionRequired": "Partner API error codes",
            "InvalidDocumentStatusForRefund": "Refund API error codes",
            "TaxRateNotAvailableForFreeInThisCountry": "Free API error codes",
            "FilingCalendarCannotBeDeleted": "Filing Calendar Error Codes",
            "QuestionNotNeededForThisAddress": "Location error codes",
            "CannotModifyLockedTransaction": "Create or update transaction error codes"
          }
        },
        "number": {
          "format": "int32",
          "description": "Unique ID number referring to this error or message.",
          "type": "integer",
          "example": 142
        },
        "message": {
          "description": "Concise summary of the message, suitable for display in the caption of an alert box.",
          "type": "string",
          "example": "The entity was marked as deleted."
        },
        "description": {
          "description": "A more detailed description of the problem referenced by this error message, suitable for display in the contents area of an alert box.",
          "type": "string",
          "example": "Object successfully marked as deleted."
        },
        "faultCode": {
          "description": "Indicates the SOAP Fault code, if this was related to an error that corresponded to AvaTax SOAP v1 behavior.",
          "type": "string",
          "example": "Client"
        },
        "helpLink": {
          "description": "URL to help for this message",
          "type": "string",
          "readOnly": true,
          "example": "http://developer.avalara.com/avatax/errors/DeleteInformation"
        },
        "refersTo": {
          "description": "Item the message refers to, if applicable.  This is used to indicate a missing or incorrect value.",
          "type": "string"
        },
        "severity": {
          "description": "Severity of the message",
          "enum": ["Success", "Warning", "Error", "Exception"],
          "type": "string",
          "example": "Success",
          "x-enum-type": "SeverityLevel",
          "x-enum-description": "Severity of message",
          "x-enum-value-comments": {
            "Success": "Operation succeeded",
            "Warning": "Warnings occured, operation succeeded",
            "Error": "Errors occured, operation failed",
            "Exception": "Unexpected exceptions occurred, operation failed"
          }
        }
      },
      "example": {
        "code": "DeleteInformation",
        "number": 142,
        "message": "The entity was marked as deleted.",
        "description": "Object successfully marked as deleted.",
        "faultCode": "Client",
        "helpLink": "http://developer.avalara.com/avatax/errors/DeleteInformation",
        "severity": "Success"
      }
    },
    "FetchResult[AccountModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NewAccountRequestModel": {
      "description": "Represents a request for a new account with Avalara for a new subscriber.\r\nContains information about the account requested and the rate plan selected.",
      "required": ["products", "connectorName", "parentAccountNumber", "referrerId", "paymentMethodId", "accountName", "firstName", "lastName", "email"],
      "type": "object",
      "properties": {
        "products": {
          "description": "The list of products to which this account would like to subscribe.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["ZTFREE"]
        },
        "connectorName": {
          "description": "The name of the connector that will be the primary method of access used to call the account created.\r\nFor a list of available connectors, please contact your Avalara representative.",
          "type": "string",
          "example": "NetSuite"
        },
        "parentAccountNumber": {
          "description": "An approved partner account can be referenced when provisioning an account, allowing a link between \r\nthe partner and the provisioned account.",
          "type": "string",
          "example": "123456789"
        },
        "referrerId": {
          "description": "Identifies a referring partner for the assessment of referral-based commissions.",
          "type": "string",
          "example": "98765"
        },
        "paymentMethodId": {
          "description": "Zuora-generated Payment ID to which the new account should be associated. For free trial accounts, an empty string is acceptable.",
          "type": "string",
          "example": "CreditCard"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The date on which the account should take effect.  If null, defaults to today.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date on which the account should expire.  If null, defaults to a 90-day trial account.",
          "type": "string"
        },
        "accountName": {
          "description": "Account Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "firstName": {
          "description": "First Name of the primary contact person for this account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "lastName": {
          "description": "Last Name of the primary contact person for this account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "title": {
          "description": "Title of the primary contact person for this account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number of the primary contact person for this account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "description": "Email of the primary contact person for this account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "userPassword": {
          "description": "If no password is supplied, an a tempoarary password is generated by the system and emailed to the user. The user will \r\nbe challenged to change this password upon logging in to the Admin Console. If supplied, will be the set password for \r\nthe default created user, and the user will not be challenged to change their password upon login to the Admin Console.",
          "type": "string"
        }
      },
      "example": {
        "products": ["ZTFREE"],
        "connectorName": "NetSuite",
        "parentAccountNumber": "123456789",
        "referrerId": "98765",
        "paymentMethodId": "CreditCard"
      }
    },
    "NewAccountModel": {
      "description": "Represents information about a newly created account",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "description": "This is the ID number of the account that was created",
          "type": "integer",
          "example": 123456789
        },
        "accountDetailsEmailedTo": {
          "description": "This is the email address to which credentials were mailed",
          "type": "string",
          "example": "bob@example.org"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date and time when this account was created",
          "type": "string",
          "example": "0001-01-01T00:00:00"
        },
        "emailedDate": {
          "format": "date-time",
          "description": "The date and time when account information was emailed to the user",
          "type": "string",
          "example": "0001-01-01T00:00:00"
        },
        "limitations": {
          "description": "If this account includes any limitations, specify them here",
          "type": "string"
        }
      },
      "example": {
        "accountId": 123456789,
        "accountDetailsEmailedTo": "bob@example.org",
        "createdDate": "0001-01-01T00:00:00",
        "emailedDate": "0001-01-01T00:00:00"
      }
    },
    "FreeTrialRequestModel": {
      "description": "Represents a request for a free trial account for AvaTax.\r\nFree trial accounts are only available on the Sandbox environment.",
      "required": ["firstName", "lastName", "email", "company", "phone"],
      "type": "object",
      "properties": {
        "firstName": {
          "description": "The first or given name of the user requesting a free trial.",
          "type": "string",
          "example": "Bob"
        },
        "lastName": {
          "description": "The last or family name of the user requesting a free trial.",
          "type": "string",
          "example": "McExample"
        },
        "email": {
          "description": "The email address of the user requesting a free trial.",
          "type": "string",
          "example": "bob@example.org"
        },
        "company": {
          "description": "The company or organizational name for this free trial.  If this account is for personal use, it is acceptable \r\nto use your full name here.",
          "type": "string",
          "example": "Bob's Artisan Pottery"
        },
        "phone": {
          "description": "The phone number of the person requesting the free trial.",
          "type": "string",
          "example": "+1 (714) 555-1212"
        }
      },
      "example": {
        "firstName": "Bob",
        "lastName": "McExample",
        "email": "bob@example.org",
        "company": "Bob's Artisan Pottery",
        "phone": "+1 (714) 555-1212"
      }
    },
    "ResetLicenseKeyModel": {
      "description": "Represents a license key reset request.",
      "required": ["accountId", "confirmResetLicenseKey"],
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "description": "The primary key of the account ID to reset",
          "type": "integer",
          "example": 123456789
        },
        "confirmResetLicenseKey": {
          "description": "Set this value to true to reset the license key for this account.\r\nThis license key reset function will only work when called using the credentials of the account administrator of this account.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "accountId": 123456789,
        "confirmResetLicenseKey": true
      }
    },
    "LicenseKeyModel": {
      "description": "Represents a license key for this account.",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "description": "The primary key of the account",
          "type": "integer",
          "example": 123456789
        },
        "privateLicenseKey": {
          "description": "This is your private license key.  You must record this license key for safekeeping.\r\nIf you lose this key, you must contact the ResetLicenseKey API in order to request a new one.\r\nEach account can only have one license key at a time.",
          "type": "string",
          "example": "742A02AA463CDE741E932EC365360CA3CF378BD9"
        },
        "httpRequestHeader": {
          "description": "If your software allows you to specify the HTTP Authorization header directly, this is the header string you \r\nshould use when contacting Avalara to make API calls with this license key.",
          "type": "string",
          "example": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
        }
      },
      "example": {
        "accountId": 123456789,
        "privateLicenseKey": "742A02AA463CDE741E932EC365360CA3CF378BD9",
        "httpRequestHeader": "Basic MTIzNDU2Nzg5Ojc0MkEwMkFBNDYzQ0RFNzQxRTkzMkVDMzY1MzYwQ0EzQ0YzNzhCRDk="
      }
    },
    "ActivateAccountModel": {
      "description": "Represents a request to activate an account by reading and accepting its terms and conditions.",
      "type": "object",
      "properties": {
        "acceptAvalaraTermsAndConditions": {
          "description": "Set this to true if and only if you accept Avalara's terms and conditions for your account.",
          "type": "boolean",
          "example": true
        },
        "haveReadAvalaraTermsAndConditions": {
          "description": "Set this to true if and only if you have fully read Avalara's terms and conditions for your account.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "acceptAvalaraTermsAndConditions": true,
        "haveReadAvalaraTermsAndConditions": true
      }
    },
    "AccountConfigurationModel": {
      "description": "Represents one configuration setting for this account",
      "required": ["category", "name"],
      "type": "object",
      "properties": {
        "accountId": {
          "format": "int32",
          "description": "The unique ID number of the account to which this setting applies",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "category": {
          "description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "TaxServiceConfig"
        },
        "name": {
          "description": "The name of the configuration setting",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "MaxLines"
        },
        "value": {
          "description": "The current value of the configuration setting",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "1000"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "accountId": 0,
        "category": "TaxServiceConfig",
        "name": "MaxLines",
        "value": "1000"
      }
    },
    "AddressValidationInfo": {
      "description": "TextCase info for input address",
      "type": "object",
      "properties": {
        "textCase": {
          "description": "Specify the text case for the validated address result.  If not specified, will return uppercase.",
          "enum": ["Upper", "Mixed"],
          "type": "string",
          "example": "Upper",
          "x-enum-type": "TextCase",
          "x-enum-description": "Casing to use for validation result",
          "x-enum-value-comments": {
            "Upper": "Upper case",
            "Mixed": "Mixed Case"
          }
        },
        "line1": {
          "description": "Line1",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "Line2",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "Line3",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "City",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "State / Province / Region",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "Two character ISO 3166 Country Code",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "postalCode": {
          "description": "Postal Code / Zip Code",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "latitude": {
          "format": "double",
          "description": "Geospatial latitude measurement",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Geospatial longitude measurement",
          "type": "number"
        }
      },
      "example": {
        "textCase": "Upper",
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92615"
      }
    },
    "AddressResolutionModel": {
      "description": "Address Resolution Model",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressInfo",
          "description": "The original address",
          "example": {
            "line1": "123 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92615"
          }
        },
        "validatedAddresses": {
          "description": "The validated address or addresses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidatedAddressInfo"
          }
        },
        "coordinates": {
          "$ref": "#/definitions/CoordinateInfo",
          "description": "The geospatial coordinates of this address",
          "example": {
            "latitude": 33.684884,
            "longitude": -117.851321
          }
        },
        "resolutionQuality": {
          "description": "The resolution quality of the geospatial coordinates",
          "enum": ["NotCoded", "External", "CountryCentroid", "RegionCentroid", "PartialCentroid", "PostalCentroidGood", "PostalCentroidBetter", "PostalCentroidBest", "Intersection", "Interpolated", "Rooftop", "Constant"],
          "type": "string",
          "example": "Rooftop",
          "x-enum-type": "ResolutionQuality",
          "x-enum-description": "The address resolution quality of an address validation result",
          "x-enum-value-comments": {
            "NotCoded": "Location was not geocoded",
            "External": "Location was already geocoded on the request",
            "CountryCentroid": "Avalara-defined country centroid",
            "RegionCentroid": "Avalara-defined state / province centroid",
            "PartialCentroid": "Geocoded at a level more coarse than a PostalCentroid1",
            "PostalCentroidGood": "Largest postal code (zip5 in US, left three in CA, etc",
            "PostalCentroidBetter": "Better postal code (zip7 in US)",
            "PostalCentroidBest": "Best postal code (zip9 in US, complete postal code elsewhere)",
            "Intersection": "Nearest intersection",
            "Interpolated": "Interpolated to rooftop",
            "Rooftop": "Assumed to be rooftop level, non-interpolated",
            "Constant": "Pulled from a static list of geocodes for specific jurisdictions"
          }
        },
        "taxAuthorities": {
          "description": "List of informational and warning messages regarding this address",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxAuthorityInfo"
          }
        },
        "messages": {
          "description": "List of informational and warning messages regarding this address",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvaTaxMessage"
          },
          "example": [{
            "summary": "The address is not deliverable.",
            "details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
            "refersTo": "address",
            "severity": "Error",
            "source": "Avalara.AvaTax.Services.Address"
          }]
        }
      },
      "example": {
        "address": {
          "line1": "123 Main Street",
          "city": "Irvine",
          "region": "CA",
          "country": "US",
          "postalCode": "92615"
        },
        "coordinates": {
          "latitude": 33.684884,
          "longitude": -117.851321
        },
        "resolutionQuality": "Rooftop",
        "messages": [{
          "summary": "The address is not deliverable.",
          "details": "The physical location exists but there are no homes on this street. One reason might be railroad tracks or rivers running alongside this street, as they would prevent construction of homes in this location.",
          "refersTo": "address",
          "severity": "Error",
          "source": "Avalara.AvaTax.Services.Address"
        }]
      }
    },
    "AddressInfo": {
      "description": "Represents an address to resolve.",
      "type": "object",
      "properties": {
        "line1": {
          "description": "Line1",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "Line2",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "Line3",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "City",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "State / Province / Region",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "Two character ISO 3166 Country Code",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "postalCode": {
          "description": "Postal Code / Zip Code",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "latitude": {
          "format": "double",
          "description": "Geospatial latitude measurement",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Geospatial longitude measurement",
          "type": "number"
        }
      },
      "example": {
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92615"
      }
    },
    "ValidatedAddressInfo": {
      "description": "Represents a validated address",
      "type": "object",
      "properties": {
        "addressType": {
          "description": "Address type code. One of: \r\n* F - Firm or company address\r\n* G - General Delivery address\r\n* H - High-rise or business complex\r\n* P - PO Box address\r\n* R - Rural route address\r\n* S - Street or residential address",
          "type": "string"
        },
        "line1": {
          "description": "Line1",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "Line2",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "Line3",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "City",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "State / Province / Region",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "Two character ISO 3166 Country Code",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "postalCode": {
          "description": "Postal Code / Zip Code",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "latitude": {
          "format": "double",
          "description": "Geospatial latitude measurement",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Geospatial longitude measurement",
          "type": "number"
        }
      },
      "example": {
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92615"
      }
    },
    "CoordinateInfo": {
      "description": "Coordinate Info",
      "type": "object",
      "properties": {
        "latitude": {
          "format": "double",
          "description": "Latitude",
          "type": "number",
          "example": 33.684884
        },
        "longitude": {
          "format": "double",
          "description": "Longitude",
          "type": "number",
          "example": -117.851321
        }
      },
      "example": {
        "latitude": 33.684884,
        "longitude": -117.851321
      }
    },
    "TaxAuthorityInfo": {
      "description": "Tax Authority Info",
      "required": ["jurisdictionName"],
      "type": "object",
      "properties": {
        "avalaraId": {
          "description": "Avalara Id",
          "type": "string",
          "example": "AGAM"
        },
        "jurisdictionName": {
          "description": "Jurisdiction Name",
          "maxLength": 128,
          "minLength": 0,
          "type": "string",
          "example": "CALIFORNIA"
        },
        "jurisdictionType": {
          "description": "Jurisdiction Type",
          "enum": ["Country", "Composite", "State", "County", "City", "Special"],
          "type": "string",
          "example": "State",
          "x-enum-type": "JurisdictionType",
          "x-enum-description": "Jurisdiction Type",
          "x-enum-value-comments": {
            "Country": "Country",
            "Composite": "Deprecated",
            "State": "State",
            "County": "County",
            "City": "City",
            "Special": "Special Tax Jurisdiction"
          }
        },
        "signatureCode": {
          "description": "Signature Code",
          "maxLength": 4,
          "minLength": 0,
          "type": "string",
          "example": "AGAM"
        }
      },
      "example": {
        "avalaraId": "AGAM",
        "jurisdictionName": "CALIFORNIA",
        "jurisdictionType": "State",
        "signatureCode": "AGAM"
      }
    },
    "AvaTaxMessage": {
      "description": "Informational or warning messages returned by AvaTax with a transaction",
      "type": "object",
      "properties": {
        "summary": {
          "description": "A brief summary of what this message tells us",
          "type": "string"
        },
        "details": {
          "description": "Detailed information that explains what the summary provided",
          "type": "string"
        },
        "refersTo": {
          "description": "Information about what object in your request this message refers to",
          "type": "string"
        },
        "severity": {
          "description": "A category that indicates how severely this message affects the results",
          "type": "string"
        },
        "source": {
          "description": "The name of the code or service that generated this message",
          "type": "string"
        }
      },
      "example": {}
    },
    "BatchModel": {
      "description": "Represents a batch of uploaded documents.",
      "required": ["name", "type"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this batch.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "The user-friendly readable name for this batch.",
          "maxLength": 194,
          "minLength": 0,
          "type": "string",
          "example": "TestBatch"
        },
        "accountId": {
          "format": "int32",
          "description": "The Account ID number of the account that owns this batch.",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "description": "The Company ID number of the company that owns this batch.",
          "type": "integer"
        },
        "type": {
          "description": "The type of this batch.",
          "enum": ["AvaCertUpdate", "AvaCertUpdateAll", "BatchMaintenance", "CompanyLocationImport", "DocumentImport", "ExemptCertImport", "ItemImport", "SalesAuditExport", "SstpTestDeckImport", "TaxRuleImport", "TransactionImport", "UPCBulkImport", "UPCValidationImport"],
          "type": "string",
          "example": "TransactionImport",
          "x-enum-type": "BatchType",
          "x-enum-description": "The type of data contained in this batch",
          "x-enum-value-comments": {
            "TransactionImport": "This batch type represents tax transaction data being uploaded to AvaTax.  Each line in the batch represents a single transaction\n            or a line in a multi-line transaction.  For reference, see [Batched Transactions in REST v2](http://developer.avalara.com/blog/2016/10/24/batch-transaction-upload-in-rest-v2)"
          }
        },
        "status": {
          "description": "This batch's current processing status",
          "enum": ["Waiting", "SystemErrors", "Cancelled", "Completed", "Creating", "Deleted", "Errors", "Paused", "Processing"],
          "type": "string",
          "readOnly": true,
          "x-enum-type": "BatchStatus",
          "x-enum-description": "The status of a batch file",
          "x-enum-value-comments": {
            "Waiting": "Batch file has been received and is in the queue to be processed.",
            "SystemErrors": "Batch file experienced system errors and cannot be processed.",
            "Cancelled": "Batch file is cancelled",
            "Completed": "Batch file has been completely processed.",
            "Creating": "Batch file is currently being created.",
            "Deleted": "Batch file has been deleted.",
            "Errors": "Batch file was processed with some errors.",
            "Paused": "Batch processing was paused.",
            "Processing": "Batch is currently being processed."
          }
        },
        "options": {
          "description": "Any optional flags provided for this batch",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "batchAgent": {
          "description": "The agent used to create this batch",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "manual"
        },
        "startedDate": {
          "format": "date-time",
          "description": "The date/time when this batch started processing",
          "type": "string",
          "readOnly": true
        },
        "recordCount": {
          "format": "int32",
          "description": "The number of records in this batch; determined by the server",
          "type": "integer",
          "readOnly": true
        },
        "currentRecord": {
          "format": "int32",
          "description": "The current record being processed",
          "type": "integer",
          "readOnly": true
        },
        "completedDate": {
          "format": "date-time",
          "description": "The date/time when this batch was completely processed",
          "type": "string",
          "readOnly": true
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "files": {
          "description": "The list of files contained in this batch.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchFileModel"
          },
          "example": [{
            "name": "samplebatch.csv",
            "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
            "contentLength": 0,
            "contentType": "text/csv",
            "fileExtension": ".csv"
          }]
        }
      },
      "example": {
        "name": "TestBatch",
        "type": "TransactionImport",
        "batchAgent": "manual",
        "files": [{
          "name": "samplebatch.csv",
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "contentLength": 0,
          "contentType": "text/csv",
          "fileExtension": ".csv"
        }]
      }
    },
    "BatchFileModel": {
      "description": "Represents one file in a batch upload.",
      "required": ["name", "content", "contentType", "fileExtension"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number assigned to this batch file.",
          "type": "integer",
          "readOnly": true
        },
        "batchId": {
          "format": "int32",
          "description": "The unique ID number of the batch that this file belongs to.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "Logical Name of file (e.g. \"Input\" or \"Error\").",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "samplebatch.csv"
        },
        "content": {
          "format": "byte",
          "description": "Content of the batch file.",
          "type": "string",
          "example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
        },
        "contentLength": {
          "format": "int32",
          "description": "Size of content, in bytes.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "contentType": {
          "description": "Content mime type (e.g. text/csv).  This is used for HTTP downloading.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "text/csv"
        },
        "fileExtension": {
          "description": "File extension (e.g. CSV).",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": ".csv"
        },
        "errorCount": {
          "format": "int32",
          "description": "Number of errors that occurred when processing this file.",
          "type": "integer"
        }
      },
      "example": {
        "name": "samplebatch.csv",
        "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
        "contentLength": 0,
        "contentType": "text/csv",
        "fileExtension": ".csv"
      }
    },
    "FetchResult[BatchModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BatchModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "CompanyModel": {
      "description": "A company or business entity.",
      "required": ["id", "accountId", "companyCode", "name", "defaultCountry"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this company.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "accountId": {
          "format": "int32",
          "description": "The unique ID number of the account this company belongs to.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "parentCompanyId": {
          "format": "int32",
          "description": "If this company is fully owned by another company, this is the unique identity of the parent company.",
          "type": "integer"
        },
        "sstPid": {
          "description": "If this company files Streamlined Sales Tax, this is the PID of this company as defined by the Streamlined Sales Tax governing board.",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "companyCode": {
          "description": "A unique code that references this company within your account.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "DEFAULT"
        },
        "name": {
          "description": "The name of this company, as shown to customers.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Default Company"
        },
        "isDefault": {
          "description": "This flag is true if this company is the default company for this account.  Only one company may be set as the default.",
          "type": "boolean",
          "example": false
        },
        "defaultLocationId": {
          "format": "int32",
          "description": "If set, this is the unique ID number of the default location for this company.",
          "type": "integer"
        },
        "isActive": {
          "description": "This flag indicates whether tax activity can occur for this company.  Set this flag to true to permit the company to process transactions.",
          "type": "boolean",
          "example": true
        },
        "taxpayerIdNumber": {
          "description": "For United States companies, this field contains your Taxpayer Identification Number.  \r\nThis is a nine digit number that is usually called an EIN for an Employer Identification Number if this company is a corporation, \r\nor SSN for a Social Security Number if this company is a person.\r\nThis value is required if you subscribe to Avalara Managed Returns or the SST Certified Service Provider services, \r\nbut it is optional if you do not subscribe to either of those services.",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "123456789"
        },
        "hasProfile": {
          "description": "Set this flag to true to give this company its own unique tax profile.\r\nIf this flag is true, this company will have its own Nexus, TaxRule, TaxCode, and Item definitions.\r\nIf this flag is false, this company will inherit all profile values from its parent.",
          "type": "boolean",
          "example": true
        },
        "isReportingEntity": {
          "description": "Set this flag to true if this company must file its own tax returns.\r\nFor users who have Returns enabled, this flag turns on monthly Worksheet generation for the company.",
          "type": "boolean",
          "example": false
        },
        "sstEffectiveDate": {
          "format": "date-time",
          "description": "If this company participates in Streamlined Sales Tax, this is the date when the company joined the SST program.",
          "type": "string"
        },
        "defaultCountry": {
          "description": "The two character ISO-3166 country code of the default country for this company.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "baseCurrencyCode": {
          "description": "This is the three character ISO-4217 currency code of the default currency used by this company.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "USD"
        },
        "roundingLevelId": {
          "description": "Indicates whether this company prefers to round amounts at the document level or line level.",
          "enum": ["Line", "Document"],
          "type": "string",
          "example": "Line",
          "x-enum-type": "RoundingLevelId",
          "x-enum-description": "Choice of rounding level for a transaction",
          "x-enum-value-comments": {
            "Line": "Round tax on each line separately",
            "Document": "Round tax at the document level"
          }
        },
        "warningsEnabled": {
          "description": "Set this value to true to receive warnings in API calls via SOAP.",
          "type": "boolean"
        },
        "isTest": {
          "description": "Set this flag to true to indicate that this company is a test company.\r\nIf you have Returns enabled, Test companies will not file tax returns and can be used for validation purposes.",
          "type": "boolean",
          "example": true
        },
        "taxDependencyLevelId": {
          "description": "Used to apply tax detail dependency at a jurisdiction level.",
          "enum": ["Document", "State", "TaxRegion", "Address"],
          "type": "string",
          "example": "Document",
          "x-enum-type": "TaxDependencyLevelId",
          "x-enum-description": "TaxDependencyLevelId",
          "x-enum-value-comments": {
            "Document": "Document",
            "State": "State",
            "TaxRegion": "TaxRegion",
            "Address": "Address"
          }
        },
        "inProgress": {
          "description": "Set this value to true to indicate that you are still working to finish configuring this company.\r\nWhile this value is true, no tax reporting will occur and the company will not be usable for transactions.",
          "type": "boolean",
          "example": false
        },
        "businessIdentificationNo": {
          "description": "Business Identification No",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "contacts": {
          "description": "Optional: A list of contacts defined for this company.  To fetch this list, add the query string \"?$include=Contacts\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactModel"
          }
        },
        "items": {
          "description": "Optional: A list of items defined for this company.  To fetch this list, add the query string \"?$include=Items\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemModel"
          }
        },
        "locations": {
          "description": "Optional: A list of locations defined for this company.  To fetch this list, add the query string \"?$include=Locations\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationModel"
          }
        },
        "nexus": {
          "description": "Optional: A list of nexus defined for this company.  To fetch this list, add the query string \"?$include=Nexus\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NexusModel"
          }
        },
        "settings": {
          "description": "Optional: A list of settings defined for this company.  To fetch this list, add the query string \"?$include=Settings\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingModel"
          }
        },
        "taxCodes": {
          "description": "Optional: A list of tax codes defined for this company.  To fetch this list, add the query string \"?$include=TaxCodes\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeModel"
          }
        },
        "taxRules": {
          "description": "Optional: A list of tax rules defined for this company.  To fetch this list, add the query string \"?$include=TaxRules\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRuleModel"
          }
        },
        "upcs": {
          "description": "Optional: A list of UPCs defined for this company.  To fetch this list, add the query string \"?$include=UPCs\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UPCModel"
          }
        }
      },
      "example": {
        "id": 12345,
        "accountId": 123456789,
        "companyCode": "DEFAULT",
        "name": "Default Company",
        "isDefault": false,
        "isActive": true,
        "taxpayerIdNumber": "123456789",
        "hasProfile": true,
        "isReportingEntity": false,
        "defaultCountry": "US",
        "baseCurrencyCode": "USD",
        "roundingLevelId": "Line",
        "isTest": true,
        "taxDependencyLevelId": "Document",
        "inProgress": false
      }
    },
    "ContactModel": {
      "description": "A contact person for a company.",
      "required": ["id", "companyId", "contactCode"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this contact.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company to which this contact belongs.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "contactCode": {
          "description": "A unique code for this contact.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "DEFAULT"
        },
        "firstName": {
          "description": "The first or given name of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Bob"
        },
        "middleName": {
          "description": "The middle name of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "lastName": {
          "description": "The last or family name of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "McExample"
        },
        "title": {
          "description": "Professional title of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Owner"
        },
        "line1": {
          "description": "The first line of the postal mailing address of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "The second line of the postal mailing address of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "The third line of the postal mailing address of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "The city of the postal mailing address of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "The state, region, or province of the postal mailing address of this contact.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "postalCode": {
          "description": "The postal code or zip code of the postal mailing address of this contact.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "country": {
          "description": "The ISO 3166 two-character country code of the postal mailing address of this contact.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "email": {
          "description": "The email address of this contact.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "bob@example.org"
        },
        "phone": {
          "description": "The main phone number for this contact.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "714 555-1212"
        },
        "mobile": {
          "description": "The mobile phone number for this contact.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "fax": {
          "description": "The facsimile phone number for this contact.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "contactCode": "DEFAULT",
        "firstName": "Bob",
        "lastName": "McExample",
        "title": "Owner",
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "postalCode": "92615",
        "country": "US",
        "email": "bob@example.org",
        "phone": "714 555-1212"
      }
    },
    "ItemModel": {
      "description": "Represents an item in your company's product catalog.",
      "required": ["id", "companyId", "itemCode", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this item.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that owns this item.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "itemCode": {
          "description": "A unique code representing this item.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "CERMUG"
        },
        "taxCodeId": {
          "format": "int32",
          "description": "The unique ID number of the tax code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
          "type": "integer"
        },
        "taxCode": {
          "description": "The unique code string of the Tax Code that is applied when selling this item.\r\nWhen creating or updating an item, you can either specify the Tax Code ID number or the Tax Code string; you do not need to specify both values.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "P0000000"
        },
        "description": {
          "description": "A friendly description of this item in your product catalog.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "example": "Ceramic Mug"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "itemCode": "CERMUG",
        "taxCode": "P0000000",
        "description": "Ceramic Mug"
      }
    },
    "LocationModel": {
      "description": "A location where this company does business.\r\nSome jurisdictions may require you to list all locations where your company does business.",
      "required": ["id", "companyId", "locationCode", "addressTypeId", "addressCategoryId", "line1", "postalCode"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this location.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that operates at this location.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "locationCode": {
          "description": "A code that identifies this location.  Must be unique within your company.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "DEFAULT"
        },
        "description": {
          "description": "A friendly name for this location.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "example": "Bob's Artisan Pottery"
        },
        "addressTypeId": {
          "description": "Indicates whether this location is a physical place of business or a temporary salesperson location.",
          "enum": ["Location", "Salesperson"],
          "type": "string",
          "example": "Location",
          "x-enum-type": "AddressTypeId",
          "x-enum-description": "Indicates whether this address refers to a person or an business",
          "x-enum-value-comments": {
            "Location": "A business location, for example a store, warehouse, or office.",
            "Salesperson": "A person's address who performs sales tasks for the company remotely from an office."
          }
        },
        "addressCategoryId": {
          "description": "Indicates the type of place of business represented by this location.",
          "enum": ["Storefront", "MainOffice", "Warehouse", "Salesperson", "Other"],
          "type": "string",
          "example": "MainOffice",
          "x-enum-type": "AddressCategoryId",
          "x-enum-description": "The type of address represented by this object",
          "x-enum-value-comments": {
            "Storefront": "Address refers to a storefront location",
            "MainOffice": "Address refers to a main office of this company",
            "Warehouse": "Address refers to a warehouse or other non-public location",
            "Salesperson": "Address refers to a location for a single salesperson",
            "Other": "Address is a type not reflected in the other lists"
          }
        },
        "line1": {
          "description": "The first line of the physical address of this location.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "The second line of the physical address of this location.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "The third line of the physical address of this location.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "The city of the physical address of this location.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "county": {
          "description": "The county name of the physical address of this location.  Not required.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Orange"
        },
        "region": {
          "description": "The state, region, or province of the physical address of this location.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "postalCode": {
          "description": "The postal code or zip code of the physical address of this location.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "country": {
          "description": "The two character ISO-3166 country code of the physical address of this location.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "isDefault": {
          "description": "Set this flag to true to indicate that this is the default location for this company.",
          "type": "boolean",
          "example": true
        },
        "isRegistered": {
          "description": "Set this flag to true to indicate that this location has been registered with a tax authority.",
          "type": "boolean",
          "example": true
        },
        "dbaName": {
          "description": "If this location has a different business name from its legal entity name, specify the \"Doing Business As\" name for this location.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "Bob's Artisan Pottery"
        },
        "outletName": {
          "description": "A friendly name for this location.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "Main Office"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The date when this location was opened for business, or null if not known.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "If this place of business has closed, the date when this location closed business.",
          "type": "string"
        },
        "lastTransactionDate": {
          "format": "date-time",
          "description": "The most recent date when a transaction was processed for this location.  Set by AvaTax.",
          "type": "string",
          "readOnly": true
        },
        "registeredDate": {
          "format": "date-time",
          "description": "The date when this location was registered with a tax authority.  Not required.",
          "type": "string",
          "example": "2015-01-01T00:00:00"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "settings": {
          "description": "Extra information required by certain jurisdictions for filing.\r\nFor a list of settings recognized by Avalara, query the endpoint \"/api/v2/definitions/locationquestions\". \r\nTo determine the list of settings required for this location, query the endpoint \"/api/v2/companies/(id)/locations/(id)/validate\".",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationSettingModel"
          }
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "locationCode": "DEFAULT",
        "description": "Bob's Artisan Pottery",
        "addressTypeId": "Location",
        "addressCategoryId": "MainOffice",
        "line1": "123 Main Street",
        "city": "Irvine",
        "county": "Orange",
        "region": "CA",
        "postalCode": "92615",
        "country": "US",
        "isDefault": true,
        "isRegistered": true,
        "dbaName": "Bob's Artisan Pottery",
        "outletName": "Main Office",
        "registeredDate": "2015-01-01T00:00:00"
      }
    },
    "NexusModel": {
      "description": "Represents a declaration of nexus within a particular taxing jurisdiction.",
      "required": ["id", "companyId", "region", "jurisCode", "jurisName"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this declaration of nexus.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that declared nexus.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "country": {
          "description": "The two character ISO-3166 country code of the country in which this company declared nexus.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "readOnly": true,
          "example": "US"
        },
        "region": {
          "description": "The two or three character ISO region code of the region, state, or province in which this company declared nexus.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "CA"
        },
        "jurisTypeId": {
          "description": "The jurisdiction type of the jurisdiction in which this company declared nexus.",
          "enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
          "type": "string",
          "example": "STA",
          "x-enum-type": "JurisTypeId",
          "x-enum-description": "Types of jurisdiction referenced in a transaction",
          "x-enum-value-comments": {
            "STA": "State",
            "CTY": "County",
            "CIT": "City",
            "STJ": "Special",
            "CNT": "Country"
          }
        },
        "jurisCode": {
          "description": "The code identifying the jurisdiction in which this company declared nexus.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "06"
        },
        "jurisName": {
          "description": "The common name of the jurisdiction in which this company declared nexus.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "CALIFORNIA"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The date when this nexus began.  If not known, set to null.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "If this nexus will end or has ended on a specific date, set this to the date when this nexus ends.",
          "type": "string"
        },
        "shortName": {
          "description": "The short name of the jurisdiction.",
          "maxLength": 15,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "CA"
        },
        "signatureCode": {
          "description": "The signature code of the boundary region as defined by Avalara.",
          "maxLength": 4,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": ""
        },
        "stateAssignedNo": {
          "description": "The state assigned number of this jurisdiction.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": ""
        },
        "nexusTypeId": {
          "description": "(DEPRECATED) The type of nexus that this company is declaring.\r\nPlease use NexusTaxTypeGroupId instead.",
          "enum": ["None", "SalesOrSellersUseTax", "SalesTax", "SSTVolunteer", "SSTNonVolunteer"],
          "type": "string",
          "example": "SalesOrSellersUseTax",
          "x-enum-type": "NexusTypeId",
          "x-enum-description": "Describes the different types of statuses which describe an entity (company).",
          "x-enum-value-comments": {
            "None": "Indicates no nexus",
            "SalesOrSellersUseTax": "Indicates the entity is voluntarily collecting tax (default)\n            \n            This has replaced Collect",
            "SalesTax": "Indicates the entity is required to collect tax in the state\n            \n            This has replaced Legal",
            "SSTVolunteer": "Indicates the entity is registered as a Volunteer in an SST state.\n            Only your SST administrator may set this option.",
            "SSTNonVolunteer": "Indicates the entity is registered as a Non-Volunteer in an SST state.\n            Only your SST administrator may set this option."
          }
        },
        "sourcing": {
          "description": "Indicates whether this nexus is defined as origin or destination nexus.",
          "enum": ["Mixed", "Destination", "Origin"],
          "type": "string",
          "x-enum-type": "Sourcing",
          "x-enum-description": "Sourcing",
          "x-enum-value-comments": {
            "Origin": "Origin",
            "Destination": "Destination",
            "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
          }
        },
        "hasLocalNexus": {
          "description": "True if you are also declaring local nexus within this jurisdiction.\r\nMany U.S. states have options for declaring nexus in local jurisdictions as well as within the state.",
          "type": "boolean",
          "example": true
        },
        "localNexusTypeId": {
          "description": "If you are declaring local nexus within this jurisdiction, this indicates whether you are declaring only \r\na specified list of local jurisdictions, all state-administered local jurisdictions, or all local jurisdictions.",
          "enum": ["Selected", "StateAdministered", "All"],
          "type": "string",
          "x-enum-type": "LocalNexusTypeId",
          "x-enum-description": "Describes nexus type id",
          "x-enum-value-comments": {
            "Selected": "Selected",
            "StateAdministered": "StateAdministered",
            "All": "All"
          }
        },
        "hasPermanentEstablishment": {
          "description": "Set this value to true if your company has a permanent establishment within this jurisdiction.",
          "type": "boolean",
          "example": true
        },
        "taxId": {
          "description": "Optional - the tax identification number under which you declared nexus.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "streamlinedSalesTax": {
          "description": "For the United States, this flag indicates whether this particular nexus falls within a U.S. State that participates \r\nin the Streamlined Sales Tax program.  For countries other than the US, this flag is null.",
          "type": "boolean",
          "example": false
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true,
          "example": "2017-05-16T16:22:03.9631084Z"
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true,
          "example": 285475
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true,
          "example": "2017-05-16T16:22:03.9631084Z"
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true,
          "example": 285475
        },
        "nexusTaxTypeGroup": {
          "description": "The type of nexus that this company is declaring.Replaces NexusTypeId.\r\nUse /api/v2/definitions/nexustaxtypegroup for a list of tax type groups.",
          "type": "string",
          "example": "SalesAndUse"
        }
      },
      "example": {
        "id": 0,
        "companyId": 0,
        "country": "US",
        "region": "CA",
        "jurisTypeId": "STA",
        "jurisCode": "06",
        "jurisName": "CALIFORNIA",
        "shortName": "CA",
        "signatureCode": "",
        "stateAssignedNo": "",
        "nexusTypeId": "SalesOrSellersUseTax",
        "hasLocalNexus": true,
        "hasPermanentEstablishment": true,
        "streamlinedSalesTax": false,
        "createdDate": "2017-05-16T16:22:03.9631084Z",
        "createdUserId": 285475,
        "modifiedDate": "2017-05-16T16:22:03.9631084Z",
        "modifiedUserId": 285475,
        "nexusTaxTypeGroup": "SalesAndUse"
      }
    },
    "SettingModel": {
      "description": "This object is used to keep track of custom information about a company.\r\nA setting can refer to any type of data you need to remember about this company object.\r\nWhen creating this object, you may define your own \"set\", \"name\", and \"value\" parameters.\r\nTo define your own values, please choose a \"set\" name that begins with \"X-\" to indicate an extension.",
      "required": ["id", "companyId", "set", "name"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this setting.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company this setting refers to.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "set": {
          "description": "A user-defined \"set\" containing this name-value pair.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "ItemsToRemember"
        },
        "name": {
          "description": "A user-defined \"name\" for this name-value pair.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Texas"
        },
        "value": {
          "description": "The value of this name-value pair.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "Alamo"
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "set": "ItemsToRemember",
        "name": "Texas",
        "value": "Alamo"
      }
    },
    "TaxCodeModel": {
      "description": "Represents a tax code that can be applied to items on a transaction.\r\nA tax code can have specific rules for specific jurisdictions that change the tax calculation behavior.",
      "required": ["id", "companyId", "taxCode", "taxCodeTypeId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax code.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that owns this tax code.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "taxCode": {
          "description": "A code string that identifies this tax code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PS081282"
        },
        "taxCodeTypeId": {
          "description": "The type of this tax code.",
          "maxLength": 2,
          "minLength": 0,
          "type": "string",
          "example": "P"
        },
        "description": {
          "description": "A friendly description of this tax code.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "example": "Yarn"
        },
        "parentTaxCode": {
          "description": "If this tax code is a subset of a different tax code, this identifies the parent code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PS080100"
        },
        "isPhysical": {
          "description": "True if this tax code type refers to a physical object.  Read only field.",
          "type": "boolean",
          "readOnly": true,
          "example": true
        },
        "goodsServiceCode": {
          "format": "int64",
          "description": "The Avalara Goods and Service Code represented by this tax code.",
          "type": "integer",
          "example": 0
        },
        "entityUseCode": {
          "description": "The Avalara Entity Use Code represented by this tax code.",
          "maxLength": 40,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "isActive": {
          "description": "True if this tax code is active and can be used in transactions.",
          "type": "boolean",
          "example": true
        },
        "isSSTCertified": {
          "description": "True if this tax code has been certified by the Streamlined Sales Tax governing board.\r\nBy default, you should leave this value empty.",
          "type": "boolean",
          "example": false
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "taxCode": "PS081282",
        "taxCodeTypeId": "P",
        "description": "Yarn",
        "parentTaxCode": "PS080100",
        "isPhysical": true,
        "goodsServiceCode": 0,
        "entityUseCode": "",
        "isActive": true,
        "isSSTCertified": false
      }
    },
    "TaxRuleModel": {
      "description": "Represents a tax rule that changes the behavior of Avalara's tax engine for certain products in certain jurisdictions.",
      "required": ["id", "companyId", "jurisCode", "country", "region"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax rule.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that owns this tax rule.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "taxCodeId": {
          "format": "int32",
          "description": "The unique ID number of the tax code for this rule.\r\nWhen creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
          "type": "integer"
        },
        "taxCode": {
          "description": "The code string of the tax code for this rule.\r\nWhen creating or updating a tax rule, you may specify either the taxCodeId value or the taxCode value.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "FR020800"
        },
        "stateFIPS": {
          "description": "For U.S. tax rules, this is the state's Federal Information Processing Standard (FIPS) code.",
          "maxLength": 2,
          "minLength": 0,
          "type": "string",
          "example": "04"
        },
        "jurisName": {
          "description": "The name of the jurisdiction to which this tax rule applies.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "MARICOPA"
        },
        "jurisCode": {
          "description": "The code of the jurisdiction to which this tax rule applies.",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": "013"
        },
        "jurisTypeId": {
          "description": "The type of the jurisdiction to which this tax rule applies.",
          "enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
          "type": "string",
          "example": "CTY",
          "x-enum-type": "JurisTypeId",
          "x-enum-description": "Types of jurisdiction referenced in a transaction",
          "x-enum-value-comments": {
            "STA": "State",
            "CTY": "County",
            "CIT": "City",
            "STJ": "Special",
            "CNT": "Country"
          }
        },
        "customerUsageType": {
          "description": "The type of customer usage to which this rule applies.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "taxTypeId": {
          "description": "Indicates which tax types to which this rule applies.",
          "enum": ["Excise", "Lodging", "Bottle", "All", "BothSalesAndUseTax", "ConsumerUseTax", "ConsumersUseAndSellersUseTax", "ConsumerUseAndSalesTax", "Fee", "VATInputTax", "VATNonrecoverableInputTax", "VATOutputTax", "Rental", "SalesTax", "UseTax"],
          "type": "string",
          "example": "BothSalesAndUseTax",
          "x-enum-type": "MatchingTaxType",
          "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
          "x-enum-value-comments": {
            "All": "Match all tax types",
            "BothSalesAndUseTax": "Match both Sales and Use Tax only",
            "ConsumerUseTax": "Match Consumer Use Tax only",
            "SalesTax": "Match Sales Tax only",
            "UseTax": "Match Seller's Use Tax only",
            "VATOutputTax": "Match VAT Output Tax only",
            "VATInputTax": "Match VAT Input Tax only",
            "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
            "Fee": "Match Fee tax types only",
            "Rental": "Match Rental tax types only",
            "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
            "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
            "Excise": "Match medical excise type",
            "Lodging": "Match Lodging tax type",
            "Bottle": "Match bottle tax type"
          }
        },
        "rateTypeId": {
          "description": "(DEPRECATED) Enumerated rate type to which this rule applies.  Please use rateTypeCode instead.",
          "enum": ["ReducedA", "ReducedB", "Food", "General", "IncreasedStandard", "LinenRental", "Medical", "Parking", "SuperReduced", "ReducedR", "Standard", "Zero"],
          "type": "string",
          "x-enum-type": "RateType",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "rateTypeCode": {
          "description": "Indicates the code of the rate type that applies to this rule.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
          "maxLength": 1,
          "minLength": 0,
          "type": "string"
        },
        "taxRuleTypeId": {
          "description": "This type value determines the behavior of the tax rule.\r\nYou can specify that this rule controls the product's taxability or exempt / nontaxable status, the product's rate \r\n(for example, if you have been granted an official ruling for your product's rate that differs from the official rate), \r\nor other types of behavior.",
          "enum": ["RateRule", "RateOverrideRule", "BaseRule", "ExemptEntityRule", "ProductTaxabilityRule", "NexusRule"],
          "type": "string",
          "example": "ProductTaxabilityRule",
          "x-enum-type": "TaxRuleTypeId",
          "x-enum-description": "TaxRuleTypeId",
          "x-enum-value-comments": {
            "RateRule": "RateRule",
            "RateOverrideRule": "RateOverrideRule",
            "BaseRule": "BaseRule",
            "ExemptEntityRule": "ExemptEntityRule",
            "ProductTaxabilityRule": "ProductTaxabilityRule",
            "NexusRule": "NexusRule"
          }
        },
        "isAllJuris": {
          "description": "Set this value to true if this tax rule applies in all jurisdictions.",
          "type": "boolean",
          "example": true
        },
        "value": {
          "format": "double",
          "description": "The corrected rate for this tax rule.",
          "type": "number",
          "example": 0.0
        },
        "cap": {
          "format": "double",
          "description": "The maximum cap for the price of this item according to this rule.",
          "type": "number",
          "example": 0.0
        },
        "threshold": {
          "format": "double",
          "description": "The per-unit threshold that must be met before this rule applies.",
          "type": "number",
          "example": 0.0
        },
        "options": {
          "description": "Custom option flags for this rule.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The first date at which this rule applies.  If null, this rule will apply to all dates prior to the end date.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "The last date for which this rule applies.  If null, this rule will apply to all dates after the effective date.",
          "type": "string"
        },
        "description": {
          "description": "A friendly name for this tax rule.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "example": "Freight"
        },
        "countyFIPS": {
          "description": "For U.S. tax rules, this is the county's Federal Information Processing Standard (FIPS) code.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "013"
        },
        "isSTPro": {
          "description": "If true, indicates this rule is for Sales Tax Pro.",
          "type": "boolean",
          "example": false
        },
        "country": {
          "description": "The two character ISO 3166 country code for the locations where this rule applies.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "region": {
          "description": "The state, region, or province name for the locations where this rule applies.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "AZ"
        },
        "sourcing": {
          "description": "The sourcing types to which this rule applies.",
          "enum": ["Mixed", "Destination", "Origin"],
          "type": "string",
          "x-enum-type": "Sourcing",
          "x-enum-description": "Sourcing",
          "x-enum-value-comments": {
            "Origin": "Origin",
            "Destination": "Destination",
            "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "taxTypeGroup": {
          "description": "The group Id of tax types supported by Avalara. Refer to /api/v2/definitions/taxtypegroups for types we support.",
          "type": "string",
          "example": "SalesAndUse"
        },
        "taxSubType": {
          "description": "The Id of sub tax types supported by Avalara. Refer to /api/v2/definitions/taxsubtypes for types we support.",
          "type": "string",
          "example": "ALL"
        },
        "taxTypeMappingId": {
          "format": "int32",
          "description": "Id for TaxTypeMapping object",
          "type": "integer",
          "readOnly": true
        },
        "rateTypeTaxTypeMappingId": {
          "format": "int32",
          "description": "Id for RateTypeTaxTypeMapping object",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "taxCode": "FR020800",
        "stateFIPS": "04",
        "jurisName": "MARICOPA",
        "jurisCode": "013",
        "jurisTypeId": "CTY",
        "customerUsageType": "",
        "taxTypeId": "BothSalesAndUseTax",
        "taxRuleTypeId": "ProductTaxabilityRule",
        "isAllJuris": true,
        "value": 0.0,
        "cap": 0.0,
        "threshold": 0.0,
        "options": "",
        "effectiveDate": "2017-05-16",
        "description": "Freight",
        "countyFIPS": "013",
        "isSTPro": false,
        "country": "US",
        "region": "AZ",
        "taxTypeGroup": "SalesAndUse",
        "taxSubType": "ALL"
      }
    },
    "UPCModel": {
      "description": "One Universal Product Code object as defined for your company.",
      "required": ["id", "companyId", "upc", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number for this UPC.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company to which this UPC belongs.",
          "type": "integer",
          "readOnly": true,
          "example": 1234567
        },
        "upc": {
          "description": "The 12-14 character Universal Product Code, European Article Number, or Global Trade Identification Number.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "023032550992"
        },
        "legacyTaxCode": {
          "description": "Legacy Tax Code applied to any product sold with this UPC.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "PS081282"
        },
        "description": {
          "description": "Description of the product to which this UPC applies.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "example": "Yarn"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "If this UPC became effective on a certain date, this contains the first date on which the UPC was effective.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "If this UPC expired or will expire on a certain date, this contains the last date on which the UPC was effective.",
          "type": "string"
        },
        "usage": {
          "format": "int32",
          "description": "A usage identifier for this UPC code.",
          "type": "integer"
        },
        "isSystem": {
          "format": "int32",
          "description": "A flag indicating whether this UPC code is attached to the AvaTax system or to a company.",
          "type": "integer"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 123456789,
        "companyId": 1234567,
        "upc": "023032550992",
        "legacyTaxCode": "PS081282",
        "description": "Yarn"
      }
    },
    "LocationSettingModel": {
      "description": "Represents the answer to one local jurisdiction question for a location.",
      "type": "object",
      "properties": {
        "questionId": {
          "format": "int32",
          "description": "The unique ID number of the location question answered.",
          "type": "integer"
        },
        "value": {
          "description": "The answer the user provided.",
          "type": "string"
        }
      },
      "example": {}
    },
    "FetchResult[CompanyModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "CompanyInitializationModel": {
      "description": "Company Initialization Model",
      "required": ["name", "companyCode", "line1", "city", "region", "postalCode", "country", "firstName", "lastName", "email", "phoneNumber"],
      "type": "object",
      "properties": {
        "name": {
          "description": "Company Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Bob's Artisan Pottery"
        },
        "companyCode": {
          "description": "Company Code - used to distinguish between companies within your accounting system",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "DEFAULT"
        },
        "vatRegistrationId": {
          "description": "Vat Registration Id - leave blank if not known.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxpayerIdNumber": {
          "description": "United States Taxpayer ID number, usually your Employer Identification Number if you are a business or your \r\nSocial Security Number if you are an individual.\r\nThis value is required if you subscribe to Avalara Managed Returns or the SST Certified Service Provider services, \r\nbut it is optional if you do not subscribe to either of those services.",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "12-3456789"
        },
        "line1": {
          "description": "Address Line1",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "Line2",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "Line3",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "City",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "Two character ISO 3166 Region code for this company's primary business location.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "postalCode": {
          "description": "Postal Code",
          "maxLength": 10,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "country": {
          "description": "Two character ISO 3166 Country code for this company's primary business location.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "firstName": {
          "description": "First Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Bob"
        },
        "lastName": {
          "description": "Last Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Example"
        },
        "title": {
          "description": "Title",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Owner"
        },
        "email": {
          "description": "Email",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "bob@example.org"
        },
        "phoneNumber": {
          "description": "Phone Number",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "714 555-2121"
        },
        "mobileNumber": {
          "description": "Mobile Number",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "714 555-1212"
        },
        "faxNumber": {
          "description": "Fax Number",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        }
      },
      "example": {
        "name": "Bob's Artisan Pottery",
        "companyCode": "DEFAULT",
        "taxpayerIdNumber": "12-3456789",
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "postalCode": "92615",
        "country": "US",
        "firstName": "Bob",
        "lastName": "Example",
        "title": "Owner",
        "email": "bob@example.org",
        "phoneNumber": "714 555-2121",
        "mobileNumber": "714 555-1212"
      }
    },
    "FundingStatusModel": {
      "description": "Status of an Avalara Managed Returns funding configuration for a company",
      "type": "object",
      "properties": {
        "requestId": {
          "format": "int64",
          "description": "The unique ID number of this funding request",
          "type": "integer"
        },
        "subledgerProfileID": {
          "format": "int32",
          "description": "SubledgerProfileID",
          "type": "integer"
        },
        "companyID": {
          "description": "CompanyID",
          "type": "string"
        },
        "domain": {
          "description": "Domain",
          "type": "string"
        },
        "recipient": {
          "description": "Recipient",
          "type": "string"
        },
        "sender": {
          "description": "Sender",
          "type": "string"
        },
        "documentKey": {
          "description": "DocumentKey",
          "type": "string"
        },
        "documentType": {
          "description": "DocumentType",
          "type": "string"
        },
        "documentName": {
          "description": "DocumentName",
          "type": "string"
        },
        "methodReturn": {
          "$ref": "#/definitions/FundingESignMethodReturn",
          "description": "MethodReturn"
        },
        "status": {
          "description": "Status",
          "type": "string"
        },
        "errorMessage": {
          "description": "ErrorMessage",
          "type": "string"
        },
        "lastPolled": {
          "format": "date-time",
          "description": "LastPolled",
          "type": "string"
        },
        "lastSigned": {
          "format": "date-time",
          "description": "LastSigned",
          "type": "string"
        },
        "lastActivated": {
          "format": "date-time",
          "description": "LastActivated",
          "type": "string"
        },
        "templateRequestId": {
          "format": "int64",
          "description": "TemplateRequestId",
          "type": "integer"
        }
      },
      "example": {
        "requestId": 12345,
        "subledgerProfileID": 12345,
        "companyID": "123456",
        "domain": "AvaTax15",
        "recipient": "bob@example.org",
        "sender": "treasury@avalara.com",
        "documentKey": "RTdIy3AAABLblqZhBCV9kul4F1qC -",
        "documentType": "ACH",
        "documentName": "New Customer - Avalara Returns Funding Power of Attorney",
        "methodReturn": {
          "javaScriptReady": false
        },
        "status": "Expired",
        "lastPolled": "2016-01-01T20:16:17",
        "lastActivated": "2016-01-01T19:16:17"
      }
    },
    "FundingESignMethodReturn": {
      "description": "Represents the current status of a funding ESign method",
      "type": "object",
      "properties": {
        "method": {
          "description": "Method",
          "type": "string"
        },
        "javaScriptReady": {
          "description": "JavaScriptReady",
          "type": "boolean"
        },
        "javaScript": {
          "description": "The actual javascript to use to render this object",
          "type": "string"
        }
      },
      "example": {}
    },
    "FundingInitiateModel": {
      "description": "",
      "required": ["fundingEmailRecipient"],
      "type": "object",
      "properties": {
        "requestEmail": {
          "description": "Set this value to true to request an email to the recipient",
          "type": "boolean",
          "example": true
        },
        "fundingEmailRecipient": {
          "description": "If you have requested an email for funding setup, this is the recipient who will receive an \r\nemail inviting them to setup funding configuration for Avalara Managed Returns.  The recipient can\r\nthen click on a link in the email and setup funding configuration for this company.",
          "type": "string",
          "example": "user@example.org"
        },
        "requestWidget": {
          "description": "Set this value to true to request an HTML-based funding widget that can be embedded within an \r\nexisting user interface.  A user can then interact with the HTML-based funding widget to set up\r\nfunding information for the company.",
          "type": "boolean"
        }
      },
      "example": {
        "requestEmail": true,
        "fundingEmailRecipient": "user@example.org"
      }
    },
    "CompanyConfigurationModel": {
      "description": "Represents one configuration setting for this company",
      "required": ["category", "name"],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the account to which this setting applies",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "category": {
          "description": "The category of the configuration setting.  Avalara-defined categories include `AddressServiceConfig` and `TaxServiceConfig`.  Customer-defined categories begin with `X-`.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "AvaCertServiceConfig"
        },
        "name": {
          "description": "The name of the configuration setting",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "AllowPending"
        },
        "value": {
          "description": "The current value of the configuration setting",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "true"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "companyId": 0,
        "category": "AvaCertServiceConfig",
        "name": "AllowPending",
        "value": "true"
      }
    },
    "FetchResult[ContactModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[NexusModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NexusModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NexusByTaxFormModel": {
      "description": "Identifies all nexus that match a particular tax form",
      "type": "object",
      "properties": {
        "formCode": {
          "description": "The code of the tax form that was requested",
          "type": "string",
          "example": "AL2100"
        },
        "companyId": {
          "format": "int32",
          "description": "The company ID of the company that was used to load the companyNexus array.  If this value is null, no company data was loaded.",
          "type": "integer",
          "example": 1
        },
        "nexusDefinitions": {
          "description": "A list of all Avalara-defined nexus that are relevant to this tax form",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NexusModel"
          },
          "example": [{
            "id": 42145,
            "companyId": 1,
            "country": "US",
            "region": "AL",
            "jurisTypeId": "STA",
            "jurisCode": "01",
            "jurisName": "ALABAMA",
            "shortName": "AL",
            "signatureCode": "",
            "stateAssignedNo": "",
            "nexusTypeId": "SalesOrSellersUseTax",
            "hasLocalNexus": true,
            "hasPermanentEstablishment": true,
            "streamlinedSalesTax": false,
            "createdDate": "2005-12-21T21:15:41.78",
            "createdUserId": 0,
            "modifiedDate": "2005-12-21T21:15:41.78",
            "modifiedUserId": 0,
            "nexusTaxTypeGroup": "SalesAndUse"
          }]
        },
        "companyNexus": {
          "description": "A list of all currently-defined company nexus that are related to this tax form",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NexusModel"
          },
          "example": []
        }
      },
      "example": {
        "formCode": "AL2100",
        "companyId": 1,
        "nexusDefinitions": [{
          "id": 42145,
          "companyId": 1,
          "country": "US",
          "region": "AL",
          "jurisTypeId": "STA",
          "jurisCode": "01",
          "jurisName": "ALABAMA",
          "shortName": "AL",
          "signatureCode": "",
          "stateAssignedNo": "",
          "nexusTypeId": "SalesOrSellersUseTax",
          "hasLocalNexus": true,
          "hasPermanentEstablishment": true,
          "streamlinedSalesTax": false,
          "createdDate": "2005-12-21T21:15:41.78",
          "createdUserId": 0,
          "modifiedDate": "2005-12-21T21:15:41.78",
          "modifiedUserId": 0,
          "nexusTaxTypeGroup": "SalesAndUse"
        }],
        "companyNexus": []
      }
    },
    "FetchResult[TaxCodeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxCodeTypesModel": {
      "description": "Information about Avalara-defined tax code types.\r\nThis list is used when creating tax codes and tax rules.",
      "type": "object",
      "properties": {
        "types": {
          "description": "The list of Avalara-defined tax code types.",
          "type": "object",
          "properties": {},
          "example": {
            "D": "Digital",
            "F": "Freight",
            "O": "Other",
            "P": "Product",
            "S": "Service",
            "U": "Unknown"
          }
        }
      },
      "example": {
        "types": {
          "D": "Digital",
          "F": "Freight",
          "O": "Other",
          "P": "Product",
          "S": "Service",
          "U": "Unknown"
        }
      }
    },
    "FetchResult[SubscriptionTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "SubscriptionTypeModel": {
      "description": "Represents a service or a subscription type.",
      "required": ["description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this subscription type.",
          "type": "integer",
          "readOnly": true,
          "example": 2
        },
        "description": {
          "description": "The friendly name of the service this subscription type represents.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "AvaTaxPro"
        }
      },
      "example": {
        "id": 2,
        "description": "AvaTaxPro"
      }
    },
    "FetchResult[String]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[SecurityRoleModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRoleModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "SecurityRoleModel": {
      "description": "Represents a single security role.",
      "type": "object",
      "properties": {
        "id": {
          "format": "byte",
          "description": "The unique ID number of this security role.",
          "type": "integer",
          "readOnly": true,
          "example": 3
        },
        "description": {
          "description": "A description of this security role",
          "type": "string",
          "readOnly": true,
          "example": "AccountAdmin"
        }
      },
      "example": {
        "id": 3,
        "description": "AccountAdmin"
      }
    },
    "FetchResult[TaxAuthorityModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxAuthorityModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxAuthorityModel": {
      "description": "Tax Authority Model",
      "required": ["id", "name"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax authority.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "name": {
          "description": "The friendly name of this tax authority.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string",
          "example": "COLORADO"
        },
        "taxAuthorityTypeId": {
          "format": "int32",
          "description": "The type of this tax authority.",
          "type": "integer",
          "example": 45
        },
        "jurisdictionId": {
          "format": "int32",
          "description": "The unique ID number of the jurisdiction for this tax authority.",
          "type": "integer",
          "example": 12345
        }
      },
      "example": {
        "id": 12345,
        "name": "COLORADO",
        "taxAuthorityTypeId": 45,
        "jurisdictionId": 12345
      }
    },
    "FetchResult[TaxAuthorityFormModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxAuthorityFormModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxAuthorityFormModel": {
      "description": "Represents a form that can be filed with a tax authority.",
      "required": ["taxAuthorityId", "formName"],
      "type": "object",
      "properties": {
        "taxAuthorityId": {
          "format": "int32",
          "description": "The unique ID number of the tax authority.",
          "type": "integer",
          "example": 69
        },
        "formName": {
          "description": "The form name of the form for this tax authority.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "CABOE401A2"
        }
      },
      "example": {
        "taxAuthorityId": 69,
        "formName": "CABOE401A2"
      }
    },
    "FetchResult[ParameterModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParameterModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "ParameterModel": {
      "description": "An extra property that can change the behavior of tax transactions.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this property.",
          "type": "integer",
          "example": 12345
        },
        "category": {
          "description": "The service category of this property.  Some properties may require that you subscribe to certain features of avatax before they can be used.",
          "type": "string",
          "example": "Lodging"
        },
        "name": {
          "description": "The name of the property.  To use this property, add a field on the \"properties\" object of a /api/v2/companies/(code)/transactions/create call.",
          "type": "string",
          "example": "AvaTax.Lodging.NumberOfNights"
        },
        "dataType": {
          "description": "The data type of the property.",
          "enum": ["String", "Boolean", "Numeric"],
          "type": "string",
          "example": "Numeric",
          "x-enum-type": "ParameterBagDataType",
          "x-enum-description": "The data type that must be passed in a parameter bag",
          "x-enum-value-comments": {
            "String": "This data type is a string.",
            "Boolean": "This data type is either 'true' or 'false'.",
            "Numeric": "This data type is a numeric value.  It can include decimals."
          }
        },
        "description": {
          "description": "A full description of this property.",
          "type": "string",
          "example": "Lodging Number of Nights"
        }
      },
      "example": {
        "id": 12345,
        "category": "Lodging",
        "name": "AvaTax.Lodging.NumberOfNights",
        "dataType": "Numeric",
        "description": "Lodging Number of Nights"
      }
    },
    "FetchResult[LocationQuestionModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationQuestionModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "LocationQuestionModel": {
      "description": "Information about questions that the local jurisdictions require for each location",
      "required": ["id", "question", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this location setting type",
          "type": "integer",
          "example": 1
        },
        "question": {
          "description": "This is the prompt for this question",
          "type": "string",
          "example": "State Assigned Code"
        },
        "description": {
          "description": "If additional information is available about the location setting, this contains descriptive text to help\r\nyou identify the correct value to provide in this setting.",
          "type": "string",
          "example": ""
        },
        "regularExpression": {
          "description": "If available, this regular expression will verify that the input from the user is in the expected format.",
          "type": "string"
        },
        "exampleValue": {
          "description": "If available, this is an example value that you can demonstrate to the user to show what is expected.",
          "type": "string"
        },
        "jurisdictionName": {
          "description": "Indicates which jurisdiction requires this question",
          "type": "string"
        },
        "jurisdictionType": {
          "description": "Indicates which type of jurisdiction requires this question",
          "enum": ["Country", "Composite", "State", "County", "City", "Special"],
          "type": "string",
          "example": "Country",
          "x-enum-type": "JurisdictionType",
          "x-enum-description": "Jurisdiction Type",
          "x-enum-value-comments": {
            "Country": "Country",
            "Composite": "Deprecated",
            "State": "State",
            "County": "County",
            "City": "City",
            "Special": "Special Tax Jurisdiction"
          }
        },
        "jurisdictionCountry": {
          "description": "Indicates the country that this jurisdiction belongs to",
          "type": "string"
        },
        "jurisdictionRegion": {
          "description": "Indicates the state, region, or province that this jurisdiction belongs to",
          "type": "string"
        }
      },
      "example": {
        "id": 1,
        "question": "State Assigned Code",
        "description": "",
        "jurisdictionType": "Country"
      }
    },
    "FetchResult[IsoCountryModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IsoCountryModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "IsoCountryModel": {
      "description": "Represents an ISO 3166 recognized country",
      "required": ["code", "name"],
      "type": "object",
      "properties": {
        "code": {
          "description": "The two character ISO 3166 country code",
          "type": "string",
          "example": "FR"
        },
        "name": {
          "description": "The full name of this country as it is known in US English",
          "type": "string",
          "example": "France"
        },
        "isEuropeanUnion": {
          "description": "True if this country is a member of the European Union",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "code": "FR",
        "name": "France",
        "isEuropeanUnion": true
      }
    },
    "FetchResult[IsoRegionModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IsoRegionModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "IsoRegionModel": {
      "description": "Represents a region, province, or state within a country",
      "type": "object",
      "properties": {
        "countryCode": {
          "description": "The two-character ISO 3166 country code this region belongs to",
          "type": "string",
          "example": "US"
        },
        "code": {
          "description": "The three character ISO 3166 region code",
          "type": "string",
          "example": "CA"
        },
        "name": {
          "description": "The full name, using localized characters, for this region",
          "type": "string",
          "example": "California"
        },
        "classification": {
          "description": "The word in the local language that classifies what type of a region this represents",
          "type": "string",
          "example": "State"
        },
        "streamlinedSalesTax": {
          "description": "For the United States, this flag indicates whether a U.S. State participates in the Streamlined\r\nSales Tax program.  For countries other than the US, this flag is null.",
          "type": "boolean"
        }
      },
      "example": {
        "countryCode": "US",
        "code": "CA",
        "name": "California",
        "classification": "State"
      }
    },
    "FetchResult[EntityUseCodeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityUseCodeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "EntityUseCodeModel": {
      "description": "Represents a code describing the intended use for a product that may affect its taxability",
      "type": "object",
      "properties": {
        "code": {
          "description": "The Avalara-recognized entity use code for this definition",
          "type": "string",
          "example": "A"
        },
        "name": {
          "description": "The name of this entity use code",
          "type": "string",
          "example": "FEDERAL GOV"
        },
        "description": {
          "description": "Text describing the meaning of this use code",
          "type": "string",
          "example": ""
        },
        "validCountries": {
          "description": "A list of countries where this use code is valid",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["US"]
        }
      },
      "example": {
        "code": "A",
        "name": "FEDERAL GOV",
        "description": "",
        "validCountries": ["US"]
      }
    },
    "FetchResult[TaxAuthorityTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxAuthorityTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxAuthorityTypeModel": {
      "description": "Tax Authority Type Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax Authority customer type.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "County"
        },
        "taxAuthorityGroup": {
          "description": "Tax Authority Group",
          "type": "string",
          "example": "LocalCounty"
        }
      },
      "example": {
        "id": 0,
        "description": "County",
        "taxAuthorityGroup": "LocalCounty"
      }
    },
    "FetchResult[NoticeStatusModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeStatusModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeStatusModel": {
      "description": "Tax Notice Status Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax authority type.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "City"
        },
        "isOpen": {
          "description": "True if a tax notice in this status is considered 'open' and has more work expected to be done before it is closed.",
          "type": "boolean",
          "example": false
        },
        "sortOrder": {
          "format": "int32",
          "description": "If a list of status values is to be displayed in a dropdown, they should be displayed in this numeric order.",
          "type": "integer",
          "example": 0
        }
      },
      "example": {
        "id": 12345,
        "description": "City",
        "isOpen": false,
        "sortOrder": 0
      }
    },
    "FetchResult[NoticeCustomerTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeCustomerTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeCustomerTypeModel": {
      "description": "Tax Authority Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer type.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "City"
        },
        "activeFlag": {
          "description": "A flag if the type is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the types",
          "type": "integer",
          "example": 5
        }
      },
      "example": {
        "id": 12345,
        "description": "City",
        "activeFlag": true,
        "sortOrder": 5
      }
    },
    "FetchResult[NoticeReasonModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeReasonModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeReasonModel": {
      "description": "Tax Notice Reason Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer type.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "AvaTax Returns"
        },
        "activeFlag": {
          "description": "A flag if the type is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the types",
          "type": "integer",
          "example": 5
        }
      },
      "example": {
        "id": 1,
        "description": "AvaTax Returns",
        "activeFlag": true,
        "sortOrder": 5
      }
    },
    "FetchResult[FilingFrequencyModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingFrequencyModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FilingFrequencyModel": {
      "description": "FilingFrequency Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this filing frequency.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "description": {
          "description": "The description name of this filing frequency",
          "type": "string",
          "example": "Monthly"
        }
      },
      "example": {
        "id": 1,
        "description": "Monthly"
      }
    },
    "FetchResult[NoticeFilingTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeFilingTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeFilingTypeModel": {
      "description": "Tax Notice FilingType Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer type.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "Electronic Return "
        },
        "activeFlag": {
          "description": "A flag if the type is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the types",
          "type": "integer",
          "example": 5
        }
      },
      "example": {
        "id": 1,
        "description": "Electronic Return ",
        "activeFlag": true,
        "sortOrder": 5
      }
    },
    "FetchResult[NoticeTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeTypeModel": {
      "description": "Tax Notice Type Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer type.",
          "type": "integer",
          "readOnly": true,
          "example": 2
        },
        "description": {
          "description": "The description name of this tax authority type.",
          "type": "string",
          "example": "Notices"
        },
        "activeFlag": {
          "description": "A flag if the type is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the types",
          "type": "integer",
          "example": 10
        }
      },
      "example": {
        "id": 2,
        "description": "Notices",
        "activeFlag": true,
        "sortOrder": 10
      }
    },
    "FetchResult[NoticeCustomerFundingOptionModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeCustomerFundingOptionModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeCustomerFundingOptionModel": {
      "description": "Tax Authority Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer FundingOption.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "description": {
          "description": "The description name of this tax authority FundingOption.",
          "type": "string",
          "example": "Pull"
        },
        "activeFlag": {
          "description": "A flag if the FundingOption is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the FundingOptions",
          "type": "integer",
          "example": 5
        }
      },
      "example": {
        "id": 1,
        "description": "Pull",
        "activeFlag": true,
        "sortOrder": 5
      }
    },
    "FetchResult[NoticePriorityModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticePriorityModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticePriorityModel": {
      "description": "Tax Notice Priority Model",
      "required": ["id", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax notice customer Priority.",
          "type": "integer",
          "readOnly": true,
          "example": 2
        },
        "description": {
          "description": "The description name of this tax authority Priority.",
          "type": "string",
          "example": "High"
        },
        "activeFlag": {
          "description": "A flag if the Priority is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "sort order of the Prioritys",
          "type": "integer",
          "example": 10
        }
      },
      "example": {
        "id": 2,
        "description": "High",
        "activeFlag": true,
        "sortOrder": 10
      }
    },
    "FetchResult[NoticeResponsibilityModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeResponsibilityModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeResponsibilityModel": {
      "description": "NoticeResponsibility Model",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this notice responsibility.",
          "type": "integer",
          "example": 11
        },
        "description": {
          "description": "The description name of this notice responsibility",
          "type": "string",
          "example": "Customer-Invalid login (Return filed manual)"
        },
        "isActive": {
          "description": "Defines if the responsibility is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "The sort order of this responsibility",
          "type": "integer",
          "example": 55
        }
      },
      "example": {
        "id": 11,
        "description": "Customer-Invalid login (Return filed manual)",
        "isActive": true,
        "sortOrder": 55
      }
    },
    "FetchResult[NoticeRootCauseModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeRootCauseModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NoticeRootCauseModel": {
      "description": "NoticeRootCause Model",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this notice RootCause.",
          "type": "integer",
          "example": 11
        },
        "description": {
          "description": "The description name of this notice RootCause",
          "type": "string",
          "example": "Customer-Invalid login (Return filed manual)"
        },
        "isActive": {
          "description": "Defines if the RootCause is active",
          "type": "boolean",
          "example": true
        },
        "sortOrder": {
          "format": "int32",
          "description": "The sort order of this RootCause",
          "type": "integer",
          "example": 55
        }
      },
      "example": {
        "id": 11,
        "description": "Customer-Invalid login (Return filed manual)",
        "isActive": true,
        "sortOrder": 55
      }
    },
    "FetchResult[SkyscraperStatusModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SkyscraperStatusModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "SkyscraperStatusModel": {
      "description": "Represents a list of statuses of returns available in skyscraper",
      "type": "object",
      "properties": {
        "name": {
          "description": "The specific name of the returns available in skyscraper",
          "type": "string",
          "example": "AL"
        },
        "taxFormCodes": {
          "description": "The tax form codes available to file through skyscrper",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["USAL21009501"]
        },
        "country": {
          "description": "The country of the returns",
          "type": "string",
          "example": "US"
        },
        "scraperType": {
          "description": "They Scraper type",
          "enum": ["Login", "CustomerDorData"],
          "type": "string",
          "example": "Login",
          "x-enum-type": "ScraperType",
          "x-enum-description": "Type of verification task",
          "x-enum-value-comments": {
            "Login": "Indicates that is is a login type",
            "CustomerDorData": "Indicates that it is a Customer DOR Data type"
          }
        },
        "isAvailable": {
          "description": "Indicates if the return is currently available",
          "type": "boolean",
          "example": true
        },
        "expectedResponseTime": {
          "description": "The expected response time of the call",
          "type": "string",
          "example": "00:30:00"
        },
        "message": {
          "description": "Message on the returns",
          "type": "string",
          "example": "Message"
        },
        "requiredFilingCalendarDataFields": {
          "description": "A list of required fields to file",
          "type": "array",
          "items": {
            "$ref": "#/definitions/requiredFilingCalendarDataFieldModel"
          },
          "example": [{
            "name": "RegistrationId",
            "description": "Id Used for Registration"
          }]
        }
      },
      "example": {
        "name": "AL",
        "taxFormCodes": ["USAL21009501"],
        "country": "US",
        "scraperType": "Login",
        "isAvailable": true,
        "expectedResponseTime": "00:30:00",
        "message": "Message",
        "requiredFilingCalendarDataFields": [{
          "name": "RegistrationId",
          "description": "Id Used for Registration"
        }]
      }
    },
    "requiredFilingCalendarDataFieldModel": {
      "description": "Represents a verification request using Skyscraper for a company",
      "type": "object",
      "properties": {
        "name": {
          "description": "Region of the verification request",
          "type": "string"
        },
        "description": {
          "description": "Username that we are using for verification",
          "type": "string"
        }
      },
      "example": {}
    },
    "FetchResult[JurisdictionOverrideModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JurisdictionOverrideModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "JurisdictionOverrideModel": {
      "description": "Represents an override of tax jurisdictions for a specific address.\r\n\r\nDuring the time period represented by EffDate through EndDate, all tax decisions for addresses matching\r\nthis override object will be assigned to the list of jurisdictions designated in this object.",
      "required": ["description", "region", "postalCode", "jurisdictions", "taxRegionId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this override.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "accountId": {
          "format": "int32",
          "description": "The unique ID number assigned to this account.",
          "type": "integer",
          "example": 0
        },
        "description": {
          "description": "A description of why this jurisdiction override was created.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "a test JO"
        },
        "line1": {
          "description": "The street address of the physical location affected by this override.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "5500 Irvine Center Dr"
        },
        "city": {
          "description": "The city address of the physical location affected by this override.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "The two or three character ISO region code of the region, state, or province affected by this override.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "The two character ISO-3166 country code of the country affected by this override.\r\nNote that only United States addresses are affected by the jurisdiction override system.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "readOnly": true,
          "example": "US"
        },
        "postalCode": {
          "description": "The postal code of the physical location affected by this override.",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "92618"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The date when this override first takes effect.  Set this value to null to affect all dates up to the end date.",
          "type": "string",
          "example": "2006-08-01T00:00:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date when this override will cease to take effect.  Set this value to null to never expire.",
          "type": "string",
          "example": "2099-01-12T00:00:00"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "jurisdictions": {
          "description": "A list of the tax jurisdictions that will be assigned to this overridden address.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JurisdictionModel"
          }
        },
        "taxRegionId": {
          "format": "int32",
          "description": "The TaxRegionId of the new location affected by this jurisdiction override.",
          "type": "integer",
          "example": 0
        },
        "boundaryLevel": {
          "description": "The boundary level of this override",
          "enum": ["Address", "Zip9", "Zip5"],
          "type": "string",
          "readOnly": true,
          "example": "Address",
          "x-enum-type": "BoundaryLevel",
          "x-enum-description": "Jurisdiction boundary precision level found for address.  This depends on the accuracy of the address\n                as well as the precision level of the state provided jurisdiction boundaries.",
          "x-enum-value-comments": {
            "Address": "Street address precision",
            "Zip9": "9-digit zip precision",
            "Zip5": "5-digit zip precision"
          }
        },
        "isDefault": {
          "description": "True if this is a default boundary",
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "accountId": 0,
        "description": "a test JO",
        "line1": "5500 Irvine Center Dr",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92618",
        "effectiveDate": "2006-08-01",
        "endDate": "2099-01-12",
        "jurisdictions": [{
          "code": "53",
          "name": "WASHINGTON",
          "type": "State",
          "rate": 0.06,
          "salesRate": 0.06,
          "signatureCode": "",
          "region": "WA",
          "useRate": 0.06
        }],
        "taxRegionId": 0,
        "boundaryLevel": "Address",
        "isDefault": false
      }
    },
    "JurisdictionModel": {
      "description": "Represents information about a single legal taxing jurisdiction",
      "required": ["code", "name", "type", "signatureCode"],
      "type": "object",
      "properties": {
        "code": {
          "description": "The code that is used to identify this jurisdiction",
          "type": "string",
          "example": "53"
        },
        "name": {
          "description": "The name of this jurisdiction",
          "type": "string",
          "example": "WASHINGTON"
        },
        "type": {
          "description": "The type of the jurisdiction, indicating whether it is a country, state/region, city, for example.",
          "enum": ["Country", "Composite", "State", "County", "City", "Special"],
          "type": "string",
          "example": "State",
          "x-enum-type": "JurisdictionType",
          "x-enum-description": "Jurisdiction Type",
          "x-enum-value-comments": {
            "Country": "Country",
            "Composite": "Deprecated",
            "State": "State",
            "County": "County",
            "City": "City",
            "Special": "Special Tax Jurisdiction"
          }
        },
        "rate": {
          "format": "double",
          "description": "The base rate of tax specific to this jurisdiction.",
          "type": "number",
          "example": 0.06
        },
        "salesRate": {
          "format": "double",
          "description": "The \"Sales\" tax rate specific to this jurisdiction.",
          "type": "number",
          "example": 0.06
        },
        "signatureCode": {
          "description": "The Avalara-supplied signature code for this jurisdiction.",
          "type": "string",
          "example": ""
        },
        "region": {
          "description": "The state assigned code for this jurisdiction, if any.",
          "type": "string",
          "example": "WA"
        },
        "useRate": {
          "format": "double",
          "description": "The \"Seller's Use\" tax rate specific to this jurisdiction.",
          "type": "number",
          "example": 0.06
        }
      },
      "example": {
        "code": "53",
        "name": "WASHINGTON",
        "type": "State",
        "rate": 0.06,
        "salesRate": 0.06,
        "signatureCode": "",
        "region": "WA",
        "useRate": 0.06
      }
    },
    "FetchResult[ResourceFileTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFileTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceFileTypeModel": {
      "description": "Resource File Type Model",
      "type": "object",
      "properties": {
        "resourceFileTypeId": {
          "format": "int32",
          "description": "The resource file type id",
          "type": "integer",
          "example": 1
        },
        "name": {
          "description": "The name of the file type",
          "type": "string",
          "example": "TaxNoticeAttachment"
        }
      },
      "example": {
        "resourceFileTypeId": 1,
        "name": "TaxNoticeAttachment"
      }
    },
    "FetchResult[RateTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "RateTypeModel": {
      "description": "Rate type Model",
      "required": ["id", "description", "country"],
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID number of this tax authority.",
          "maxLength": 1,
          "minLength": 0,
          "type": "string",
          "readOnly": true,
          "example": "1"
        },
        "description": {
          "description": "Description of this rate type.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "test"
        },
        "country": {
          "description": "Country code for this rate type",
          "maxLength": 2,
          "minLength": 0,
          "type": "string",
          "example": "US"
        }
      },
      "example": {
        "id": "1",
        "description": "test",
        "country": "US"
      }
    },
    "FetchResult[AvaFileFormModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvaFileFormModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "AvaFileFormModel": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Unique Id of the form",
          "type": "integer",
          "example": 2029
        },
        "returnName": {
          "description": "Name of the file being returned",
          "type": "string",
          "example": "AKALEKNAGIK"
        },
        "formName": {
          "description": "Name of the submitted form",
          "type": "string",
          "example": "AK Aleknagik"
        },
        "description": {
          "description": "A description of the submitted form",
          "type": "string",
          "example": "Monthly/Quarterly Sales Tax Report"
        },
        "effDate": {
          "format": "date-time",
          "description": "The date this form starts to take effect",
          "type": "string",
          "example": "2002-10-01T00:00:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "The date the form finishes to take effect",
          "type": "string",
          "example": "9999-12-31T00:00:00"
        },
        "region": {
          "description": "State/Province/Region where the form is submitted for",
          "type": "string",
          "example": "AK"
        },
        "country": {
          "description": "The country this form is submitted for",
          "type": "string",
          "example": "US"
        },
        "formTypeId": {
          "format": "byte",
          "description": "The type of the form being submitted",
          "type": "integer",
          "example": 0
        },
        "filingOptionTypeId": {
          "format": "byte",
          "description": "",
          "type": "integer",
          "example": 0
        },
        "dueDateTypeId": {
          "format": "byte",
          "description": "The type of the due date",
          "type": "integer",
          "example": 0
        },
        "dueDay": {
          "format": "byte",
          "description": "Due date",
          "type": "integer",
          "example": 20
        },
        "efileDueDateTypeId": {
          "format": "byte",
          "description": "",
          "type": "integer",
          "example": 0
        },
        "efileDueDay": {
          "format": "byte",
          "description": "The date by when the E-filing should be submitted",
          "type": "integer",
          "example": 20
        },
        "efileDueTime": {
          "format": "date-time",
          "description": "The time of day by when the E-filing should be submitted",
          "type": "string",
          "example": "1900-01-01T00:00:00"
        },
        "hasVendorDiscount": {
          "description": "Whether the customer has discount",
          "type": "boolean",
          "example": false
        },
        "roundingTypeId": {
          "format": "byte",
          "description": "The way system does the rounding",
          "type": "integer",
          "example": 0
        }
      },
      "example": {
        "id": 2029,
        "returnName": "AKALEKNAGIK",
        "formName": "AK Aleknagik",
        "description": "Monthly/Quarterly Sales Tax Report",
        "effDate": "2002-10-01T00:00:00",
        "endDate": "9999-12-31T00:00:00",
        "region": "AK",
        "country": "US",
        "formTypeId": 0,
        "filingOptionTypeId": 0,
        "dueDateTypeId": 0,
        "dueDay": 20,
        "efileDueDateTypeId": 0,
        "efileDueDay": 20,
        "efileDueTime": "1900-01-01T00:00:00",
        "hasVendorDiscount": false,
        "roundingTypeId": 0
      }
    },
    "FetchResult[TaxTypeGroupModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxTypeGroupModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxTypeGroupModel": {
      "required": ["id", "taxTypeGroup", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax type group.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "taxTypeGroup": {
          "description": "The unique human readable Id of this tax type group.",
          "type": "string",
          "readOnly": true,
          "example": "SalesAndUse"
        },
        "description": {
          "description": "The description of this tax type group.",
          "type": "string",
          "readOnly": true,
          "example": "Sales and Use"
        }
      },
      "example": {
        "id": 1,
        "taxTypeGroup": "SalesAndUse",
        "description": "Sales and Use"
      }
    },
    "FetchResult[TaxSubTypeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxSubTypeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxSubTypeModel": {
      "required": ["id", "taxSubType", "description", "taxTypeGroup"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this tax sub-type.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "taxSubType": {
          "description": "The unique human readable Id of this tax sub-type.",
          "type": "string",
          "readOnly": true,
          "example": "*"
        },
        "description": {
          "description": "The description of this tax sub-type.",
          "type": "string",
          "readOnly": true,
          "example": "ALL"
        },
        "taxTypeGroup": {
          "description": "The upper level group of tax types.",
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "id": 1,
        "taxSubType": "*",
        "description": "ALL"
      }
    },
    "FetchResult[NexusTaxTypeGroupModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NexusTaxTypeGroupModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "NexusTaxTypeGroupModel": {
      "required": ["id", "nexusTaxTypeGroupId", "description"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this nexus tax type group.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "nexusTaxTypeGroupId": {
          "description": "The unique human readable Id of this nexus tax type group.",
          "type": "string",
          "readOnly": true,
          "example": "SalesAndUse"
        },
        "description": {
          "description": "The description of this nexus tax type group.",
          "type": "string",
          "readOnly": true,
          "example": "Sales and Use"
        }
      },
      "example": {
        "id": 1,
        "nexusTaxTypeGroupId": "SalesAndUse",
        "description": "Sales and Use"
      }
    },
    "FilingCalendarModel": {
      "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
      "required": ["id", "companyId", "returnName", "stateRegistrationId", "taxTypeId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this filing calendar.",
          "type": "integer",
          "readOnly": true,
          "example": 56789
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company to which this filing calendar belongs.",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "returnName": {
          "description": "The name of the tax form to file.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "CABOE401A2"
        },
        "locationCode": {
          "description": "If this calendar is for a location-specific tax return, specify the location code here.  To file for all locations, leave this value NULL.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "outletTypeId": {
          "description": "If this calendar is for a location-specific tax return, specify the location-specific behavior here.",
          "enum": ["None", "Schedule", "Duplicate", "Consolidated"],
          "type": "string",
          "example": "None",
          "x-enum-type": "OutletTypeId",
          "x-enum-description": "Indicates the behavior of a tax form for a company with multiple places of business.\n            \n            Some tax authorities require that a separate form must be filed for each place of business.",
          "x-enum-value-comments": {
            "None": "File a single return per cycle for your entire business.",
            "Schedule": "You may file separate forms for each outlet; contact the tax authority for more details about location based reporting requirements.",
            "Duplicate": "You may file separate forms for each outlet; contact the tax authority for more details about location based reporting requirements.",
            "Consolidated": "File a single return, but you must have a line item for each place of business."
          }
        },
        "paymentCurrency": {
          "description": "Specify the ISO 4217 currency code for the currency to remit for this tax return.  For all tax returns in the United States, specify \"USD\".",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "filingFrequencyId": {
          "description": "The frequency on which this tax form is filed.",
          "enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly"],
          "type": "string",
          "example": "Quarterly",
          "x-enum-type": "FilingFrequencyId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Monthly": "File once per month",
            "Quarterly": "File once per three months",
            "SemiAnnually": "File twice per year",
            "Annually": "File once per year",
            "Bimonthly": "File every other month",
            "Occasional": "File only when there are documents to report",
            "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
          }
        },
        "months": {
          "format": "int16",
          "description": "A 16-bit bitmap containing a 1 for each month when the return should be filed.",
          "type": "integer",
          "example": 2340
        },
        "stateRegistrationId": {
          "description": "Tax Registration ID for this Region - in the U.S., this is for your state.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "101-123456"
        },
        "localRegistrationId": {
          "description": "Tax Registration ID for the local jurisdiction, if any.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employerIdentificationNumber": {
          "description": "The Employer Identification Number or Taxpayer Identification Number that is to be used when filing this return.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "12-3456789"
        },
        "line1": {
          "description": "The first line of the physical address to be used when filing this tax return.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "The second line of the physical address to be used when filing this tax return.\r\nPlease note that some tax forms do not support multiple address lines.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "The city name of the physical address to be used when filing this tax return.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "The state, region, or province of the physical address to be used when filing this tax return.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "postalCode": {
          "description": "The postal code or zip code of the physical address to be used when filing this tax return.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "country": {
          "description": "The two character ISO-3166 country code of the physical address to be used when filing this return.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "phone": {
          "description": "The phone number to be used when filing this return.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "714 555-1212"
        },
        "customerFilingInstructions": {
          "description": "Special filing instructions to be used when filing this return.\r\nPlease note that requesting special filing instructions may incur additional costs.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "legalEntityName": {
          "description": "The legal entity name to be used when filing this return.",
          "maxLength": 75,
          "minLength": 0,
          "type": "string",
          "example": "Bob's Artisan Pottery"
        },
        "effectiveDate": {
          "format": "date-time",
          "description": "The earliest date for the tax period when this return should be filed.\r\nThis date specifies the earliest date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
          "type": "string",
          "example": "2015-01-01T00:00:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "The last date for the tax period when this return should be filed.\r\nThis date specifies the last date for tax transactions that should be reported on this filing calendar.\r\nPlease note that tax is usually filed one month in arrears: for example, tax for January transactions is typically filed during the month of February.",
          "type": "string"
        },
        "filingTypeId": {
          "description": "The method to be used when filing this return.",
          "enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
          "type": "string",
          "example": "ElectronicReturn",
          "x-enum-type": "FilingTypeId",
          "x-enum-description": "A list of possible AvaFile filing types.",
          "x-enum-value-comments": {
            "PaperReturn": "Denotes the tax return is being filed on paper.",
            "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
            "SER": "Denotes the tax return is an SST filing.",
            "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
            "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
            "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
            "EfileCheck": "Denotes a return which is filed online but paid by check."
          }
        },
        "eFileUsername": {
          "description": "If you file electronically, this is the username you use to log in to the tax authority's website.",
          "maxLength": 254,
          "minLength": 0,
          "type": "string"
        },
        "eFilePassword": {
          "description": "If you file electronically, this is the password or pass code you use to log in to the tax authority's website.",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "prepayPercentage": {
          "format": "byte",
          "description": "If you are required to prepay a percentage of taxes for future periods, please specify the percentage in whole numbers; \r\nfor example, the value 90 would indicate 90%.",
          "type": "integer",
          "example": 90
        },
        "taxTypeId": {
          "description": "The type of tax to report on this return.",
          "enum": ["Excise", "Lodging", "Bottle", "All", "BothSalesAndUseTax", "ConsumerUseTax", "ConsumersUseAndSellersUseTax", "ConsumerUseAndSalesTax", "Fee", "VATInputTax", "VATNonrecoverableInputTax", "VATOutputTax", "Rental", "SalesTax", "UseTax"],
          "type": "string",
          "example": "All",
          "x-enum-type": "MatchingTaxType",
          "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
          "x-enum-value-comments": {
            "All": "Match all tax types",
            "BothSalesAndUseTax": "Match both Sales and Use Tax only",
            "ConsumerUseTax": "Match Consumer Use Tax only",
            "SalesTax": "Match Sales Tax only",
            "UseTax": "Match Seller's Use Tax only",
            "VATOutputTax": "Match VAT Output Tax only",
            "VATInputTax": "Match VAT Input Tax only",
            "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
            "Fee": "Match Fee tax types only",
            "Rental": "Match Rental tax types only",
            "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
            "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
            "Excise": "Match medical excise type",
            "Lodging": "Match Lodging tax type",
            "Bottle": "Match bottle tax type"
          }
        },
        "internalNotes": {
          "description": "Internal filing notes.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "alSignOn": {
          "description": "Custom filing information field for Alabama.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "alAccessCode": {
          "description": "Custom filing information field for Alabama.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "meBusinessCode": {
          "description": "Custom filing information field for Maine.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "iaBen": {
          "description": "Custom filing information field for Iowa.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ctReg": {
          "description": "Custom filing information field for Connecticut.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other1Name": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other1Value": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other2Name": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other2Value": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other3Name": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "other3Value": {
          "description": "Custom filing information field.  Leave blank.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxAuthorityId": {
          "format": "int32",
          "description": "The unique ID of the tax authority of this return.",
          "type": "integer",
          "readOnly": true
        },
        "taxAuthorityName": {
          "description": "The name of the tax authority of this return.",
          "type": "string",
          "readOnly": true
        },
        "taxAuthorityType": {
          "description": "The type description of the tax authority of this return.",
          "type": "string",
          "readOnly": true
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 56789,
        "companyId": 12345,
        "returnName": "CABOE401A2",
        "outletTypeId": "None",
        "filingFrequencyId": "Quarterly",
        "months": 2340,
        "stateRegistrationId": "101-123456",
        "employerIdentificationNumber": "12-3456789",
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "postalCode": "92615",
        "country": "US",
        "phone": "714 555-1212",
        "legalEntityName": "Bob's Artisan Pottery",
        "effectiveDate": "2015-01-01",
        "filingTypeId": "ElectronicReturn",
        "prepayPercentage": 90,
        "taxTypeId": "All"
      }
    },
    "FetchResult[FilingCalendarModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingCalendarModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "CycleAddOptionModel": {
      "description": "Model with options for adding a new filing calendar",
      "type": "object",
      "properties": {
        "available": {
          "description": "True if this form can be added and filed for the current cycle. \"Current cycle\" is considered one month before the month of today's date.",
          "type": "boolean",
          "example": true
        },
        "transactionalPeriodStart": {
          "format": "date-time",
          "description": "The period start date for the customer's first transaction in the jurisdiction being added",
          "type": "string",
          "example": "2018-04-01T00:00:00"
        },
        "transactionalPeriodEnd": {
          "format": "date-time",
          "description": "The period end date for the customer's last transaction in the jurisdiction being added",
          "type": "string",
          "example": "2018-04-30T00:00:00"
        },
        "filingDueDate": {
          "format": "date-time",
          "description": "The jurisdiction-assigned due date for the form",
          "type": "string",
          "example": "2018-05-20T00:00:00"
        },
        "cycleName": {
          "description": "A descriptive name of the cycle and due date of form.",
          "type": "string",
          "example": "Monthly filing for April 2018, due May 20 2018."
        },
        "frequencyName": {
          "description": "The filing frequency of the form",
          "type": "string",
          "example": "Monthly"
        },
        "filingFrequencyCode": {
          "description": "A code assigned to the filing frequency",
          "type": "string",
          "example": "M"
        },
        "filingFrequencyId": {
          "description": "The filing frequency of the request",
          "enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly"],
          "type": "string",
          "x-enum-type": "FilingFrequencyId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Monthly": "File once per month",
            "Quarterly": "File once per three months",
            "SemiAnnually": "File twice per year",
            "Annually": "File once per year",
            "Bimonthly": "File every other month",
            "Occasional": "File only when there are documents to report",
            "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
          }
        },
        "cycleUnavailableReason": {
          "description": "An explanation for why this form cannot be added for the current cycle",
          "type": "string",
          "example": ""
        },
        "availableLocationCodes": {
          "description": "A list of outlet codes that can be assigned to this form for the current cycle",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": []
        }
      },
      "example": {
        "available": true,
        "transactionalPeriodStart": "2018-04-01",
        "transactionalPeriodEnd": "2018-04-30",
        "filingDueDate": "2018-05-20",
        "cycleName": "Monthly filing for April 2018, due May 20 2018.",
        "frequencyName": "Monthly",
        "filingFrequencyCode": "M",
        "cycleUnavailableReason": "",
        "availableLocationCodes": []
      }
    },
    "CycleExpireModel": {
      "description": "Cycle Safe Expiration results.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Whether or not the filing calendar can be expired.\r\ne.g. if user makes end date of a calendar earlier than latest filing, this would be set to false.",
          "type": "boolean",
          "example": true
        },
        "message": {
          "description": "The message to present to the user if expiration is successful or unsuccessful.",
          "type": "string"
        },
        "cycleExpirationOptions": {
          "description": "A list of options for expiring the filing calendar.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CycleExpireOptionModel"
          },
          "example": [{
            "transactionalPeriodStart": "2016-12-01",
            "transactionalPeriodEnd": "2016-12-31",
            "filingDueDate": "2017-01-20",
            "cycleName": "Monthly filing for December 2016, due January 20 2017."
          }]
        }
      },
      "example": {
        "success": true,
        "cycleExpirationOptions": [{
          "transactionalPeriodStart": "2016-12-01",
          "transactionalPeriodEnd": "2016-12-31",
          "filingDueDate": "2017-01-20",
          "cycleName": "Monthly filing for December 2016, due January 20 2017."
        }]
      }
    },
    "CycleExpireOptionModel": {
      "description": "Options for expiring a filing calendar.",
      "type": "object",
      "properties": {
        "transactionalPeriodStart": {
          "format": "date-time",
          "description": "The period start date for the customer's first transaction in the jurisdiction being expired.",
          "type": "string",
          "example": "2016-12-01T00:00:00"
        },
        "transactionalPeriodEnd": {
          "format": "date-time",
          "description": "The period end date for the customer's last transaction in the jurisdiction being expired.",
          "type": "string",
          "example": "2016-12-31T00:00:00"
        },
        "filingDueDate": {
          "format": "date-time",
          "description": "The jurisdiction-assigned due date for the form.",
          "type": "string",
          "example": "2017-01-20T00:00:00"
        },
        "cycleName": {
          "description": "A descriptive name of the cycle and due date of the form.",
          "type": "string",
          "example": "Monthly filing for December 2016, due January 20 2017."
        }
      },
      "example": {
        "transactionalPeriodStart": "2016-12-01",
        "transactionalPeriodEnd": "2016-12-31",
        "filingDueDate": "2017-01-20",
        "cycleName": "Monthly filing for December 2016, due January 20 2017."
      }
    },
    "FilingCalendarEditModel": {
      "description": "An edit to be made on a filing calendar.",
      "required": ["fieldName", "questionId", "oldValue", "newValue"],
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "The name of the field to be modified.",
          "type": "string",
          "example": "Ein"
        },
        "questionId": {
          "format": "int32",
          "description": "The unique ID of the filing calendar question. \"Filing calendar question\" is the wording displayed to users for a given field.",
          "type": "integer",
          "example": 36
        },
        "oldValue": {
          "description": "The current value of the field.",
          "type": "string",
          "example": "002094004"
        },
        "newValue": {
          "description": "The new/proposed value of the field.",
          "type": "string",
          "example": "002094005"
        }
      },
      "example": {
        "fieldName": "Ein",
        "questionId": 36,
        "oldValue": "002094004",
        "newValue": "002094005"
      }
    },
    "CycleEditOptionModel": {
      "description": "Model with options for actual filing calendar output based on user edits to filing calendar.",
      "type": "object",
      "properties": {
        "success": {
          "description": "Whether or not changes can be made to the filing calendar.",
          "type": "boolean",
          "example": true
        },
        "message": {
          "description": "The message to present to the user when calendar is successfully or unsuccessfully changed.",
          "type": "string",
          "example": "Clone unnecessary.  No approved instances of filing calendar"
        },
        "customerMustApprove": {
          "description": "Whether or not the user should be warned of a change, because some changes are risky and may be being done not in accordance with jurisdiction rules.\r\nFor example, user would be warned if user changes filing frequency to new frequency with a start date during an accrual month of the existing frequency.",
          "type": "boolean",
          "example": false
        },
        "mustCloneFilingCalendar": {
          "description": "True if the filing calendar must be cloned to allow this change; false if the existing filing calendar can be changed itself.",
          "type": "boolean",
          "example": false
        },
        "clonedCalendarEffDate": {
          "format": "date-time",
          "description": "The effective date of the filing calendar (only applies if cloning).",
          "type": "string"
        },
        "expiredCalendarEndDate": {
          "format": "date-time",
          "description": "The expired end date of the old filing calendar (only applies if cloning).",
          "type": "string"
        }
      },
      "example": {
        "success": true,
        "message": "Clone unnecessary.  No approved instances of filing calendar",
        "customerMustApprove": false,
        "mustCloneFilingCalendar": false
      }
    },
    "FetchResult[FilingRequestModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingRequestModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FilingRequestModel": {
      "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
      "required": ["companyId", "data"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this filing request.",
          "type": "integer",
          "example": 12345
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company to which this filing request belongs.",
          "type": "integer",
          "example": 12345
        },
        "filingRequestStatusId": {
          "description": "The current status of this request",
          "enum": ["New", "Validated", "Pending", "Active", "PendingStop", "Inactive", "ChangeRequest", "RequestApproved", "RequestDenied"],
          "type": "string",
          "readOnly": true,
          "example": "New",
          "x-enum-type": "FilingRequestStatus",
          "x-enum-description": "Filing Request Status types",
          "x-enum-value-comments": {
            "New": "Customer is building a request for a new filing calendar",
            "Validated": "Customer’s information validated before submitting to go live.  All required information as per state and form selection is entered.",
            "Pending": "Customer submitted a request for a new filing calendar",
            "Active": "Filing calender is active",
            "PendingStop": "Customer requested to deactivate filing calendar",
            "Inactive": "Filing calendar is inactive",
            "ChangeRequest": "This indicates that there is a new change request.",
            "RequestApproved": "This indicates that the change request was approved.",
            "RequestDenied": "This indicates that compliance rejected the request."
          }
        },
        "data": {
          "$ref": "#/definitions/FilingRequestDataModel",
          "description": "The data model object of the request",
          "example": {
            "companyReturnId": 1,
            "returnName": "WIST12CT",
            "filingFrequencyId": "Monthly",
            "registrationId": "1234",
            "months": 2,
            "taxTypeId": "SalesTax",
            "locationCode": "LOC-1",
            "effDate": "2017-01-01",
            "endDate": "2017-01-01",
            "isClone": false,
            "region": "WI",
            "taxAuthorityId": 121,
            "taxAuthorityName": "WISCONSIN",
            "answers": [{
              "filingQuestionId": 1,
              "answer": "Answer to question 1"
            }, {
              "filingQuestionId": 2,
              "answer": "Answer to question 2"
            }]
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 12345,
        "companyId": 12345,
        "filingRequestStatusId": "New",
        "data": {
          "companyReturnId": 1,
          "returnName": "WIST12CT",
          "filingFrequencyId": "Monthly",
          "registrationId": "1234",
          "months": 2,
          "taxTypeId": "SalesTax",
          "locationCode": "LOC-1",
          "effDate": "2017-01-01",
          "endDate": "2017-01-01",
          "isClone": false,
          "region": "WI",
          "taxAuthorityId": 121,
          "taxAuthorityName": "WISCONSIN",
          "answers": [{
            "filingQuestionId": 1,
            "answer": "Answer to question 1"
          }, {
            "filingQuestionId": 2,
            "answer": "Answer to question 2"
          }]
        }
      }
    },
    "FilingRequestDataModel": {
      "description": "Represents a commitment to file a tax return on a recurring basis.\r\nOnly used if you subscribe to Avalara Returns.",
      "required": ["returnName", "filingFrequencyId", "registrationId", "months", "effDate"],
      "type": "object",
      "properties": {
        "companyReturnId": {
          "format": "int64",
          "description": "The company return ID if requesting an update.",
          "type": "integer"
        },
        "returnName": {
          "description": "The return name of the requested calendar",
          "type": "string"
        },
        "filingFrequencyId": {
          "description": "The filing frequency of the request",
          "enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly"],
          "type": "string",
          "x-enum-type": "FilingFrequencyId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Monthly": "File once per month",
            "Quarterly": "File once per three months",
            "SemiAnnually": "File twice per year",
            "Annually": "File once per year",
            "Bimonthly": "File every other month",
            "Occasional": "File only when there are documents to report",
            "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
          }
        },
        "registrationId": {
          "description": "State registration ID of the company requesting the filing calendar.",
          "type": "string"
        },
        "months": {
          "format": "int16",
          "description": "The months of the request",
          "type": "integer"
        },
        "taxTypeId": {
          "description": "The type of tax to report on this return.",
          "enum": ["Excise", "Lodging", "Bottle", "All", "BothSalesAndUseTax", "ConsumerUseTax", "ConsumersUseAndSellersUseTax", "ConsumerUseAndSalesTax", "Fee", "VATInputTax", "VATNonrecoverableInputTax", "VATOutputTax", "Rental", "SalesTax", "UseTax"],
          "type": "string",
          "x-enum-type": "MatchingTaxType",
          "x-enum-description": "This data type is only used when an object must \"Match\" tax types.  By specifying options here,\n            you can indicate which tax types will match for the purposes of this object.\n            For example, if you specify BothSalesAndUseTax, this value matches with both sales and seller's use tax.",
          "x-enum-value-comments": {
            "All": "Match all tax types",
            "BothSalesAndUseTax": "Match both Sales and Use Tax only",
            "ConsumerUseTax": "Match Consumer Use Tax only",
            "SalesTax": "Match Sales Tax only",
            "UseTax": "Match Seller's Use Tax only",
            "VATOutputTax": "Match VAT Output Tax only",
            "VATInputTax": "Match VAT Input Tax only",
            "VATNonrecoverableInputTax": "Match VAT Nonrecoverable Input Tax only",
            "Fee": "Match Fee tax types only",
            "Rental": "Match Rental tax types only",
            "ConsumerUseAndSalesTax": "Match both Consumer Use and Sales Tax types",
            "ConsumersUseAndSellersUseTax": "Match both Consumer Use and Seller's Use Tax types",
            "Excise": "Match medical excise type",
            "Lodging": "Match Lodging tax type",
            "Bottle": "Match bottle tax type"
          }
        },
        "locationCode": {
          "description": "Location code of the request",
          "type": "string"
        },
        "effDate": {
          "format": "date-time",
          "description": "Filing cycle effective date of the request",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "Filing cycle end date of the request",
          "type": "string"
        },
        "isClone": {
          "description": "Flag if the request is a clone of a current filing calendar",
          "type": "boolean"
        },
        "region": {
          "description": "The region this request is for",
          "type": "string",
          "readOnly": true
        },
        "taxAuthorityId": {
          "format": "int32",
          "description": "The tax authority id of the return",
          "type": "integer",
          "readOnly": true
        },
        "taxAuthorityName": {
          "description": "The tax authority name on the return",
          "type": "string",
          "readOnly": true
        },
        "answers": {
          "description": "Filing question answers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingAnswerModel"
          }
        }
      },
      "example": {}
    },
    "FilingAnswerModel": {
      "description": "",
      "required": ["filingQuestionId", "answer"],
      "type": "object",
      "properties": {
        "filingQuestionId": {
          "format": "int64",
          "description": "The ID number for a filing question",
          "type": "integer"
        },
        "answer": {
          "description": "The value of the answer for the filing question identified by filingQuestionId",
          "type": "string"
        }
      },
      "example": {}
    },
    "LoginVerificationOutputModel": {
      "description": "This is the output model coming from skyscraper services",
      "required": ["jobId"],
      "type": "object",
      "properties": {
        "jobId": {
          "format": "int32",
          "description": "The job Id returned from skyscraper",
          "type": "integer"
        },
        "operationStatus": {
          "description": "The operation status of the job",
          "type": "string"
        },
        "message": {
          "description": "The message returned from the job",
          "type": "string"
        },
        "loginSuccess": {
          "description": "Indicates if the login was successful",
          "type": "boolean"
        }
      },
      "example": {}
    },
    "LoginVerificationInputModel": {
      "description": "Represents a verification request using Skyscraper for a company",
      "required": ["accountId", "region", "username", "password"],
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "CompanyId that we are verifying the login information for",
          "type": "integer",
          "example": 12345
        },
        "accountId": {
          "format": "int32",
          "description": "AccountId of the login verification",
          "type": "integer",
          "example": 1987654323
        },
        "region": {
          "description": "Region of the verification request",
          "type": "string",
          "example": "AR"
        },
        "username": {
          "description": "Username that we are using for verification",
          "type": "string",
          "example": "Test"
        },
        "password": {
          "description": "Password we are using for verification",
          "type": "string",
          "example": "Test"
        },
        "additionalOptions": {
          "description": "Additional options of the verification",
          "type": "string",
          "example": "4133|AR-2131232-13"
        },
        "bulkRequestId": {
          "format": "int32",
          "description": "Bulk Request Id of the verification",
          "type": "integer",
          "example": 1
        },
        "priority": {
          "format": "int32",
          "description": "Priority of the verification request",
          "type": "integer",
          "example": 2
        }
      },
      "example": {
        "companyId": 12345,
        "accountId": 1987654323,
        "region": "AR",
        "username": "Test",
        "password": "Test",
        "additionalOptions": "4133|AR-2131232-13",
        "bulkRequestId": 1,
        "priority": 2
      }
    },
    "FetchResult[FilingModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FilingModel": {
      "description": "Represents a listing of all tax calculation data for filings and for accruing to future filings.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this filing.",
          "type": "integer",
          "example": 326529
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company for this filing.",
          "type": "integer",
          "example": 62593
        },
        "month": {
          "format": "byte",
          "description": "The month of the filing period for this tax filing.  \r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
          "type": "integer",
          "example": 10
        },
        "year": {
          "format": "int16",
          "description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
          "type": "integer",
          "example": 2016
        },
        "type": {
          "description": "Indicates whether this is an original or an amended filing.",
          "enum": ["Original", "Amended", "Test"],
          "type": "string",
          "example": "Original",
          "x-enum-type": "WorksheetTypeId",
          "x-enum-description": "Filing worksheet Type",
          "x-enum-value-comments": {
            "Original": "The original filing for a period",
            "Amended": "Represents an amended filing for a period",
            "Test": "Represents a test filing"
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "filingRegions": {
          "description": "A listing of regional tax filings within this time period.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingRegionModel"
          },
          "example": [{
            "id": 2892824,
            "filingId": 0,
            "country": "US",
            "region": "AZ",
            "salesAmount": 80.48,
            "taxableAmount": 24.49,
            "taxAmount": 2.20,
            "taxDueAmount": 0.0,
            "collectAmount": 1.10,
            "totalRemittanceAmount": 0.0,
            "nonTaxableAmount": 55.99,
            "consumerUseTaxAmount": 0.0,
            "consumerUseNonTaxableAmount": 0.0,
            "consumerUseTaxableAmount": 0.0,
            "startDate": "2016-10-01T00:00:00",
            "endDate": "2016-10-31T00:00:00",
            "hasNexus": true,
            "status": "PendingApproval",
            "returns": [{
              "id": 5233103,
              "filingRegionId": 0,
              "filingCalendarId": 513256,
              "status": "PendingApproval",
              "filingFrequency": "Monthly",
              "salesAmount": 0.0,
              "filingType": "ElectronicReturn",
              "formName": "AL 2100",
              "remitAmount": 0.0,
              "formCode": "AL2100",
              "description": "Sales Tax Return",
              "taxableAmount": 0.0,
              "taxAmount": 0.0,
              "collectAmount": 1.00,
              "taxDueAmount": 0.0,
              "nonTaxableAmount": 0.0,
              "nonTaxableDueAmount": 0.0,
              "consumerUseTaxAmount": 0.0,
              "consumerUseNonTaxableAmount": 0.0,
              "consumerUseTaxableAmount": 0.0,
              "totalAdjustments": 0.0,
              "adjustments": [{
                "id": 15634,
                "amount": 100.0,
                "period": "CurrentPeriod",
                "type": "Discount",
                "isCalculated": false,
                "accountType": "AccountsReceivableAccountsPayable"
              }],
              "totalAugmentations": 0.0,
              "augmentations": [{
                "id": 103230,
                "fieldAmount": 10.0,
                "fieldName": "Credit from the State"
              }],
              "accrualType": 0
            }]
          }]
        }
      },
      "example": {
        "id": 326529,
        "companyId": 62593,
        "month": 10,
        "year": 2016,
        "type": "Original",
        "filingRegions": [{
          "id": 2892824,
          "filingId": 0,
          "country": "US",
          "region": "AZ",
          "salesAmount": 80.48,
          "taxableAmount": 24.49,
          "taxAmount": 2.20,
          "taxDueAmount": 0.0,
          "collectAmount": 1.10,
          "totalRemittanceAmount": 0.0,
          "nonTaxableAmount": 55.99,
          "consumerUseTaxAmount": 0.0,
          "consumerUseNonTaxableAmount": 0.0,
          "consumerUseTaxableAmount": 0.0,
          "startDate": "2016-10-01T00:00:00",
          "endDate": "2016-10-31T00:00:00",
          "hasNexus": true,
          "status": "PendingApproval",
          "returns": [{
            "id": 5233103,
            "filingRegionId": 0,
            "filingCalendarId": 513256,
            "status": "PendingApproval",
            "filingFrequency": "Monthly",
            "salesAmount": 0.0,
            "filingType": "ElectronicReturn",
            "formName": "AL 2100",
            "remitAmount": 0.0,
            "formCode": "AL2100",
            "description": "Sales Tax Return",
            "taxableAmount": 0.0,
            "taxAmount": 0.0,
            "collectAmount": 1.00,
            "taxDueAmount": 0.0,
            "nonTaxableAmount": 0.0,
            "nonTaxableDueAmount": 0.0,
            "consumerUseTaxAmount": 0.0,
            "consumerUseNonTaxableAmount": 0.0,
            "consumerUseTaxableAmount": 0.0,
            "totalAdjustments": 0.0,
            "adjustments": [{
              "id": 15634,
              "amount": 100.0,
              "period": "CurrentPeriod",
              "type": "Discount",
              "isCalculated": false,
              "accountType": "AccountsReceivableAccountsPayable"
            }],
            "totalAugmentations": 0.0,
            "augmentations": [{
              "id": 103230,
              "fieldAmount": 10.0,
              "fieldName": "Credit from the State"
            }],
            "accrualType": 0
          }]
        }]
      }
    },
    "FilingRegionModel": {
      "description": "Regions",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this filing region.",
          "type": "integer",
          "example": 2892824
        },
        "filingId": {
          "format": "int64",
          "description": "The filing id that this region belongs too",
          "type": "integer",
          "example": 0
        },
        "country": {
          "description": "The two-character ISO-3166 code for the country.",
          "type": "string",
          "example": "US"
        },
        "region": {
          "description": "The two or three character region code for the region.",
          "type": "string",
          "example": "AZ"
        },
        "salesAmount": {
          "format": "double",
          "description": "The sales amount.",
          "type": "number",
          "example": 80.48
        },
        "taxableAmount": {
          "format": "double",
          "description": "The taxable amount.",
          "type": "number",
          "example": 24.49
        },
        "taxAmount": {
          "format": "double",
          "description": "The tax amount.",
          "type": "number",
          "example": 2.20
        },
        "taxDueAmount": {
          "format": "double",
          "description": "The tax amount due.",
          "type": "number",
          "example": 0.0
        },
        "collectAmount": {
          "format": "double",
          "description": "The amount collected by Avalara for this region",
          "type": "number",
          "example": 1.10
        },
        "totalRemittanceAmount": {
          "format": "double",
          "description": "Total remittance amount of all returns in region",
          "type": "number",
          "example": 0.0
        },
        "nonTaxableAmount": {
          "format": "double",
          "description": "The non-taxable amount.",
          "type": "number",
          "example": 55.99
        },
        "consumerUseTaxAmount": {
          "format": "double",
          "description": "Consumer use tax liability.",
          "type": "number",
          "example": 0.0
        },
        "consumerUseNonTaxableAmount": {
          "format": "double",
          "description": "Consumer use non-taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "consumerUseTaxableAmount": {
          "format": "double",
          "description": "Consumer use taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "approveDate": {
          "format": "date-time",
          "description": "The date the filing region was approved.",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "The start date for the filing cycle.",
          "type": "string",
          "example": "2016-10-01T00:00:00"
        },
        "endDate": {
          "format": "date-time",
          "description": "The end date for the filing cycle.",
          "type": "string",
          "example": "2016-10-31T00:00:00"
        },
        "hasNexus": {
          "description": "Whether or not you have nexus in this region.",
          "type": "boolean",
          "example": true
        },
        "status": {
          "description": "The current status of the filing region.",
          "enum": ["PendingApproval", "Dirty", "ApprovedToFile", "PendingFiling", "PendingFilingOnBehalf", "Filed", "FiledOnBehalf", "ReturnAccepted", "ReturnAcceptedOnBehalf", "PaymentRemitted", "Voided", "PendingReturn", "PendingReturnOnBehalf", "DoNotFile", "ReturnRejected", "ReturnRejectedOnBehalf", "ApprovedToFileOnBehalf"],
          "type": "string",
          "example": "PendingApproval",
          "x-enum-type": "FilingStatusId",
          "x-enum-description": "Filing Status",
          "x-enum-value-comments": {}
        },
        "returns": {
          "description": "A list of tax returns in this region.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingReturnModel"
          },
          "example": [{
            "id": 5233103,
            "filingRegionId": 0,
            "filingCalendarId": 513256,
            "status": "PendingApproval",
            "filingFrequency": "Monthly",
            "salesAmount": 0.0,
            "filingType": "ElectronicReturn",
            "formName": "AL 2100",
            "remitAmount": 0.0,
            "formCode": "AL2100",
            "description": "Sales Tax Return",
            "taxableAmount": 0.0,
            "taxAmount": 0.0,
            "collectAmount": 1.00,
            "taxDueAmount": 0.0,
            "nonTaxableAmount": 0.0,
            "nonTaxableDueAmount": 0.0,
            "consumerUseTaxAmount": 0.0,
            "consumerUseNonTaxableAmount": 0.0,
            "consumerUseTaxableAmount": 0.0,
            "totalAdjustments": 0.0,
            "adjustments": [{
              "id": 15634,
              "amount": 100.0,
              "period": "CurrentPeriod",
              "type": "Discount",
              "isCalculated": false,
              "accountType": "AccountsReceivableAccountsPayable"
            }],
            "totalAugmentations": 0.0,
            "augmentations": [{
              "id": 103230,
              "fieldAmount": 10.0,
              "fieldName": "Credit from the State"
            }],
            "accrualType": 0
          }]
        },
        "suggestReturns": {
          "description": "A list of tax returns in this region.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 2892824,
        "filingId": 0,
        "country": "US",
        "region": "AZ",
        "salesAmount": 80.48,
        "taxableAmount": 24.49,
        "taxAmount": 2.20,
        "taxDueAmount": 0.0,
        "collectAmount": 1.10,
        "totalRemittanceAmount": 0.0,
        "nonTaxableAmount": 55.99,
        "consumerUseTaxAmount": 0.0,
        "consumerUseNonTaxableAmount": 0.0,
        "consumerUseTaxableAmount": 0.0,
        "startDate": "2016-10-01T00:00:00",
        "endDate": "2016-10-31T00:00:00",
        "hasNexus": true,
        "status": "PendingApproval",
        "returns": [{
          "id": 5233103,
          "filingRegionId": 0,
          "filingCalendarId": 513256,
          "status": "PendingApproval",
          "filingFrequency": "Monthly",
          "salesAmount": 0.0,
          "filingType": "ElectronicReturn",
          "formName": "AL 2100",
          "remitAmount": 0.0,
          "formCode": "AL2100",
          "description": "Sales Tax Return",
          "taxableAmount": 0.0,
          "taxAmount": 0.0,
          "collectAmount": 1.00,
          "taxDueAmount": 0.0,
          "nonTaxableAmount": 0.0,
          "nonTaxableDueAmount": 0.0,
          "consumerUseTaxAmount": 0.0,
          "consumerUseNonTaxableAmount": 0.0,
          "consumerUseTaxableAmount": 0.0,
          "totalAdjustments": 0.0,
          "adjustments": [{
            "id": 15634,
            "amount": 100.0,
            "period": "CurrentPeriod",
            "type": "Discount",
            "isCalculated": false,
            "accountType": "AccountsReceivableAccountsPayable"
          }],
          "totalAugmentations": 0.0,
          "augmentations": [{
            "id": 103230,
            "fieldAmount": 10.0,
            "fieldName": "Credit from the State"
          }],
          "accrualType": 0
        }]
      }
    },
    "FilingReturnModel": {
      "description": "Filing Returns Model",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this filing return.",
          "type": "integer",
          "example": 5233103
        },
        "filingRegionId": {
          "format": "int64",
          "description": "The region id that this return belongs too",
          "type": "integer",
          "example": 0
        },
        "filingCalendarId": {
          "format": "int64",
          "description": "The unique ID number of the filing calendar associated with this return.",
          "type": "integer",
          "example": 513256
        },
        "resourceFileId": {
          "format": "int64",
          "description": "The resourceFileId of the return.  Will be null if not available.",
          "type": "integer"
        },
        "taxAuthorityId": {
          "format": "int32",
          "description": "Tax Authority ID of this return",
          "type": "integer"
        },
        "status": {
          "description": "The current status of the filing return.",
          "enum": ["PendingApproval", "Dirty", "ApprovedToFile", "PendingFiling", "PendingFilingOnBehalf", "Filed", "FiledOnBehalf", "ReturnAccepted", "ReturnAcceptedOnBehalf", "PaymentRemitted", "Voided", "PendingReturn", "PendingReturnOnBehalf", "DoNotFile", "ReturnRejected", "ReturnRejectedOnBehalf", "ApprovedToFileOnBehalf"],
          "type": "string",
          "example": "PendingApproval",
          "x-enum-type": "FilingStatusId",
          "x-enum-description": "Filing Status",
          "x-enum-value-comments": {}
        },
        "filingFrequency": {
          "description": "The filing frequency of the return.",
          "enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly"],
          "type": "string",
          "example": "Monthly",
          "x-enum-type": "FilingFrequencyId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Monthly": "File once per month",
            "Quarterly": "File once per three months",
            "SemiAnnually": "File twice per year",
            "Annually": "File once per year",
            "Bimonthly": "File every other month",
            "Occasional": "File only when there are documents to report",
            "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
          }
        },
        "filedDate": {
          "format": "date-time",
          "description": "The date the return was filed by Avalara.",
          "type": "string"
        },
        "startPeriod": {
          "format": "date-time",
          "description": "The start date of this return",
          "type": "string"
        },
        "endPeriod": {
          "format": "date-time",
          "description": "The end date of this return",
          "type": "string"
        },
        "salesAmount": {
          "format": "double",
          "description": "The sales amount.",
          "type": "number",
          "example": 0.0
        },
        "filingType": {
          "description": "The filing type of the return.",
          "enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
          "type": "string",
          "example": "ElectronicReturn",
          "x-enum-type": "FilingTypeId",
          "x-enum-description": "A list of possible AvaFile filing types.",
          "x-enum-value-comments": {
            "PaperReturn": "Denotes the tax return is being filed on paper.",
            "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
            "SER": "Denotes the tax return is an SST filing.",
            "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
            "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
            "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
            "EfileCheck": "Denotes a return which is filed online but paid by check."
          }
        },
        "formName": {
          "description": "The name of the form.",
          "type": "string",
          "example": "AL 2100"
        },
        "remitAmount": {
          "format": "double",
          "description": "The remittance amount of the return.",
          "type": "number",
          "example": 0.0
        },
        "formCode": {
          "description": "The unique code of the form.",
          "type": "string",
          "example": "AL2100"
        },
        "description": {
          "description": "A description for the return.",
          "type": "string",
          "example": "Sales Tax Return"
        },
        "taxableAmount": {
          "format": "double",
          "description": "The taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "taxAmount": {
          "format": "double",
          "description": "The tax amount.",
          "type": "number",
          "example": 0.0
        },
        "collectAmount": {
          "format": "double",
          "description": "The amount collected by avalara for this return",
          "type": "number",
          "example": 1.00
        },
        "taxDueAmount": {
          "format": "double",
          "description": "The tax due amount.",
          "type": "number",
          "example": 0.0
        },
        "nonTaxableAmount": {
          "format": "double",
          "description": "The non-taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "nonTaxableDueAmount": {
          "format": "double",
          "description": "The non-taxable due amount.",
          "type": "number",
          "example": 0.0
        },
        "consumerUseTaxAmount": {
          "format": "double",
          "description": "Consumer use tax liability.",
          "type": "number",
          "example": 0.0
        },
        "consumerUseNonTaxableAmount": {
          "format": "double",
          "description": "Consumer use non-taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "consumerUseTaxableAmount": {
          "format": "double",
          "description": "Consumer use taxable amount.",
          "type": "number",
          "example": 0.0
        },
        "totalAdjustments": {
          "format": "double",
          "description": "Total amount of adjustments on this return",
          "type": "number",
          "example": 0.0
        },
        "adjustments": {
          "description": "The Adjustments for this return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingAdjustmentModel"
          },
          "example": [{
            "id": 15634,
            "amount": 100.0,
            "period": "CurrentPeriod",
            "type": "Discount",
            "isCalculated": false,
            "accountType": "AccountsReceivableAccountsPayable"
          }]
        },
        "totalAugmentations": {
          "format": "double",
          "description": "Total amount of augmentations on this return",
          "type": "number",
          "example": 0.0
        },
        "augmentations": {
          "description": "The Augmentations for this return.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingAugmentationModel"
          },
          "example": [{
            "id": 103230,
            "fieldAmount": 10.0,
            "fieldName": "Credit from the State"
          }]
        },
        "accrualType": {
          "description": "Accrual type of the return",
          "enum": ["Filing", "Accrual"],
          "type": "string",
          "example": 0,
          "x-enum-type": "AccrualType",
          "x-enum-description": "Accrual types",
          "x-enum-value-comments": {
            "Filing": "Filing indicates that this tax return should be filed with its tax authority by its due date. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return.",
            "Accrual": "An Accrual filing indicates taxes that are accrued, intended to be filed on a future tax return. For example, if you file annually, you will have eleven months of Accrual returns and one Filing return."
          }
        },
        "month": {
          "format": "byte",
          "description": "The month of the filing period for this tax filing.  \r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "The year of the filing period for this tax filing.\r\nThe filing period represents the year and month of the last day of taxes being reported on this filing.  \r\nFor example, an annual tax filing for Jan-Dec 2015 would have a filing period of Dec 2015.",
          "type": "integer"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        }
      },
      "example": {
        "id": 5233103,
        "filingRegionId": 0,
        "filingCalendarId": 513256,
        "status": "PendingApproval",
        "filingFrequency": "Monthly",
        "salesAmount": 0.0,
        "filingType": "ElectronicReturn",
        "formName": "AL 2100",
        "remitAmount": 0.0,
        "formCode": "AL2100",
        "description": "Sales Tax Return",
        "taxableAmount": 0.0,
        "taxAmount": 0.0,
        "collectAmount": 1.00,
        "taxDueAmount": 0.0,
        "nonTaxableAmount": 0.0,
        "nonTaxableDueAmount": 0.0,
        "consumerUseTaxAmount": 0.0,
        "consumerUseNonTaxableAmount": 0.0,
        "consumerUseTaxableAmount": 0.0,
        "totalAdjustments": 0.0,
        "adjustments": [{
          "id": 15634,
          "amount": 100.0,
          "period": "CurrentPeriod",
          "type": "Discount",
          "isCalculated": false,
          "accountType": "AccountsReceivableAccountsPayable"
        }],
        "totalAugmentations": 0.0,
        "augmentations": [{
          "id": 103230,
          "fieldAmount": 10.0,
          "fieldName": "Credit from the State"
        }],
        "accrualType": 0
      }
    },
    "FilingsCheckupSuggestedFormModel": {
      "description": "Worksheet Checkup Report Suggested Form Model",
      "type": "object",
      "properties": {
        "taxAuthorityId": {
          "format": "int32",
          "description": "Tax Authority ID of the suggested form returned",
          "type": "integer"
        },
        "country": {
          "description": "Country of the suggested form returned",
          "type": "string"
        },
        "region": {
          "description": "Region of the suggested form returned",
          "type": "string"
        },
        "returnName": {
          "type": "string"
        },
        "taxFormCode": {
          "description": "Name of the suggested form returned",
          "type": "string"
        }
      },
      "example": {
        "success": true,
        "cycleExpirationOptions": [{
          "transactionalPeriodStart": "2016-12-01",
          "transactionalPeriodEnd": "2016-12-31",
          "filingDueDate": "2017-01-20",
          "cycleName": "Monthly filing for December 2016, due January 20 2017."
        }]
      }
    },
    "FilingAdjustmentModel": {
      "description": "A model for return adjustments.",
      "required": ["amount", "period", "type", "accountType"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number for the adjustment.",
          "type": "integer",
          "readOnly": true,
          "example": 15634
        },
        "filingId": {
          "format": "int64",
          "description": "The filing return id that this applies too",
          "type": "integer",
          "readOnly": true
        },
        "amount": {
          "format": "double",
          "description": "The adjustment amount.",
          "type": "number",
          "example": 100.0
        },
        "period": {
          "description": "The filing period the adjustment is applied to.",
          "enum": ["None", "CurrentPeriod", "NextPeriod"],
          "type": "string",
          "example": "CurrentPeriod",
          "x-enum-type": "AdjustmentPeriodTypeId",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "type": {
          "description": "The type of the adjustment.",
          "enum": ["Other", "CurrentPeriodRounding", "PriorPeriodRounding", "CurrentPeriodDiscount", "PriorPeriodDiscount", "CurrentPeriodCollection", "PriorPeriodCollection", "Penalty", "Interest", "Discount", "Rounding", "CspFee"],
          "type": "string",
          "example": "Discount",
          "x-enum-type": "AdjustmentTypeId",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "isCalculated": {
          "description": "Whether or not the adjustment has been calculated.",
          "type": "boolean",
          "example": false
        },
        "accountType": {
          "description": "The account type of the adjustment.",
          "enum": ["None", "AccountsReceivableAccountsPayable", "AccountsReceivable", "AccountsPayable"],
          "type": "string",
          "example": "AccountsReceivableAccountsPayable",
          "x-enum-type": "PaymentAccountTypeId",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "reason": {
          "description": "A descriptive reason for creating this adjustment.",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 15634,
        "amount": 100.0,
        "period": "CurrentPeriod",
        "type": "Discount",
        "isCalculated": false,
        "accountType": "AccountsReceivableAccountsPayable"
      }
    },
    "FilingAugmentationModel": {
      "description": "A model for return augmentations.",
      "required": ["fieldAmount", "fieldName"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number for the augmentation.",
          "type": "integer",
          "readOnly": true,
          "example": 103230
        },
        "filingId": {
          "format": "int64",
          "description": "The filing return id that this applies too",
          "type": "integer",
          "readOnly": true
        },
        "fieldAmount": {
          "format": "double",
          "description": "The field amount.",
          "type": "number",
          "example": 10.0
        },
        "fieldName": {
          "description": "The field name.",
          "type": "string",
          "example": "Credit from the State"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        }
      },
      "example": {
        "id": 103230,
        "fieldAmount": 10.0,
        "fieldName": "Credit from the State"
      }
    },
    "RebuildFilingsModel": {
      "description": "Rebuild a set of filings.",
      "required": ["rebuild"],
      "type": "object",
      "properties": {
        "rebuild": {
          "description": "Set this value to true in order to rebuild the filings.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "rebuild": true
      }
    },
    "ApproveFilingsModel": {
      "description": "Approve a set of filings.",
      "required": ["approve"],
      "type": "object",
      "properties": {
        "approve": {
          "description": "Set this value to true in order to approve the filings.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "approve": true
      }
    },
    "FilingsCheckupModel": {
      "description": "Results of the Worksheet Checkup report",
      "type": "object",
      "properties": {
        "authorities": {
          "description": "A collection of authorities in the report",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingsCheckupAuthorityModel"
          }
        }
      },
      "example": {
        "authorities": [{
          "taxAuthorityId": 71,
          "taxAuthorityName": "NEW YORK",
          "taxAuthorityTypeId": 45,
          "jurisdictionId": 42,
          "tax": 0.0,
          "taxTypeId": "U",
          "suggestedForms": [{
            "taxAuthorityId": 71,
            "country": "US",
            "region": "NY",
            "taxFormCode": "NYAU11"
          }]
        }]
      }
    },
    "FilingsCheckupAuthorityModel": {
      "description": "Cycle Safe Expiration results.",
      "type": "object",
      "properties": {
        "taxAuthorityId": {
          "format": "int32",
          "description": "Unique ID of the tax authority",
          "type": "integer"
        },
        "locationCode": {
          "description": "Location Code of the tax authority",
          "type": "string"
        },
        "taxAuthorityName": {
          "description": "Name of the tax authority",
          "type": "string"
        },
        "taxAuthorityTypeId": {
          "format": "int32",
          "description": "Type Id of the tax authority",
          "type": "integer"
        },
        "jurisdictionId": {
          "format": "int32",
          "description": "Jurisdiction Id of the tax authority",
          "type": "integer"
        },
        "tax": {
          "format": "double",
          "description": "Amount of tax collected in this tax authority",
          "type": "number"
        },
        "taxTypeId": {
          "description": "Tax Type collected in the tax authority",
          "type": "string"
        },
        "suggestedForms": {
          "description": "Suggested forms to file due to tax collected",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilingsCheckupSuggestedFormModel"
          }
        }
      },
      "example": {
        "success": true,
        "cycleExpirationOptions": [{
          "transactionalPeriodStart": "2016-12-01",
          "transactionalPeriodEnd": "2016-12-31",
          "filingDueDate": "2017-01-20",
          "cycleName": "Monthly filing for December 2016, due January 20 2017."
        }]
      }
    },
    "FetchResult[ItemModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[LocationModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "LocationValidationModel": {
      "description": "Tells you whether this location object has been correctly set up to the local jurisdiction's standards",
      "type": "object",
      "properties": {
        "settingsValidated": {
          "description": "True if the location has a value for each jurisdiction-required setting.\r\nThe user is required to ensure that the values are correct according to the jurisdiction; this flag\r\ndoes not indicate whether the taxing jurisdiction has accepted the data you have provided.",
          "type": "boolean"
        },
        "requiredSettings": {
          "description": "A list of settings that must be defined for this location",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationQuestionModel"
          }
        }
      },
      "example": {}
    },
    "NoticeModel": {
      "description": "Represents a letter received from a tax authority regarding tax filing.\r\nThese letters often have the warning \"Notice\" printed at the top, which is why\r\nthey are called \"Notices\".",
      "required": ["id", "companyId", "statusId", "receivedDate", "customerTypeId", "reasonId", "priorityId", "hideFromCustomer", "showResolutionDateToCustomer"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this notice.",
          "type": "integer",
          "readOnly": true,
          "example": 3878
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company to which this notice belongs.",
          "type": "integer",
          "example": 5714
        },
        "statusId": {
          "format": "int32",
          "description": "The status id of the notice",
          "type": "integer",
          "example": 4
        },
        "status": {
          "description": "The status of the notice",
          "type": "string",
          "readOnly": true,
          "example": "Closed - Paid"
        },
        "receivedDate": {
          "format": "date-time",
          "description": "The received date of the notice",
          "type": "string",
          "example": "2017-05-16T09:28:31.8998315-07:00"
        },
        "closedDate": {
          "format": "date-time",
          "description": "The closed date of the notice",
          "type": "string",
          "example": "2017-06-05T09:28:31.8998315-07:00"
        },
        "totalRemit": {
          "format": "double",
          "description": "The total remmitance amount for the notice",
          "type": "number",
          "readOnly": true,
          "example": 0.0
        },
        "customerTypeId": {
          "description": "NoticeCustomerTypeID can be retrieved from the definitions API",
          "enum": ["AvaTaxReturns", "StandAlone", "Strategic", "SST", "TrustFile"],
          "type": "string",
          "example": "AvaTaxReturns",
          "x-enum-type": "NoticeCustomerType",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "AvaTaxReturns": "AvaTax Returns",
            "StandAlone": "Stand Alone",
            "Strategic": "Strategic",
            "SST": "SST",
            "TrustFile": "TrustFile"
          }
        },
        "country": {
          "description": "The country the notice is in",
          "type": "string",
          "example": "US"
        },
        "region": {
          "description": "The region the notice is for",
          "type": "string",
          "example": "AZ"
        },
        "taxAuthorityId": {
          "format": "int32",
          "description": "The tax authority id of the notice",
          "type": "integer",
          "example": 208
        },
        "filingFrequency": {
          "description": "The filing frequency of the notice",
          "enum": ["Monthly", "Quarterly", "SemiAnnually", "Annually", "Bimonthly", "Occasional", "InverseQuarterly"],
          "type": "string",
          "example": "Quarterly",
          "x-enum-type": "FilingFrequencyId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Monthly": "File once per month",
            "Quarterly": "File once per three months",
            "SemiAnnually": "File twice per year",
            "Annually": "File once per year",
            "Bimonthly": "File every other month",
            "Occasional": "File only when there are documents to report",
            "InverseQuarterly": "File for the first two months of each quarter, then do not file on the quarterly month."
          }
        },
        "filingTypeId": {
          "description": "The filing type of the notice",
          "enum": ["PaperReturn", "ElectronicReturn", "SER", "EFTPaper", "PhonePaper", "SignatureReady", "EfileCheck"],
          "type": "string",
          "example": "ElectronicReturn",
          "x-enum-type": "FilingTypeId",
          "x-enum-description": "A list of possible AvaFile filing types.",
          "x-enum-value-comments": {
            "PaperReturn": "Denotes the tax return is being filed on paper.",
            "ElectronicReturn": "Denotes the tax return is being filed via electronic means; excludes SST electronic filing.",
            "SER": "Denotes the tax return is an SST filing.",
            "EFTPaper": "Denotes a return is paid via EFT and filed on paper without payment.",
            "PhonePaper": "Denotes a return is paid via phone and filed on paper without payment.",
            "SignatureReady": "Denotes a return is prepared but delivered to the customer for filing and payment.",
            "EfileCheck": "Denotes a return which is filed online but paid by check."
          }
        },
        "ticketReferenceNo": {
          "description": "The ticket reference number of the notice",
          "type": "string",
          "example": "1235"
        },
        "ticketReferenceUrl": {
          "description": "The ticket reference url of the notice",
          "type": "string",
          "example": "http://www.ticketurl.com"
        },
        "salesForceCase": {
          "description": "The sales force case of the notice",
          "type": "string",
          "example": "3333"
        },
        "salesForceCaseUrl": {
          "description": "The URL to the sales force case",
          "type": "string",
          "example": "http://www.salesforcecaseurl.com"
        },
        "taxPeriod": {
          "description": "The tax period of the notice",
          "type": "string",
          "example": "200710"
        },
        "reasonId": {
          "format": "int32",
          "description": "The notice reason id",
          "type": "integer",
          "example": 10
        },
        "reason": {
          "description": "The notice reason",
          "type": "string",
          "readOnly": true,
          "example": "Unsupported Credit"
        },
        "typeId": {
          "format": "int32",
          "description": "The tax notice type id",
          "type": "integer",
          "example": 3
        },
        "type": {
          "description": "The tax notice type description",
          "type": "string"
        },
        "customerFundingOptionId": {
          "description": "The notice customer funding options",
          "enum": ["Pull", "Wire"],
          "type": "string",
          "example": "Pull",
          "x-enum-type": "FundingOption",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "Pull": "Pull",
            "Wire": "Wire"
          }
        },
        "priorityId": {
          "description": "The priority of the notice",
          "enum": ["ImmediateAttentionRequired", "High", "Normal", "Low"],
          "type": "string",
          "example": "ImmediateAttentionRequired",
          "x-enum-type": "NoticePriorityId",
          "x-enum-description": "Filing Frequency types",
          "x-enum-value-comments": {
            "ImmediateAttentionRequired": "Immediate Attention Required",
            "High": "High",
            "Normal": "Normal",
            "Low": "Low"
          }
        },
        "customerComment": {
          "description": "Comments from the customer on this notice",
          "type": "string",
          "example": "comments"
        },
        "hideFromCustomer": {
          "description": "Indicator to hide from customer",
          "type": "boolean",
          "example": false
        },
        "expectedResolutionDate": {
          "format": "date-time",
          "description": "Expected resolution date of the notice",
          "type": "string",
          "example": "2017-05-31T09:28:31.8998315-07:00"
        },
        "showResolutionDateToCustomer": {
          "description": "Indicator to show customer this resolution date",
          "type": "boolean",
          "example": false
        },
        "closedByUserId": {
          "format": "int32",
          "description": "The unique ID number of the user that closed the notice",
          "type": "integer",
          "example": 1
        },
        "createdByUserName": {
          "description": "The user who created the notice",
          "type": "string",
          "readOnly": true,
          "example": "user@compliance.com"
        },
        "ownedByUserId": {
          "format": "int32",
          "description": "The unique ID number of the user that owns the notice",
          "type": "integer",
          "example": 23
        },
        "description": {
          "description": "The description of the notice",
          "type": "string",
          "example": "description"
        },
        "avaFileFormId": {
          "format": "int32",
          "description": "The ava file form id of the notice",
          "type": "integer",
          "example": 333
        },
        "revenueContactId": {
          "format": "int32",
          "description": "The id of the revenue contact",
          "type": "integer",
          "example": 444
        },
        "complianceContactId": {
          "format": "int32",
          "description": "The id of the compliance contact",
          "type": "integer",
          "example": 555
        },
        "documentReference": {
          "description": "The document reference of the notice",
          "type": "string"
        },
        "jurisdictionName": {
          "description": "The jurisdiction name of the notice",
          "type": "string",
          "readOnly": true,
          "example": "CHANDLER"
        },
        "jurisdictionType": {
          "description": "The jurisdiction type of the notice",
          "type": "string",
          "readOnly": true,
          "example": "City"
        },
        "comments": {
          "description": "Additional comments on the notice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeCommentModel"
          },
          "example": [{
            "id": 3,
            "noticeId": 3878,
            "date": "2017-05-16T09:28:31.8998315-07:00",
            "comment": "spoke to Chris payment not received need copy of check.VW",
            "commentUserId": 1,
            "commentUserName": "user@compliance.com",
            "commentTypeId": 0,
            "commentType": "Internal"
          }]
        },
        "finances": {
          "description": "Finance details of the notice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeFinanceModel"
          },
          "example": [{
            "id": 3,
            "noticeId": 0,
            "noticeDate": "2017-05-16T09:28:31.8998315-07:00",
            "taxDue": 6.66,
            "penalty": 0.67,
            "interest": 0.19,
            "credits": 0.06,
            "taxAbated": 0.0
          }]
        },
        "responsibility": {
          "description": "Notice Responsibility Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeResponsibilityDetailModel"
          }
        },
        "rootCause": {
          "description": "Notice Root Cause Details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeRootCauseDetailModel"
          }
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true,
          "example": "2017-05-11T09:28:31.8998315-07:00"
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true,
          "example": 1
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true,
          "example": "2017-05-16T09:28:31.8998315-07:00"
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true,
          "example": 222
        }
      },
      "example": {
        "id": 3878,
        "companyId": 5714,
        "statusId": 4,
        "status": "Closed - Paid",
        "receivedDate": "2017-05-16T09:28:31.8998315-07:00",
        "closedDate": "2017-06-05T09:28:31.8998315-07:00",
        "totalRemit": 0.0,
        "customerTypeId": "AvaTaxReturns",
        "country": "US",
        "region": "AZ",
        "taxAuthorityId": 208,
        "filingFrequency": "Quarterly",
        "filingTypeId": "ElectronicReturn",
        "ticketReferenceNo": "1235",
        "ticketReferenceUrl": "http://www.ticketurl.com",
        "salesForceCase": "3333",
        "salesForceCaseUrl": "http://www.salesforcecaseurl.com",
        "taxPeriod": "200710",
        "reasonId": 10,
        "reason": "Unsupported Credit",
        "typeId": 3,
        "customerFundingOptionId": "Pull",
        "priorityId": "ImmediateAttentionRequired",
        "customerComment": "comments",
        "hideFromCustomer": false,
        "expectedResolutionDate": "2017-05-31T09:28:31.8998315-07:00",
        "showResolutionDateToCustomer": false,
        "closedByUserId": 1,
        "createdByUserName": "user@compliance.com",
        "ownedByUserId": 23,
        "description": "description",
        "avaFileFormId": 333,
        "revenueContactId": 444,
        "complianceContactId": 555,
        "jurisdictionName": "CHANDLER",
        "jurisdictionType": "City",
        "comments": [{
          "id": 3,
          "noticeId": 3878,
          "date": "2017-05-16T09:28:31.8998315-07:00",
          "comment": "spoke to Chris payment not received need copy of check.VW",
          "commentUserId": 1,
          "commentUserName": "user@compliance.com",
          "commentTypeId": 0,
          "commentType": "Internal"
        }],
        "finances": [{
          "id": 3,
          "noticeId": 0,
          "noticeDate": "2017-05-16T09:28:31.8998315-07:00",
          "taxDue": 6.66,
          "penalty": 0.67,
          "interest": 0.19,
          "credits": 0.06,
          "taxAbated": 0.0
        }],
        "createdDate": "2017-05-11T09:28:31.8998315-07:00",
        "createdUserId": 1,
        "modifiedDate": "2017-05-16T09:28:31.8998315-07:00",
        "modifiedUserId": 222
      }
    },
    "NoticeCommentModel": {
      "description": "Represents communication between Avalara and the company regarding the processing of a tax notice.",
      "required": ["noticeId", "commentType"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this notice.",
          "type": "integer",
          "readOnly": true,
          "example": 1123
        },
        "noticeId": {
          "format": "int32",
          "description": "The ID of the notice this comment is attached too",
          "type": "integer",
          "example": 12345
        },
        "date": {
          "format": "date-time",
          "description": "The date this comment was entered",
          "type": "string",
          "example": "2017-05-16T09:28:31.9154566-07:00"
        },
        "comment": {
          "description": "TaxNoticeComment",
          "type": "string",
          "example": "comment"
        },
        "commentUserId": {
          "format": "int32",
          "description": "TaxNoticeCommentUserId",
          "type": "integer",
          "example": 0
        },
        "commentUserName": {
          "description": "TaxNoticeCommentUserName",
          "type": "string",
          "readOnly": true,
          "example": "complianceUser"
        },
        "commentTypeId": {
          "format": "int32",
          "description": "taxNoticeCommentTypeId",
          "type": "integer",
          "example": 0
        },
        "commentType": {
          "description": "taxNoticeCommentType",
          "enum": ["Internal", "Customer"],
          "type": "string",
          "example": "Internal",
          "x-enum-type": "CommentType",
          "x-enum-description": "Comment Types",
          "x-enum-value-comments": {
            "Internal": "Internal comments are those comments only intended to be for compliance users",
            "Customer": "Customer comments are those comments that both compliance and the customer can read"
          }
        },
        "commentLink": {
          "description": "TaxNoticeCommentLink",
          "type": "string",
          "example": "www.avalara.com"
        },
        "taxNoticeFileName": {
          "description": "TaxNoticeFileName",
          "type": "string",
          "example": "xyz.txt"
        },
        "resourceFileId": {
          "format": "int64",
          "description": "resourceFileId",
          "type": "integer"
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "attachmentUploadRequest": {
          "$ref": "#/definitions/ResourceFileUploadRequestModel",
          "description": "An attachment to the detail",
          "example": {
            "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
            "username": "test.user",
            "accountId": 5555,
            "companyId": 66666,
            "name": "nameoffile.txt",
            "resourceFileTypeId": 0,
            "length": 333
          }
        }
      },
      "example": {
        "id": 1123,
        "noticeId": 12345,
        "date": "2017-05-16T09:28:31.9154566-07:00",
        "comment": "comment",
        "commentUserId": 0,
        "commentUserName": "complianceUser",
        "commentTypeId": 0,
        "commentType": "Internal",
        "commentLink": "www.avalara.com",
        "taxNoticeFileName": "xyz.txt",
        "attachmentUploadRequest": {
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "username": "test.user",
          "accountId": 5555,
          "companyId": 66666,
          "name": "nameoffile.txt",
          "resourceFileTypeId": 0,
          "length": 333
        }
      }
    },
    "NoticeFinanceModel": {
      "description": "Represents estimated financial results from responding to a tax notice.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "noticeId": {
          "format": "int32",
          "description": "",
          "type": "integer",
          "readOnly": true,
          "example": 12345
        },
        "noticeDate": {
          "format": "date-time",
          "description": "",
          "type": "string",
          "example": "2017-05-16T09:28:31.9310813-07:00"
        },
        "dueDate": {
          "format": "date-time",
          "description": "",
          "type": "string",
          "example": "2017-05-30T09:28:31.9310813-07:00"
        },
        "noticeNumber": {
          "description": "",
          "type": "string",
          "example": "3x3215"
        },
        "taxDue": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 99.98
        },
        "penalty": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 56.98
        },
        "interest": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 88.98
        },
        "credits": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 85.98
        },
        "taxAbated": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 45.98
        },
        "customerPenalty": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 23.98
        },
        "customerInterest": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 13.98
        },
        "cspFeeRefund": {
          "format": "double",
          "description": "",
          "type": "number",
          "example": 10.98
        },
        "fileName": {
          "description": "resourceFileId",
          "type": "string"
        },
        "resourceFileId": {
          "format": "int64",
          "description": "resourceFileId",
          "type": "integer"
        },
        "createdDate": {
          "format": "date-time",
          "description": "The date when this record was created.",
          "type": "string",
          "readOnly": true
        },
        "createdUserId": {
          "format": "int32",
          "description": "The User ID of the user who created this record.",
          "type": "integer",
          "readOnly": true
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "attachmentUploadRequest": {
          "$ref": "#/definitions/ResourceFileUploadRequestModel",
          "description": "An attachment to the finance detail",
          "example": {
            "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
            "username": "test.user",
            "accountId": 5555,
            "companyId": 66666,
            "name": "nameoffile.txt",
            "resourceFileTypeId": 0,
            "length": 333
          }
        }
      },
      "example": {
        "id": 0,
        "noticeId": 12345,
        "noticeDate": "2017-05-16T09:28:31.9310813-07:00",
        "dueDate": "2017-05-30T09:28:31.9310813-07:00",
        "noticeNumber": "3x3215",
        "taxDue": 99.98,
        "penalty": 56.98,
        "interest": 88.98,
        "credits": 85.98,
        "taxAbated": 45.98,
        "customerPenalty": 23.98,
        "customerInterest": 13.98,
        "cspFeeRefund": 10.98,
        "attachmentUploadRequest": {
          "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
          "username": "test.user",
          "accountId": 5555,
          "companyId": 66666,
          "name": "nameoffile.txt",
          "resourceFileTypeId": 0,
          "length": 333
        }
      }
    },
    "NoticeResponsibilityDetailModel": {
      "description": "NoticeResponsibility Model",
      "required": ["noticeId", "taxNoticeResponsibilityId"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this filing frequency.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "noticeId": {
          "format": "int32",
          "description": "TaxNoticeId",
          "type": "integer",
          "example": 4
        },
        "taxNoticeResponsibilityId": {
          "format": "int32",
          "description": "TaxNoticeResponsibilityId",
          "type": "integer",
          "example": 4
        },
        "description": {
          "description": "The description name of this filing frequency",
          "type": "string",
          "readOnly": true,
          "example": "Avalara-Compliance"
        }
      },
      "example": {
        "id": 0,
        "noticeId": 4,
        "taxNoticeResponsibilityId": 4,
        "description": "Avalara-Compliance"
      }
    },
    "NoticeRootCauseDetailModel": {
      "description": "NoticeRootCause Model",
      "required": ["id"],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The unique ID number of this filing frequency.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "noticeId": {
          "format": "int32",
          "description": "TaxNoticeId",
          "type": "integer",
          "example": 4
        },
        "taxNoticeRootCauseId": {
          "format": "int32",
          "description": "TaxNoticeRootCauseId",
          "type": "integer",
          "example": 4
        },
        "description": {
          "description": "The description name of this root cause",
          "type": "string",
          "readOnly": true,
          "example": "Processor error-Return not submitted"
        }
      },
      "example": {
        "id": 0,
        "noticeId": 4,
        "taxNoticeRootCauseId": 4,
        "description": "Processor error-Return not submitted"
      }
    },
    "ResourceFileUploadRequestModel": {
      "description": "A request to upload a file to Resource Files",
      "required": ["content"],
      "type": "object",
      "properties": {
        "content": {
          "format": "byte",
          "description": "This stream contains the bytes of the file being uploaded.",
          "type": "string",
          "example": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg=="
        },
        "username": {
          "description": "The username adding the file",
          "type": "string",
          "example": "test.user"
        },
        "accountId": {
          "format": "int32",
          "description": "The account ID to which this file will be attached.",
          "type": "integer",
          "example": 5555
        },
        "companyId": {
          "format": "int32",
          "description": "The company ID to which this file will be attached.",
          "type": "integer",
          "example": 66666
        },
        "name": {
          "description": "The original name of this file.",
          "type": "string",
          "example": "nameoffile.txt"
        },
        "resourceFileTypeId": {
          "format": "int32",
          "description": "The resource type ID of this file.",
          "type": "integer",
          "example": 0
        },
        "length": {
          "format": "int64",
          "description": "Length of the file in bytes.",
          "type": "integer",
          "example": 333
        }
      },
      "example": {
        "content": "UHJvY2Vzc0NvZGUsRG9jQ29kZSxEb2NUeXBlLERvY0RhdGUsQ29tcGFueUNvZGUsQ3VzdG9tZXJDb2RlLEVudGl0eVVzZUNvZGUsTGluZU5vLFRheENvZGUsVGF4RGF0ZSxJdGVtQ29kZSxEZXNjcmlwdGlvbixRdHksQW1vdW50LERpc2NvdW50LFJlZjEsUmVmMixFeGVtcHRpb25ObyxSZXZBY2N0LERlc3RBZGRyZXNzLERlc3RDaXR5LERlc3RSZWdpb24sRGVzdFBvc3RhbENvZGUsRGVzdENvdW50cnksT3JpZ0FkZHJlc3MsT3JpZ0NpdHksT3JpZ1JlZ2lvbixPcmlnUG9zdGFsQ29kZSxPcmlnQ291bnRyeSxMb2NhdGlvbkNvZGUsU2FsZXNQZXJzb25Db2RlLFB1cmNoYXNlT3JkZXJObyxDdXJyZW5jeUNvZGUsRXhjaGFuZ2VSYXRlLEV4Y2hhbmdlUmF0ZUVmZkRhdGUsUGF5bWVudERhdGUsVGF4SW5jbHVkZWQsRGVzdFRheFJlZ2lvbixPcmlnVGF4UmVnaW9uLFRheGFibGUsVGF4VHlwZSxUb3RhbFRheCxDb3VudHJ5TmFtZSxDb3VudHJ5Q29kZSxDb3VudHJ5UmF0ZSxDb3VudHJ5VGF4LFN0YXRlTmFtZSxTdGF0ZUNvZGUsU3RhdGVSYXRlLFN0YXRlVGF4LENvdW50eU5hbWUsQ291bnR5Q29kZSxDb3VudHlSYXRlLENvdW50eVRheCxDaXR5TmFtZSxDaXR5Q29kZSxDaXR5UmF0ZSxDaXR5VGF4LE90aGVyMU5hbWUsT3RoZXIxQ29kZSxPdGhlcjFSYXRlLE90aGVyMVRheCxPdGhlcjJOYW1lLE90aGVyMkNvZGUsT3RoZXIyUmF0ZSxPdGhlcjJUYXgsT3RoZXIzTmFtZSxPdGhlcjNDb2RlLE90aGVyM1JhdGUsT3RoZXIzVGF4LE90aGVyNE5hbWUsT3RoZXI0Q29kZSxPdGhlcjRSYXRlLE90aGVyNFRheCxSZWZlcmVuY2VDb2RlLEJ1eWVyc1ZBVE5vLElzU2VsbGVySW1wb3J0ZXJPZlJlY29yZCxCUkJ1eWVyVHlwZSxCUkJ1eWVyX0lzRXhlbXB0T3JDYW5ub3RXSF9JUlJGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX1BJU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NPRklOU1JGLEJSQnV5ZXJfSXNFeGVtcHRPckNhbm5vdFdIX0NTTExSRixCUkJ1eWVyX0lzRXhlbXB0X1BJUyxCUkJ1eWVyX0lzRXhlbXB0X0NPRklOUyxCUkJ1eWVyX0lzRXhlbXB0X0NTTEwsSGVhZGVyX0Rlc2NyaXB0aW9uLEVtYWlsDQozLDlhYzI4MGMzLTNhNTUtNGEzNS1iZWQyLWE4M2RiNTNiMDUxZSwxLDEvMS8yMDE0LERFRkFVTFQsQ3VzdDEsLDEsLCwsLCwxMDAwLCwsLCwsMjM1IEUgNDJuZCBTdCAsTmV3IFlvcmssTlksMTAwMTctNTcwMyAgLFVTLDkwMCBXaW5zbG93IFdheSxCYWluYnJpZGdlIElzbGFuZCxXQSw5ODExMCxVUywsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwNCg==",
        "username": "test.user",
        "accountId": 5555,
        "companyId": 66666,
        "name": "nameoffile.txt",
        "resourceFileTypeId": 0,
        "length": 333
      }
    },
    "FetchResult[NoticeModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[NoticeCommentModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeCommentModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[NoticeFinanceModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeFinanceModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[NoticeResponsibilityDetailModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeResponsibilityDetailModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[NoticeRootCauseDetailModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NoticeRootCauseDetailModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "PasswordChangeModel": {
      "description": "Password Change Model",
      "required": ["oldPassword", "newPassword"],
      "type": "object",
      "properties": {
        "oldPassword": {
          "description": "Old Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "MyOldPassword123!"
        },
        "newPassword": {
          "description": "New Password",
          "maxLength": 50,
          "minLength": 8,
          "type": "string",
          "example": "ANewPassword567:)"
        }
      },
      "example": {
        "oldPassword": "MyOldPassword123!",
        "newPassword": "ANewPassword567:)"
      }
    },
    "SetPasswordModel": {
      "description": "Set Password Model",
      "required": ["newPassword"],
      "type": "object",
      "properties": {
        "newPassword": {
          "description": "New Password",
          "maxLength": 50,
          "minLength": 8,
          "type": "string",
          "example": "NewPassword789~~!"
        }
      },
      "example": {
        "newPassword": "NewPassword789~~!"
      }
    },
    "PointOfSaleDataRequestModel": {
      "description": "Point-of-Sale Data Request Model",
      "required": ["companyCode"],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "A unique code that references a company within your account.",
          "type": "string",
          "example": "DEFAULT"
        },
        "documentDate": {
          "format": "date-time",
          "description": "The date associated with the response content. Default is current date. This field can be used to backdate or postdate the response content.",
          "type": "string",
          "example": "2017-05-16T16:28:31.9623353Z"
        },
        "responseType": {
          "description": "The format of your response. Formats include JSON, CSV, and XML.",
          "enum": ["Json", "Csv", "Xml"],
          "type": "string",
          "example": "Json",
          "x-enum-type": "PointOfSaleFileType",
          "x-enum-description": "Type of file request",
          "x-enum-value-comments": {
            "Json": "File is in Javascript Object Notation format",
            "Csv": "File is in Comma Separated Values format",
            "Xml": "File is in Extended Markup Language format"
          }
        },
        "taxCodes": {
          "description": "A list of tax codes to include in this point-of-sale file. If no tax codes are specified, response will include all distinct tax codes associated with the Items within your company.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["P0000000"]
        },
        "locationCodes": {
          "description": "A list of location codes to include in this point-of-sale file. If no location codes are specified, response will include all locations within your company.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["DEFAULT"]
        },
        "includeJurisCodes": {
          "description": "Set this value to true to include Juris Code in the response.",
          "type": "boolean",
          "example": true
        },
        "partnerId": {
          "description": "A unique code assoicated with the Partner you may be working with. If you are not working with a Partner or your Partner has not provided you an ID, leave null.",
          "enum": ["DMA", "AX7"],
          "type": "string",
          "x-enum-type": "PointOfSalePartnerId",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        }
      },
      "example": {
        "companyCode": "DEFAULT",
        "documentDate": "2017-05-16T16:28:31.9623353Z",
        "responseType": "Json",
        "taxCodes": ["P0000000"],
        "locationCodes": ["DEFAULT"],
        "includeJurisCodes": true
      }
    },
    "FetchResult[SettingModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SettingModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[SubscriptionModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TaxRateModel": {
      "description": "Tax Rate Model",
      "type": "object",
      "properties": {
        "totalRate": {
          "format": "double",
          "description": "Total Rate",
          "type": "number",
          "example": 0.0625
        },
        "rates": {
          "description": "Rates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RateModel"
          },
          "example": [{
            "rate": 0.0625,
            "name": "CALIFORNIA",
            "type": "State"
          }]
        }
      },
      "example": {
        "totalRate": 0.0625,
        "rates": [{
          "rate": 0.0625,
          "name": "CALIFORNIA",
          "type": "State"
        }]
      }
    },
    "RateModel": {
      "description": "Rate Model",
      "type": "object",
      "properties": {
        "rate": {
          "format": "double",
          "description": "Rate",
          "type": "number",
          "example": 0.0625
        },
        "name": {
          "description": "Name",
          "type": "string",
          "example": "CALIFORNIA"
        },
        "type": {
          "description": "Type",
          "enum": ["Country", "Composite", "State", "County", "City", "Special"],
          "type": "string",
          "example": "State",
          "x-enum-type": "JurisdictionType",
          "x-enum-description": "Jurisdiction Type",
          "x-enum-value-comments": {
            "Country": "Country",
            "Composite": "Deprecated",
            "State": "State",
            "County": "County",
            "City": "City",
            "Special": "Special Tax Jurisdiction"
          }
        }
      },
      "example": {
        "rate": 0.0625,
        "name": "CALIFORNIA",
        "type": "State"
      }
    },
    "FetchResult[TaxRuleModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRuleModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "TransactionModel": {
      "description": "A single transaction - for example, a sales invoice or purchase order.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this transaction.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "code": {
          "description": "A unique customer-provided code identifying this transaction.",
          "type": "string",
          "readOnly": true,
          "example": "855838c1-31da-4874-a25e-ec6ffade1307"
        },
        "companyId": {
          "format": "int32",
          "description": "The unique ID number of the company that recorded this transaction.",
          "type": "integer",
          "example": 12345
        },
        "date": {
          "format": "date-time",
          "description": "The date on which this transaction occurred.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "paymentDate": {
          "format": "date-time",
          "description": "The date when payment was made on this transaction.  By default, this should be the same as the date of the transaction.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "status": {
          "description": "The status of the transaction.",
          "enum": ["Temporary", "Saved", "Posted", "Committed", "Cancelled", "Adjusted", "Queued", "PendingApproval", "Any"],
          "type": "string",
          "example": "Committed",
          "x-enum-type": "DocumentStatus",
          "x-enum-description": "Document Status",
          "x-enum-value-comments": {
            "Temporary": "Temporary document not saved (SalesOrder, PurchaseOrder)",
            "Saved": "Saved document (SalesInvoice or PurchaseInvoice) ready to be posted",
            "Posted": "A posted document (not committed)",
            "Committed": "A posted document that has been committed",
            "Cancelled": "A Committed document that has been cancelled",
            "Adjusted": "A document that has been adjusted",
            "Queued": "A document which is in Queue status and processed later",
            "PendingApproval": "A document which is Pending for Approval",
            "Any": "Any status (for searching)"
          }
        },
        "type": {
          "description": "The type of the transaction.  For Returns customers, a transaction type of \"Invoice\" will be reported to the tax authorities.\r\nA sales transaction represents a sale from the company to a customer.  A purchase transaction represents a purchase made by the company.\r\nA return transaction represents a customer who decided to request a refund after purchasing a product from the company.  An inventory \r\ntransfer transaction represents goods that were moved from one location of the company to another location without changing ownership.",
          "enum": ["SalesOrder", "SalesInvoice", "PurchaseOrder", "PurchaseInvoice", "ReturnOrder", "ReturnInvoice", "InventoryTransferOrder", "InventoryTransferInvoice", "ReverseChargeOrder", "ReverseChargeInvoice", "Any"],
          "type": "string",
          "example": "SalesInvoice",
          "x-enum-type": "DocumentType",
          "x-enum-description": "Document Types",
          "x-enum-value-comments": {
            "SalesOrder": "Sales Order, estimate or quote (default).  This is a temporary document type and is not saved in tax history.",
            "SalesInvoice": "Sales Invoice",
            "PurchaseOrder": "Purchase order, estimate, or quote.  This is a temporary document type and is not saved in tax history.",
            "PurchaseInvoice": "Purchase Invoice",
            "ReturnOrder": "Sales Return Order.  This is a temporary document type and is not saved in tax history.",
            "ReturnInvoice": "Sales Return Invoice",
            "InventoryTransferOrder": "InventoryTransferOrder",
            "InventoryTransferInvoice": "InventoryTransferInvoice",
            "ReverseChargeOrder": "ReverseChargeOrder",
            "ReverseChargeInvoice": "ReverseChargeInvoice",
            "Any": "No particular type"
          }
        },
        "batchCode": {
          "description": "If this transaction was created as part of a batch, this code indicates which batch.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The three-character ISO 4217 currency code that was used for payment for this transaction.",
          "type": "string",
          "example": "USD"
        },
        "customerUsageType": {
          "description": "The customer usage type for this transaction.  Customer usage types often affect exemption or taxability rules.",
          "type": "string",
          "example": ""
        },
        "customerVendorCode": {
          "description": "CustomerVendorCode",
          "type": "string",
          "example": "ABC"
        },
        "exemptNo": {
          "description": "If this transaction was exempt, this field will contain the word \"Exempt\".",
          "type": "string",
          "example": ""
        },
        "reconciled": {
          "description": "If this transaction has been reconciled against the company's ledger, this value is set to true.",
          "type": "boolean",
          "example": true
        },
        "locationCode": {
          "description": "If this transaction was made from a specific reporting location, this is the code string of the location.\r\nFor customers using Returns, this indicates how tax will be reported according to different locations on the tax forms.",
          "type": "string",
          "example": "DEFAULT"
        },
        "purchaseOrderNo": {
          "description": "The customer-supplied purchase order number of this transaction.",
          "type": "string"
        },
        "referenceCode": {
          "description": "A user-defined reference code for this transaction.",
          "type": "string"
        },
        "salespersonCode": {
          "description": "The salesperson who provided this transaction.  Not required.",
          "type": "string",
          "example": "DEF"
        },
        "taxOverrideType": {
          "description": "If a tax override was applied to this transaction, indicates what type of tax override was applied.",
          "enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable"],
          "type": "string",
          "example": "None",
          "x-enum-type": "TaxOverrideTypeId",
          "x-enum-description": "TaxOverrideTypeId",
          "x-enum-value-comments": {
            "None": "No override",
            "TaxAmount": "Tax was overriden by the client",
            "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
            "TaxDate": "Only the tax date was overriden",
            "AccruedTaxAmount": "To support Consumer Use Tax",
            "DeriveTaxable": "Derive the taxable amount from the tax amount"
          }
        },
        "taxOverrideAmount": {
          "format": "double",
          "description": "If a tax override was applied to this transaction, indicates the amount of tax that was requested by the customer.",
          "type": "number",
          "example": 0.00
        },
        "taxOverrideReason": {
          "description": "If a tax override was applied to this transaction, indicates the reason for the tax override.",
          "type": "string",
          "example": ""
        },
        "totalAmount": {
          "format": "double",
          "description": "The total amount of this transaction.",
          "type": "number",
          "example": 1000.0
        },
        "totalExempt": {
          "format": "double",
          "description": "The amount of this transaction that was exempt.",
          "type": "number",
          "example": 0.0
        },
        "totalTax": {
          "format": "double",
          "description": "The total tax calculated for all lines in this transaction.",
          "type": "number",
          "example": 62.50
        },
        "totalTaxable": {
          "format": "double",
          "description": "The portion of the total amount of this transaction that was taxable.",
          "type": "number",
          "example": 1000.0
        },
        "totalTaxCalculated": {
          "format": "double",
          "description": "If a tax override was applied to this transaction, indicates the amount of tax Avalara calculated for the transaction.",
          "type": "number",
          "example": 62.50
        },
        "adjustmentReason": {
          "description": "If this transaction was adjusted, indicates the unique ID number of the reason why the transaction was adjusted.",
          "enum": ["NotAdjusted", "SourcingIssue", "ReconciledWithGeneralLedger", "ExemptCertApplied", "PriceAdjusted", "ProductReturned", "ProductExchanged", "BadDebt", "Other", "Offline"],
          "type": "string",
          "example": "NotAdjusted",
          "x-enum-type": "AdjustmentReason",
          "x-enum-description": "Indicates the type of adjustment that was performed on a transaction",
          "x-enum-value-comments": {
            "NotAdjusted": "The transaction has not been adjusted",
            "SourcingIssue": "A sourcing issue existed which caused the transaction to be adjusted",
            "ReconciledWithGeneralLedger": "Transaction was adjusted to reconcile it with a general ledger",
            "ExemptCertApplied": "Transaction was adjusted after an exemption certificate was applied",
            "PriceAdjusted": "Transaction was adjusted when the price of an item changed",
            "ProductReturned": "Transaction was adjusted due to a product return",
            "ProductExchanged": "Transaction was adjusted due to a product exchange",
            "BadDebt": "Transaction was adjusted due to bad or uncollectable debt",
            "Other": "Transaction was adjusted for another reason not specified",
            "Offline": "Offline"
          }
        },
        "adjustmentDescription": {
          "description": "If this transaction was adjusted, indicates a description of the reason why the transaction was adjusted.",
          "type": "string",
          "example": ""
        },
        "locked": {
          "description": "If this transaction has been reported to a tax authority, this transaction is considered locked and may not be adjusted after reporting.",
          "type": "boolean",
          "example": false
        },
        "region": {
          "description": "The two-or-three character ISO region code of the region for this transaction.",
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "The two-character ISO 3166 code of the country for this transaction.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "version": {
          "format": "int32",
          "description": "If this transaction was adjusted, this indicates the version number of this transaction.  Incremented each time the transaction\r\nis adjusted.",
          "type": "integer",
          "example": 0
        },
        "softwareVersion": {
          "description": "The software version used to calculate this transaction.",
          "type": "string"
        },
        "originAddressId": {
          "format": "int64",
          "description": "The unique ID number of the origin address for this transaction.",
          "type": "integer",
          "example": 123456789
        },
        "destinationAddressId": {
          "format": "int64",
          "description": "The unique ID number of the destination address for this transaction.",
          "type": "integer",
          "example": 123456789
        },
        "exchangeRateEffectiveDate": {
          "format": "date-time",
          "description": "If this transaction included foreign currency exchange, this is the date as of which the exchange rate was calculated.",
          "type": "string"
        },
        "exchangeRate": {
          "format": "double",
          "description": "If this transaction included foreign currency exchange, this is the exchange rate that was used.",
          "type": "number"
        },
        "isSellerImporterOfRecord": {
          "description": "If true, this seller was considered the importer of record of a product shipped internationally.",
          "type": "boolean",
          "example": false
        },
        "description": {
          "description": "Description of this transaction.",
          "type": "string",
          "example": "Yarn"
        },
        "email": {
          "description": "Email address associated with this transaction.",
          "type": "string"
        },
        "businessIdentificationNo": {
          "description": "VAT business identification number used for this transaction.",
          "type": "string"
        },
        "modifiedDate": {
          "format": "date-time",
          "description": "The date/time when this record was last modified.",
          "type": "string",
          "readOnly": true
        },
        "modifiedUserId": {
          "format": "int32",
          "description": "The user ID of the user who last modified this record.",
          "type": "integer",
          "readOnly": true
        },
        "taxDate": {
          "format": "date-time",
          "description": "Tax date for this transaction",
          "type": "string",
          "readOnly": true,
          "example": "2017-05-16T00:00:00-07:00"
        },
        "lines": {
          "description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Lines\" or \"?$include=Details\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionLineModel"
          },
          "example": [{
            "id": 123456789,
            "transactionId": 123456789,
            "lineNumber": "1",
            "boundaryOverrideId": 0,
            "customerUsageType": "",
            "description": "Yarn",
            "destinationAddressId": 12345,
            "originAddressId": 123456789,
            "discountAmount": 100.0,
            "discountTypeId": 0,
            "exemptAmount": 0.0,
            "exemptCertId": 0,
            "exemptNo": "",
            "isItemTaxable": true,
            "isSSTP": false,
            "itemCode": "116292",
            "lineAmount": 1000.0,
            "quantity": 1.00,
            "ref1": "Note: Deliver to Bob",
            "reportingDate": "2017-05-16",
            "revAccount": "",
            "sourcing": "Destination",
            "tax": 62.50,
            "taxableAmount": 1000.0,
            "taxCalculated": 62.50,
            "taxCode": "PS081282",
            "taxDate": "2017-05-16",
            "taxEngine": "",
            "taxOverrideType": "None",
            "taxOverrideAmount": 0.00,
            "taxOverrideReason": "",
            "taxIncluded": false,
            "details": [{
              "id": 123456789,
              "transactionLineId": 123456789,
              "transactionId": 123456789,
              "addressId": 12345,
              "country": "US",
              "region": "CA",
              "stateFIPS": "06",
              "exemptAmount": 0.00,
              "exemptReasonId": 4,
              "inState": false,
              "jurisCode": "06",
              "jurisName": "CALIFORNIA",
              "jurisdictionId": 5000531,
              "signatureCode": "AGAM",
              "stateAssignedNo": "",
              "jurisType": "STA",
              "nonTaxableAmount": 0.0,
              "nonTaxableRuleId": 0,
              "nonTaxableType": "BaseRule",
              "rate": 0.0625,
              "rateRuleId": 1321915,
              "rateSourceId": 3,
              "serCode": "",
              "sourcing": "Destination",
              "tax": 62.50,
              "taxableAmount": 1000.0,
              "taxType": "Sales",
              "taxName": "CA STATE TAX",
              "taxAuthorityTypeId": 45,
              "taxRegionId": 2127184,
              "taxCalculated": 62.50,
              "taxOverride": 0.00,
              "rateType": "General"
            }]
          }]
        },
        "addresses": {
          "description": "Optional: A list of line items in this transaction.  To fetch this list, add the query string \"?$include=Addresses\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionAddressModel"
          },
          "example": [{
            "id": 0,
            "transactionId": 0,
            "boundaryLevel": "Address",
            "line1": "100 Ravine Lane Northeast #220",
            "city": "Bainbridge Island",
            "region": "WA",
            "postalCode": "98110",
            "country": "US",
            "taxRegionId": 0
          }]
        },
        "locationTypes": {
          "description": "Optional: A list of location types in this transaction.  To fetch this list, add the query string \"?$include=Addresses\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionLocationTypeModel"
          }
        },
        "summary": {
          "description": "Contains a summary of tax on this transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionSummary"
          }
        },
        "parameters": {
          "description": "Contains a list of extra parameters that were set when the transaction was created.",
          "type": "object",
          "properties": {}
        },
        "messages": {
          "description": "List of informational and warning messages regarding this API call.  These messages are only relevant to the current API call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvaTaxMessage"
          }
        }
      },
      "example": {
        "id": 123456789,
        "code": "855838c1-31da-4874-a25e-ec6ffade1307",
        "companyId": 12345,
        "date": "2017-05-16",
        "paymentDate": "2017-05-16",
        "status": "Committed",
        "type": "SalesInvoice",
        "currencyCode": "USD",
        "customerUsageType": "",
        "customerVendorCode": "ABC",
        "exemptNo": "",
        "reconciled": true,
        "locationCode": "DEFAULT",
        "salespersonCode": "DEF",
        "taxOverrideType": "None",
        "taxOverrideAmount": 0.00,
        "taxOverrideReason": "",
        "totalAmount": 1000.0,
        "totalExempt": 0.0,
        "totalTax": 62.50,
        "totalTaxable": 1000.0,
        "totalTaxCalculated": 62.50,
        "adjustmentReason": "NotAdjusted",
        "adjustmentDescription": "",
        "locked": false,
        "region": "CA",
        "country": "US",
        "version": 0,
        "originAddressId": 123456789,
        "destinationAddressId": 123456789,
        "isSellerImporterOfRecord": false,
        "description": "Yarn",
        "taxDate": "2017-05-16T00:00:00-07:00",
        "lines": [{
          "id": 123456789,
          "transactionId": 123456789,
          "lineNumber": "1",
          "boundaryOverrideId": 0,
          "customerUsageType": "",
          "description": "Yarn",
          "destinationAddressId": 12345,
          "originAddressId": 123456789,
          "discountAmount": 100.0,
          "discountTypeId": 0,
          "exemptAmount": 0.0,
          "exemptCertId": 0,
          "exemptNo": "",
          "isItemTaxable": true,
          "isSSTP": false,
          "itemCode": "116292",
          "lineAmount": 1000.0,
          "quantity": 1.00,
          "ref1": "Note: Deliver to Bob",
          "reportingDate": "2017-05-16",
          "revAccount": "",
          "sourcing": "Destination",
          "tax": 62.50,
          "taxableAmount": 1000.0,
          "taxCalculated": 62.50,
          "taxCode": "PS081282",
          "taxDate": "2017-05-16",
          "taxEngine": "",
          "taxOverrideType": "None",
          "taxOverrideAmount": 0.00,
          "taxOverrideReason": "",
          "taxIncluded": false,
          "details": [{
            "id": 123456789,
            "transactionLineId": 123456789,
            "transactionId": 123456789,
            "addressId": 12345,
            "country": "US",
            "region": "CA",
            "stateFIPS": "06",
            "exemptAmount": 0.00,
            "exemptReasonId": 4,
            "inState": false,
            "jurisCode": "06",
            "jurisName": "CALIFORNIA",
            "jurisdictionId": 5000531,
            "signatureCode": "AGAM",
            "stateAssignedNo": "",
            "jurisType": "STA",
            "nonTaxableAmount": 0.0,
            "nonTaxableRuleId": 0,
            "nonTaxableType": "BaseRule",
            "rate": 0.0625,
            "rateRuleId": 1321915,
            "rateSourceId": 3,
            "serCode": "",
            "sourcing": "Destination",
            "tax": 62.50,
            "taxableAmount": 1000.0,
            "taxType": "Sales",
            "taxName": "CA STATE TAX",
            "taxAuthorityTypeId": 45,
            "taxRegionId": 2127184,
            "taxCalculated": 62.50,
            "taxOverride": 0.00,
            "rateType": "General"
          }]
        }],
        "addresses": [{
          "id": 0,
          "transactionId": 0,
          "boundaryLevel": "Address",
          "line1": "100 Ravine Lane Northeast #220",
          "city": "Bainbridge Island",
          "region": "WA",
          "postalCode": "98110",
          "country": "US",
          "taxRegionId": 0
        }]
      }
    },
    "TransactionLineModel": {
      "description": "One line item on this transaction.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this transaction line item.",
          "type": "integer",
          "example": 123456789
        },
        "transactionId": {
          "format": "int64",
          "description": "The unique ID number of the transaction to which this line item belongs.",
          "type": "integer",
          "example": 123456789
        },
        "lineNumber": {
          "description": "The line number or code indicating the line on this invoice or receipt or document.",
          "type": "string",
          "example": "1"
        },
        "boundaryOverrideId": {
          "format": "int32",
          "description": "The unique ID number of the boundary override applied to this line item.",
          "type": "integer",
          "example": 0
        },
        "customerUsageType": {
          "description": "The customer usage type for this line item.  Usage type often affects taxability rules.",
          "type": "string",
          "example": ""
        },
        "description": {
          "description": "A description of the item or service represented by this line.",
          "type": "string",
          "example": "Yarn"
        },
        "destinationAddressId": {
          "format": "int64",
          "description": "The unique ID number of the destination address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the destination address and origin address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
          "type": "integer",
          "example": 12345
        },
        "originAddressId": {
          "format": "int64",
          "description": "The unique ID number of the origin address where this line was delivered or sold.\r\nIn the case of a point-of-sale transaction, the origin address and destination address will be the same.\r\nIn the case of a shipped transaction, they will be different.",
          "type": "integer",
          "example": 123456789
        },
        "discountAmount": {
          "format": "double",
          "description": "The amount of discount that was applied to this line item.  This represents the difference between list price and sale price of the item.\r\nIn general, a discount represents money that did not change hands; tax is calculated on only the amount of money that changed hands.",
          "type": "number",
          "example": 100.0
        },
        "discountTypeId": {
          "format": "int32",
          "description": "The type of discount, if any, that was applied to this line item.",
          "type": "integer",
          "example": 0
        },
        "exemptAmount": {
          "format": "double",
          "description": "The amount of this line item that was exempt.",
          "type": "number",
          "example": 0.0
        },
        "exemptCertId": {
          "format": "int32",
          "description": "The unique ID number of the exemption certificate that applied to this line item.",
          "type": "integer",
          "example": 0
        },
        "exemptNo": {
          "description": "If this line item was exempt, this string contains the word 'Exempt'.",
          "type": "string",
          "example": ""
        },
        "isItemTaxable": {
          "description": "True if this item is taxable.",
          "type": "boolean",
          "example": true
        },
        "isSSTP": {
          "description": "True if this item is a Streamlined Sales Tax line item.",
          "type": "boolean",
          "example": false
        },
        "itemCode": {
          "description": "The code string of the item represented by this line item.",
          "type": "string",
          "example": "116292"
        },
        "lineAmount": {
          "format": "double",
          "description": "The total amount of the transaction, including both taxable and exempt.  This is the total price for all items.\r\nTo determine the individual item price, divide this by quantity.",
          "type": "number",
          "example": 1000.0
        },
        "quantity": {
          "format": "double",
          "description": "The quantity of products sold on this line item.",
          "type": "number",
          "example": 1.00
        },
        "ref1": {
          "description": "A user-defined reference identifier for this transaction line item.",
          "type": "string",
          "example": "Note: Deliver to Bob"
        },
        "ref2": {
          "description": "A user-defined reference identifier for this transaction line item.",
          "type": "string"
        },
        "reportingDate": {
          "format": "date-time",
          "description": "The date when this transaction should be reported.  By default, all transactions are reported on the date when the actual transaction took place.\r\nIn some cases, line items may be reported later due to delayed shipments or other business reasons.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "revAccount": {
          "description": "The revenue account number for this line item.",
          "type": "string",
          "example": ""
        },
        "sourcing": {
          "description": "Indicates whether this line item was taxed according to the origin or destination.",
          "enum": ["Mixed", "Destination", "Origin"],
          "type": "string",
          "example": "Destination",
          "x-enum-type": "Sourcing",
          "x-enum-description": "Sourcing",
          "x-enum-value-comments": {
            "Origin": "Origin",
            "Destination": "Destination",
            "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
          }
        },
        "tax": {
          "format": "double",
          "description": "The amount of tax generated for this line item.",
          "type": "number",
          "example": 62.50
        },
        "taxableAmount": {
          "format": "double",
          "description": "The taxable amount of this line item.",
          "type": "number",
          "example": 1000.0
        },
        "taxCalculated": {
          "format": "double",
          "description": "The tax calculated for this line by Avalara.  If the transaction was calculated with a tax override, this amount will be different from the \"tax\" value.",
          "type": "number",
          "example": 62.50
        },
        "taxCode": {
          "description": "The code string for the tax code that was used to calculate this line item.",
          "type": "string",
          "example": "PS081282"
        },
        "taxCodeId": {
          "format": "int32",
          "description": "The unique ID number for the tax code that was used to calculate this line item.",
          "type": "integer"
        },
        "taxDate": {
          "format": "date-time",
          "description": "The date that was used for calculating tax amounts for this line item.  By default, this date should be the same as the document date.\r\nIn some cases, for example when a consumer returns a product purchased previously, line items may be calculated using a tax date in the past\r\nso that the consumer can receive a refund for the correct tax amount that was charged when the item was originally purchased.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "taxEngine": {
          "description": "The tax engine identifier that was used to calculate this line item.",
          "type": "string",
          "example": ""
        },
        "taxOverrideType": {
          "description": "If a tax override was specified, this indicates the type of tax override.",
          "enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable"],
          "type": "string",
          "example": "None",
          "x-enum-type": "TaxOverrideTypeId",
          "x-enum-description": "TaxOverrideTypeId",
          "x-enum-value-comments": {
            "None": "No override",
            "TaxAmount": "Tax was overriden by the client",
            "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
            "TaxDate": "Only the tax date was overriden",
            "AccruedTaxAmount": "To support Consumer Use Tax",
            "DeriveTaxable": "Derive the taxable amount from the tax amount"
          }
        },
        "businessIdentificationNo": {
          "description": "VAT business identification number used for this transaction.",
          "type": "string"
        },
        "taxOverrideAmount": {
          "format": "double",
          "description": "If a tax override was specified, this indicates the amount of tax that was requested.",
          "type": "number",
          "example": 0.00
        },
        "taxOverrideReason": {
          "description": "If a tax override was specified, represents the reason for the tax override.",
          "type": "string",
          "example": ""
        },
        "taxIncluded": {
          "description": "True if tax was included in the purchase price of the item.",
          "type": "boolean",
          "example": false
        },
        "details": {
          "description": "Optional: A list of tax details for this line item.  To fetch this list, add the query string \"?$include=Details\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionLineDetailModel"
          },
          "example": [{
            "id": 123456789,
            "transactionLineId": 123456789,
            "transactionId": 123456789,
            "addressId": 12345,
            "country": "US",
            "region": "CA",
            "stateFIPS": "06",
            "exemptAmount": 0.00,
            "exemptReasonId": 4,
            "inState": false,
            "jurisCode": "06",
            "jurisName": "CALIFORNIA",
            "jurisdictionId": 5000531,
            "signatureCode": "AGAM",
            "stateAssignedNo": "",
            "jurisType": "STA",
            "nonTaxableAmount": 0.0,
            "nonTaxableRuleId": 0,
            "nonTaxableType": "BaseRule",
            "rate": 0.0625,
            "rateRuleId": 1321915,
            "rateSourceId": 3,
            "serCode": "",
            "sourcing": "Destination",
            "tax": 62.50,
            "taxableAmount": 1000.0,
            "taxType": "Sales",
            "taxName": "CA STATE TAX",
            "taxAuthorityTypeId": 45,
            "taxRegionId": 2127184,
            "taxCalculated": 62.50,
            "taxOverride": 0.00,
            "rateType": "General"
          }]
        },
        "lineLocationTypes": {
          "description": "Optional: A list of location types for this line item.  To fetch this list, add the query string \"?$include=LineLocationTypes\" to your URL.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionLineLocationTypeModel"
          }
        },
        "parameters": {
          "description": "Contains a list of extra parameters that were set when the transaction was created.",
          "type": "object",
          "properties": {}
        }
      },
      "example": {
        "id": 123456789,
        "transactionId": 123456789,
        "lineNumber": "1",
        "boundaryOverrideId": 0,
        "customerUsageType": "",
        "description": "Yarn",
        "destinationAddressId": 12345,
        "originAddressId": 123456789,
        "discountAmount": 100.0,
        "discountTypeId": 0,
        "exemptAmount": 0.0,
        "exemptCertId": 0,
        "exemptNo": "",
        "isItemTaxable": true,
        "isSSTP": false,
        "itemCode": "116292",
        "lineAmount": 1000.0,
        "quantity": 1.00,
        "ref1": "Note: Deliver to Bob",
        "reportingDate": "2017-05-16",
        "revAccount": "",
        "sourcing": "Destination",
        "tax": 62.50,
        "taxableAmount": 1000.0,
        "taxCalculated": 62.50,
        "taxCode": "PS081282",
        "taxDate": "2017-05-16",
        "taxEngine": "",
        "taxOverrideType": "None",
        "taxOverrideAmount": 0.00,
        "taxOverrideReason": "",
        "taxIncluded": false,
        "details": [{
          "id": 123456789,
          "transactionLineId": 123456789,
          "transactionId": 123456789,
          "addressId": 12345,
          "country": "US",
          "region": "CA",
          "stateFIPS": "06",
          "exemptAmount": 0.00,
          "exemptReasonId": 4,
          "inState": false,
          "jurisCode": "06",
          "jurisName": "CALIFORNIA",
          "jurisdictionId": 5000531,
          "signatureCode": "AGAM",
          "stateAssignedNo": "",
          "jurisType": "STA",
          "nonTaxableAmount": 0.0,
          "nonTaxableRuleId": 0,
          "nonTaxableType": "BaseRule",
          "rate": 0.0625,
          "rateRuleId": 1321915,
          "rateSourceId": 3,
          "serCode": "",
          "sourcing": "Destination",
          "tax": 62.50,
          "taxableAmount": 1000.0,
          "taxType": "Sales",
          "taxName": "CA STATE TAX",
          "taxAuthorityTypeId": 45,
          "taxRegionId": 2127184,
          "taxCalculated": 62.50,
          "taxOverride": 0.00,
          "rateType": "General"
        }]
      }
    },
    "TransactionAddressModel": {
      "description": "An address used within this transaction.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this address.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "transactionId": {
          "format": "int64",
          "description": "The unique ID number of the document to which this address belongs.",
          "type": "integer",
          "readOnly": true,
          "example": 0
        },
        "boundaryLevel": {
          "description": "The boundary level at which this address was validated.",
          "enum": ["Address", "Zip9", "Zip5"],
          "type": "string",
          "readOnly": true,
          "example": "Address",
          "x-enum-type": "BoundaryLevel",
          "x-enum-description": "Jurisdiction boundary precision level found for address.  This depends on the accuracy of the address\n                as well as the precision level of the state provided jurisdiction boundaries.",
          "x-enum-value-comments": {
            "Address": "Street address precision",
            "Zip9": "9-digit zip precision",
            "Zip5": "5-digit zip precision"
          }
        },
        "line1": {
          "description": "The first line of the address.",
          "type": "string",
          "example": "100 Ravine Lane Northeast #220"
        },
        "line2": {
          "description": "The second line of the address.",
          "type": "string"
        },
        "line3": {
          "description": "The third line of the address.",
          "type": "string"
        },
        "city": {
          "description": "The city for the address.",
          "type": "string",
          "example": "Bainbridge Island"
        },
        "region": {
          "description": "The region, state, or province for the address.",
          "type": "string",
          "example": "WA"
        },
        "postalCode": {
          "description": "The postal code or zip code for the address.",
          "type": "string",
          "example": "98110"
        },
        "country": {
          "description": "The country for the address.",
          "type": "string",
          "example": "US"
        },
        "taxRegionId": {
          "format": "int32",
          "description": "The unique ID number of the tax region for this address.",
          "type": "integer",
          "example": 0
        },
        "latitude": {
          "description": "Latitude for this address (CALC - 13394)",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude for this address (CALC - 13394)",
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "transactionId": 0,
        "boundaryLevel": "Address",
        "line1": "100 Ravine Lane Northeast #220",
        "city": "Bainbridge Island",
        "region": "WA",
        "postalCode": "98110",
        "country": "US",
        "taxRegionId": 0
      }
    },
    "TransactionLocationTypeModel": {
      "description": "Information about a location type",
      "type": "object",
      "properties": {
        "documentLocationTypeId": {
          "format": "int64",
          "description": "Location type ID for this location type in transaction",
          "type": "integer",
          "readOnly": true,
          "example": 123
        },
        "documentId": {
          "format": "int64",
          "description": "Transaction ID",
          "type": "integer",
          "readOnly": true,
          "example": 456
        },
        "documentAddressId": {
          "format": "int64",
          "description": "Address ID for the transaction",
          "type": "integer",
          "readOnly": true,
          "example": 789
        },
        "locationTypeCode": {
          "description": "Location type code",
          "type": "string",
          "readOnly": true,
          "example": "SingleLocation"
        }
      },
      "example": {
        "documentLocationTypeId": 123,
        "documentId": 456,
        "documentAddressId": 789,
        "locationTypeCode": "SingleLocation"
      }
    },
    "TransactionSummary": {
      "description": "Summary information about an overall transaction.",
      "type": "object",
      "properties": {
        "country": {
          "description": "Two character ISO-3166 country code.",
          "type": "string"
        },
        "region": {
          "description": "Two or three character ISO region, state or province code, if applicable.",
          "type": "string"
        },
        "jurisType": {
          "description": "The type of jurisdiction that collects this tax.",
          "enum": ["Country", "Composite", "State", "County", "City", "Special"],
          "type": "string",
          "x-enum-type": "JurisdictionType",
          "x-enum-description": "Jurisdiction Type",
          "x-enum-value-comments": {
            "Country": "Country",
            "Composite": "Deprecated",
            "State": "State",
            "County": "County",
            "City": "City",
            "Special": "Special Tax Jurisdiction"
          }
        },
        "jurisCode": {
          "description": "Jurisdiction Code for the taxing jurisdiction",
          "type": "string"
        },
        "jurisName": {
          "description": "The name of the jurisdiction that collects this tax.",
          "type": "string"
        },
        "taxAuthorityType": {
          "format": "int32",
          "description": "The unique ID of the Tax Authority Type that collects this tax.",
          "type": "integer"
        },
        "stateAssignedNo": {
          "description": "The state assigned number of the jurisdiction that collects this tax.",
          "type": "string"
        },
        "taxType": {
          "description": "The tax type of this tax.",
          "enum": ["Lodging", "Bottle", "ConsumerUse", "Excise", "Fee", "Input", "Nonrecoverable", "Output", "Rental", "Sales", "Use"],
          "type": "string",
          "x-enum-type": "TaxType",
          "x-enum-description": "Tax type",
          "x-enum-value-comments": {
            "Sales": "Sales tax",
            "Use": "Use tax",
            "ConsumerUse": "Consumer Use Tax",
            "Output": "VAT/GST Output tax",
            "Input": "VAT/GST Input tax",
            "Nonrecoverable": "VAT/GST Nonrecoverable Input tax",
            "Fee": "Fee - PIFs (Public Improvement Fees) and RSFs (Retail Sales Fees)",
            "Rental": "Rental Tax",
            "Excise": "Medical Excise Tax",
            "Lodging": "Match Lodging tax type",
            "Bottle": "Match bottle tax type"
          }
        },
        "taxName": {
          "description": "The name of the tax.",
          "type": "string"
        },
        "taxGroup": {
          "description": "Group code when special grouping is enabled.",
          "type": "string"
        },
        "rateType": {
          "description": "(DEPRECATED) Indicates the tax rate type.  Please use rateTypeCode instead.",
          "enum": ["ReducedA", "ReducedB", "Food", "General", "IncreasedStandard", "LinenRental", "Medical", "Parking", "SuperReduced", "ReducedR", "Standard", "Zero"],
          "type": "string",
          "x-enum-type": "RateType",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "rateTypeCode": {
          "description": "Indicates the code of the rate type.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
          "type": "string"
        },
        "taxable": {
          "format": "double",
          "description": "Tax Base - The adjusted taxable amount.",
          "type": "number"
        },
        "rate": {
          "format": "double",
          "description": "Tax Rate - The rate of taxation, as a fraction of the amount.",
          "type": "number"
        },
        "tax": {
          "format": "double",
          "description": "Tax amount - The calculated tax (Base * Rate).",
          "type": "number"
        },
        "taxCalculated": {
          "format": "double",
          "description": "Tax Calculated by Avalara AvaTax.  This may be overriden by a TaxOverride.TaxAmount.",
          "type": "number"
        },
        "nonTaxable": {
          "format": "double",
          "description": "The amount of the transaction that was non-taxable.",
          "type": "number"
        },
        "exemption": {
          "format": "double",
          "description": "The amount of the transaction that was exempt.",
          "type": "number"
        }
      },
      "example": {}
    },
    "TransactionLineDetailModel": {
      "description": "An individual tax detail element.  Represents the amount of tax calculated for a particular jurisdiction, for a particular line in an invoice.",
      "type": "object",
      "properties": {
        "id": {
          "format": "int64",
          "description": "The unique ID number of this tax detail.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "transactionLineId": {
          "format": "int64",
          "description": "The unique ID number of the line within this transaction.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "transactionId": {
          "format": "int64",
          "description": "The unique ID number of this transaction.",
          "type": "integer",
          "readOnly": true,
          "example": 123456789
        },
        "addressId": {
          "format": "int64",
          "description": "The unique ID number of the address used for this tax detail.",
          "type": "integer",
          "example": 12345
        },
        "country": {
          "description": "The two character ISO 3166 country code of the country where this tax detail is assigned.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "region": {
          "description": "The two-or-three character ISO region code for the region where this tax detail is assigned.",
          "type": "string",
          "example": "CA"
        },
        "countyFIPS": {
          "description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the county where this tax detail is assigned.",
          "type": "string"
        },
        "stateFIPS": {
          "description": "For U.S. transactions, the Federal Information Processing Standard (FIPS) code for the state where this tax detail is assigned.",
          "type": "string",
          "example": "06"
        },
        "exemptAmount": {
          "format": "double",
          "description": "The amount of this line that was considered exempt in this tax detail.",
          "type": "number",
          "example": 0.00
        },
        "exemptReasonId": {
          "format": "int32",
          "description": "The unique ID number of the exemption reason for this tax detail.",
          "type": "integer",
          "example": 4
        },
        "inState": {
          "description": "True if this detail element represented an in-state transaction.",
          "type": "boolean",
          "example": false
        },
        "jurisCode": {
          "description": "The code of the jurisdiction to which this tax detail applies.",
          "type": "string",
          "example": "06"
        },
        "jurisName": {
          "description": "The name of the jurisdiction to which this tax detail applies.",
          "type": "string",
          "example": "CALIFORNIA"
        },
        "jurisdictionId": {
          "format": "int32",
          "description": "The unique ID number of the jurisdiction to which this tax detail applies.",
          "type": "integer",
          "example": 5000531
        },
        "signatureCode": {
          "description": "The Avalara-specified signature code of the jurisdiction to which this tax detail applies.",
          "type": "string",
          "example": "AGAM"
        },
        "stateAssignedNo": {
          "description": "The state assigned number of the jurisdiction to which this tax detail applies.",
          "type": "string",
          "example": ""
        },
        "jurisType": {
          "description": "The type of the jurisdiction to which this tax detail applies.",
          "enum": ["STA", "CTY", "CIT", "STJ", "CNT"],
          "type": "string",
          "example": "STA",
          "x-enum-type": "JurisTypeId",
          "x-enum-description": "Types of jurisdiction referenced in a transaction",
          "x-enum-value-comments": {
            "STA": "State",
            "CTY": "County",
            "CIT": "City",
            "STJ": "Special",
            "CNT": "Country"
          }
        },
        "nonTaxableAmount": {
          "format": "double",
          "description": "The amount of this line item that was considered nontaxable in this tax detail.",
          "type": "number",
          "example": 0.0
        },
        "nonTaxableRuleId": {
          "format": "int32",
          "description": "The rule according to which portion of this detail was considered nontaxable.",
          "type": "integer",
          "example": 0
        },
        "nonTaxableType": {
          "description": "The type of nontaxability that was applied to this tax detail.",
          "enum": ["RateRule", "RateOverrideRule", "BaseRule", "ExemptEntityRule", "ProductTaxabilityRule", "NexusRule"],
          "type": "string",
          "example": "BaseRule",
          "x-enum-type": "TaxRuleTypeId",
          "x-enum-description": "TaxRuleTypeId",
          "x-enum-value-comments": {
            "RateRule": "RateRule",
            "RateOverrideRule": "RateOverrideRule",
            "BaseRule": "BaseRule",
            "ExemptEntityRule": "ExemptEntityRule",
            "ProductTaxabilityRule": "ProductTaxabilityRule",
            "NexusRule": "NexusRule"
          }
        },
        "rate": {
          "format": "double",
          "description": "The rate at which this tax detail was calculated.",
          "type": "number",
          "example": 0.0625
        },
        "rateRuleId": {
          "format": "int32",
          "description": "The unique ID number of the rule according to which this tax detail was calculated.",
          "type": "integer",
          "example": 1321915
        },
        "rateSourceId": {
          "format": "int32",
          "description": "The unique ID number of the source of the rate according to which this tax detail was calculated.",
          "type": "integer",
          "example": 3
        },
        "serCode": {
          "description": "For Streamlined Sales Tax customers, the SST Electronic Return code under which this tax detail should be applied.",
          "type": "string",
          "example": ""
        },
        "sourcing": {
          "description": "Indicates whether this tax detail applies to the origin or destination of the transaction.",
          "enum": ["Mixed", "Destination", "Origin"],
          "type": "string",
          "example": "Destination",
          "x-enum-type": "Sourcing",
          "x-enum-description": "Sourcing",
          "x-enum-value-comments": {
            "Origin": "Origin",
            "Destination": "Destination",
            "Mixed": "Mixed sourcing, for states that do both origin and destination calculation"
          }
        },
        "tax": {
          "format": "double",
          "description": "The amount of tax for this tax detail.",
          "type": "number",
          "example": 62.50
        },
        "taxableAmount": {
          "format": "double",
          "description": "The taxable amount of this tax detail.",
          "type": "number",
          "example": 1000.0
        },
        "taxType": {
          "description": "The type of tax that was calculated.  Depends on the company's nexus settings as well as the jurisdiction's tax laws.",
          "enum": ["Lodging", "Bottle", "ConsumerUse", "Excise", "Fee", "Input", "Nonrecoverable", "Output", "Rental", "Sales", "Use"],
          "type": "string",
          "example": "Sales",
          "x-enum-type": "TaxType",
          "x-enum-description": "Tax type",
          "x-enum-value-comments": {
            "Sales": "Sales tax",
            "Use": "Use tax",
            "ConsumerUse": "Consumer Use Tax",
            "Output": "VAT/GST Output tax",
            "Input": "VAT/GST Input tax",
            "Nonrecoverable": "VAT/GST Nonrecoverable Input tax",
            "Fee": "Fee - PIFs (Public Improvement Fees) and RSFs (Retail Sales Fees)",
            "Rental": "Rental Tax",
            "Excise": "Medical Excise Tax",
            "Lodging": "Match Lodging tax type",
            "Bottle": "Match bottle tax type"
          }
        },
        "taxName": {
          "description": "The name of the tax against which this tax amount was calculated.",
          "type": "string",
          "example": "CA STATE TAX"
        },
        "taxAuthorityTypeId": {
          "format": "int32",
          "description": "The type of the tax authority to which this tax will be remitted.",
          "type": "integer",
          "example": 45
        },
        "taxRegionId": {
          "format": "int32",
          "description": "The unique ID number of the tax region.",
          "type": "integer",
          "example": 2127184
        },
        "taxCalculated": {
          "format": "double",
          "description": "The amount of tax that was calculated.  This amount may be different if a tax override was used.\r\nIf the customer specified a tax override, this calculated tax value represents the amount of tax that would\r\nhave been charged if Avalara had calculated the tax for the rule.",
          "type": "number",
          "example": 62.50
        },
        "taxOverride": {
          "format": "double",
          "description": "The amount of tax override that was specified for this tax line.",
          "type": "number",
          "example": 0.00
        },
        "rateType": {
          "description": "(DEPRECATED) The rate type for this tax detail.  Please use rateTypeCode instead.",
          "enum": ["ReducedA", "ReducedB", "Food", "General", "IncreasedStandard", "LinenRental", "Medical", "Parking", "SuperReduced", "ReducedR", "Standard", "Zero"],
          "type": "string",
          "example": "General",
          "x-enum-type": "RateType",
          "x-enum-description": "",
          "x-enum-value-comments": {}
        },
        "rateTypeCode": {
          "description": "Indicates the code of the rate type that was used to calculate this tax detail.  Use `/api/v2/definitions/ratetypes` for a full list of rate type codes.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxableUnits": {
          "format": "double",
          "description": "Number of units in this line item that were calculated to be taxable according to this rate detail.",
          "type": "number"
        },
        "nonTaxableUnits": {
          "format": "double",
          "description": "Number of units in this line item that were calculated to be nontaxable according to this rate detail.",
          "type": "number"
        },
        "exemptUnits": {
          "format": "double",
          "description": "Number of units in this line item that were calculated to be exempt according to this rate detail.",
          "type": "number"
        },
        "unitOfBasis": {
          "description": "When calculating units, what basis of measurement did we use for calculating the units?",
          "type": "string"
        }
      },
      "example": {
        "id": 123456789,
        "transactionLineId": 123456789,
        "transactionId": 123456789,
        "addressId": 12345,
        "country": "US",
        "region": "CA",
        "stateFIPS": "06",
        "exemptAmount": 0.00,
        "exemptReasonId": 4,
        "inState": false,
        "jurisCode": "06",
        "jurisName": "CALIFORNIA",
        "jurisdictionId": 5000531,
        "signatureCode": "AGAM",
        "stateAssignedNo": "",
        "jurisType": "STA",
        "nonTaxableAmount": 0.0,
        "nonTaxableRuleId": 0,
        "nonTaxableType": "BaseRule",
        "rate": 0.0625,
        "rateRuleId": 1321915,
        "rateSourceId": 3,
        "serCode": "",
        "sourcing": "Destination",
        "tax": 62.50,
        "taxableAmount": 1000.0,
        "taxType": "Sales",
        "taxName": "CA STATE TAX",
        "taxAuthorityTypeId": 45,
        "taxRegionId": 2127184,
        "taxCalculated": 62.50,
        "taxOverride": 0.00,
        "rateType": "General"
      }
    },
    "TransactionLineLocationTypeModel": {
      "description": "Represents information about location types stored in a line",
      "type": "object",
      "properties": {
        "documentLineLocationTypeId": {
          "format": "int64",
          "description": "The unique ID number of this line location address model",
          "type": "integer",
          "readOnly": true,
          "example": 123
        },
        "documentLineId": {
          "format": "int64",
          "description": "The unique ID number of the document line associated with this line location address model",
          "type": "integer",
          "readOnly": true,
          "example": 456
        },
        "documentAddressId": {
          "format": "int64",
          "description": "The address ID corresponding to this model",
          "type": "integer",
          "readOnly": true,
          "example": 789
        },
        "locationTypeCode": {
          "description": "The location type code corresponding to this model",
          "type": "string",
          "readOnly": true,
          "example": "SingleLocation"
        }
      },
      "example": {
        "documentLineLocationTypeId": 123,
        "documentLineId": 456,
        "documentAddressId": 789,
        "locationTypeCode": "SingleLocation"
      }
    },
    "FetchResult[TransactionModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "AdjustTransactionModel": {
      "description": "A request to adjust tax for a previously existing transaction",
      "required": ["adjustmentReason", "newTransaction"],
      "type": "object",
      "properties": {
        "adjustmentReason": {
          "description": "A reason code indicating why this adjustment was made",
          "enum": ["NotAdjusted", "SourcingIssue", "ReconciledWithGeneralLedger", "ExemptCertApplied", "PriceAdjusted", "ProductReturned", "ProductExchanged", "BadDebt", "Other", "Offline"],
          "type": "string",
          "example": "PriceAdjusted",
          "x-enum-type": "AdjustmentReason",
          "x-enum-description": "Indicates the type of adjustment that was performed on a transaction",
          "x-enum-value-comments": {
            "NotAdjusted": "The transaction has not been adjusted",
            "SourcingIssue": "A sourcing issue existed which caused the transaction to be adjusted",
            "ReconciledWithGeneralLedger": "Transaction was adjusted to reconcile it with a general ledger",
            "ExemptCertApplied": "Transaction was adjusted after an exemption certificate was applied",
            "PriceAdjusted": "Transaction was adjusted when the price of an item changed",
            "ProductReturned": "Transaction was adjusted due to a product return",
            "ProductExchanged": "Transaction was adjusted due to a product exchange",
            "BadDebt": "Transaction was adjusted due to bad or uncollectable debt",
            "Other": "Transaction was adjusted for another reason not specified",
            "Offline": "Offline"
          }
        },
        "adjustmentDescription": {
          "description": "If the AdjustmentReason is \"Other\", specify the reason here",
          "type": "string",
          "example": "Price drop before shipping"
        },
        "newTransaction": {
          "$ref": "#/definitions/CreateTransactionModel",
          "description": "Replace the current transaction with tax data calculated for this new transaction",
          "example": {
            "type": "SalesInvoice",
            "companyCode": "DEFAULT",
            "date": "2017-05-16",
            "customerCode": "ABC",
            "purchaseOrderNo": "2017-05-16-001",
            "addresses": {
              "singleLocation": {
                "line1": "123 Main Street",
                "city": "Irvine",
                "region": "CA",
                "country": "US",
                "postalCode": "92615"
              }
            },
            "lines": [{
              "number": "1",
              "quantity": 1.0,
              "amount": 100.0,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }],
            "commit": true,
            "currencyCode": "USD",
            "description": "Yarn"
          }
        }
      },
      "example": {
        "adjustmentReason": "PriceAdjusted",
        "adjustmentDescription": "Price drop before shipping",
        "newTransaction": {
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2017-05-16",
          "customerCode": "ABC",
          "purchaseOrderNo": "2017-05-16-001",
          "addresses": {
            "singleLocation": {
              "line1": "123 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92615"
            }
          },
          "lines": [{
            "number": "1",
            "quantity": 1.0,
            "amount": 100.0,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }],
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "CreateTransactionModel": {
      "description": "Create a transaction",
      "required": ["date", "customerCode"],
      "type": "object",
      "properties": {
        "type": {
          "description": "Document Type: if not specified, a document with type of SalesOrder will be created by default",
          "enum": ["SalesOrder", "SalesInvoice", "PurchaseOrder", "PurchaseInvoice", "ReturnOrder", "ReturnInvoice", "InventoryTransferOrder", "InventoryTransferInvoice", "ReverseChargeOrder", "ReverseChargeInvoice", "Any"],
          "type": "string",
          "example": "SalesInvoice",
          "x-enum-type": "DocumentType",
          "x-enum-description": "Document Types",
          "x-enum-value-comments": {
            "SalesOrder": "Sales Order, estimate or quote (default).  This is a temporary document type and is not saved in tax history.",
            "SalesInvoice": "Sales Invoice",
            "PurchaseOrder": "Purchase order, estimate, or quote.  This is a temporary document type and is not saved in tax history.",
            "PurchaseInvoice": "Purchase Invoice",
            "ReturnOrder": "Sales Return Order.  This is a temporary document type and is not saved in tax history.",
            "ReturnInvoice": "Sales Return Invoice",
            "InventoryTransferOrder": "InventoryTransferOrder",
            "InventoryTransferInvoice": "InventoryTransferInvoice",
            "ReverseChargeOrder": "ReverseChargeOrder",
            "ReverseChargeInvoice": "ReverseChargeInvoice",
            "Any": "No particular type"
          }
        },
        "code": {
          "description": "Transaction Code - the internal reference code used by the client application.  This is used for operations such as\r\nGet, Adjust, Settle, and Void.  If you leave the transaction code blank, a GUID will be assigned to each transaction.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "companyCode": {
          "description": "Company Code - Specify the code of the company creating this transaction here.  If you leave this value null,\r\nyour account's default company will be used instead.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "DEFAULT"
        },
        "date": {
          "format": "date-time",
          "description": "Transaction Date - The date on the invoice, purchase order, etc.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "salespersonCode": {
          "description": "Salesperson Code - The client application salesperson reference code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "customerCode": {
          "description": "Customer Code - The client application customer reference code.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "ABC"
        },
        "customerUsageType": {
          "description": "Customer Usage Type - The client application customer or usage type.  For a list of \r\navailable usage types, see `/api/v2/definitions/entityusecodes`.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "discount": {
          "format": "double",
          "description": "Discount - The discount amount to apply to the document.  This value will be applied only to lines\r\nthat have the `discounted` flag set to true.  If no lines have `discounted` set to true, this discount\r\ncannot be applied.",
          "type": "number"
        },
        "purchaseOrderNo": {
          "description": "Purchase Order Number for this document\r\nThis is required for single use exemption certificates to match the order and invoice with the certificate.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "2017-05-16-001"
        },
        "exemptionNo": {
          "description": "Exemption Number for this document",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "addresses": {
          "$ref": "#/definitions/AddressesModel",
          "description": "Default addresses for all lines in this document",
          "example": {
            "singleLocation": {
              "line1": "123 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92615"
            }
          }
        },
        "lines": {
          "description": "Document line items list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemModel"
          },
          "example": [{
            "number": "1",
            "quantity": 1.0,
            "amount": 100.0,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }]
        },
        "parameters": {
          "description": "Special parameters for this transaction.\r\nTo get a full list of available parameters, please use the /api/v2/definitions/parameters endpoint.",
          "type": "object",
          "properties": {}
        },
        "referenceCode": {
          "description": "Reference Code used to reference the original document for a return invoice",
          "maxLength": 1024,
          "minLength": 0,
          "type": "string"
        },
        "reportingLocationCode": {
          "description": "Sets the sale location code (Outlet ID) for reporting this document to the tax authority.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "commit": {
          "description": "Causes the document to be committed if true.  This option is only applicable for invoice document \r\ntypes, not orders.",
          "type": "boolean",
          "example": true
        },
        "batchCode": {
          "description": "BatchCode for batch operations.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxOverride": {
          "$ref": "#/definitions/TaxOverrideModel",
          "description": "Specifies a tax override for the entire document"
        },
        "currencyCode": {
          "description": "3 character ISO 4217 currency code.",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "USD"
        },
        "serviceMode": {
          "description": "Specifies whether the tax calculation is handled Local, Remote, or Automatic (default).  This only \r\napplies when using an AvaLocal server.",
          "enum": ["Automatic", "Local", "Remote"],
          "type": "string",
          "x-enum-type": "ServiceMode",
          "x-enum-description": "Service modes for tax calculation when using an AvaLocal server.",
          "x-enum-value-comments": {
            "Automatic": "Automatically use local or remote (default)",
            "Local": "Local server only",
            "Remote": "Remote server only"
          }
        },
        "exchangeRate": {
          "format": "double",
          "description": "Currency exchange rate from this transaction to the company base currency.",
          "type": "number"
        },
        "exchangeRateEffectiveDate": {
          "format": "date-time",
          "description": "Effective date of the exchange rate.",
          "type": "string"
        },
        "posLaneCode": {
          "description": "Sets the POS Lane Code sent by the User for this document.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessIdentificationNo": {
          "description": "VAT business identification number for the customer for this transaction.  This number will be used for all lines \r\nin the transaction, except for those lines where you have defined a different business identification number.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "isSellerImporterOfRecord": {
          "description": "Specifies if the Transaction has the seller as IsSellerImporterOfRecord",
          "type": "boolean"
        },
        "description": {
          "description": "Description",
          "maxLength": 2048,
          "minLength": 0,
          "type": "string",
          "example": "Yarn"
        },
        "email": {
          "description": "Email",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "debugLevel": {
          "description": "If the user wishes to request additional debug information from this transaction, specify a level higher than 'normal'",
          "enum": ["Normal", "Diagnostic"],
          "type": "string",
          "x-enum-type": "TaxDebugLevel",
          "x-enum-description": "Indicates the level of detail requested from a tax API call",
          "x-enum-value-comments": {
            "Normal": "User requests the normal level of debug information when creating a tax transaction",
            "Diagnostic": "User requests additional diagnostic information when creating a tax transaction"
          }
        }
      },
      "example": {
        "type": "SalesInvoice",
        "companyCode": "DEFAULT",
        "date": "2017-05-16",
        "customerCode": "ABC",
        "purchaseOrderNo": "2017-05-16-001",
        "addresses": {
          "singleLocation": {
            "line1": "123 Main Street",
            "city": "Irvine",
            "region": "CA",
            "country": "US",
            "postalCode": "92615"
          }
        },
        "lines": [{
          "number": "1",
          "quantity": 1.0,
          "amount": 100.0,
          "taxCode": "PS081282",
          "itemCode": "Y0001",
          "description": "Yarn"
        }],
        "commit": true,
        "currencyCode": "USD",
        "description": "Yarn"
      }
    },
    "AddressesModel": {
      "description": "A series of addresses information in a GetTax call",
      "type": "object",
      "properties": {
        "singleLocation": {
          "$ref": "#/definitions/AddressLocationInfo",
          "description": "If this transaction occurred at a retail point-of-sale location, use this"
        },
        "shipFrom": {
          "$ref": "#/definitions/AddressLocationInfo",
          "description": "If this transaction was shipped from a warehouse location to a customer location, specify both \"ShipFrom\" and \"ShipTo\"."
        },
        "shipTo": {
          "$ref": "#/definitions/AddressLocationInfo",
          "description": "If this transaction was shipped from a warehouse location to a customer location, specify both \"ShipFrom\" and \"ShipTo\"."
        },
        "pointOfOrderOrigin": {
          "$ref": "#/definitions/AddressLocationInfo",
          "description": "The place of business where you receive the customer's order."
        },
        "pointOfOrderAcceptance": {
          "$ref": "#/definitions/AddressLocationInfo",
          "description": "The place of business where you accept/approve the customer’s order,\r\nthereby becoming contractually obligated to make the sale."
        }
      },
      "example": {
        "shipFrom": {
          "line1": "123 Main Street",
          "city": "Irvine",
          "region": "CA",
          "country": "US",
          "postalCode": "92615"
        },
        "shipTo": {
          "line1": "1100 2nd Ave",
          "city": "Seattle",
          "region": "WA",
          "country": "US",
          "postalCode": "98101"
        }
      }
    },
    "LineItemModel": {
      "description": "Represents one line item in a transaction",
      "required": ["quantity", "amount"],
      "type": "object",
      "properties": {
        "number": {
          "description": "Line number within this document",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "1"
        },
        "quantity": {
          "format": "double",
          "description": "Quantity of items in this line",
          "type": "number",
          "example": 1.0
        },
        "amount": {
          "format": "double",
          "description": "Total amount for this line",
          "type": "number",
          "example": 100.0
        },
        "addresses": {
          "$ref": "#/definitions/AddressesModel",
          "description": "Specify any differences for addresses between this line and the rest of the document"
        },
        "taxCode": {
          "description": "Tax Code - System or Custom Tax Code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PS081282"
        },
        "customerUsageType": {
          "description": "Customer Usage Type - The client application customer or usage type.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "itemCode": {
          "description": "Item Code (SKU)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Y0001"
        },
        "exemptionCode": {
          "description": "Exemption number for this line",
          "type": "string"
        },
        "discounted": {
          "description": "True if the document discount should be applied to this line",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "Indicates if line has Tax Included; defaults to false",
          "type": "boolean"
        },
        "revenueAccount": {
          "description": "Revenue Account",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ref1": {
          "description": "Reference 1 - Client specific reference field",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "ref2": {
          "description": "Reference 2 - Client specific reference field",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "description": {
          "description": "Item description.  This is required for SST transactions if an unmapped ItemCode is used.",
          "maxLength": 2096,
          "minLength": 0,
          "type": "string",
          "example": "Yarn"
        },
        "businessIdentificationNo": {
          "description": "VAT business identification number for the customer for this line item.  If you leave this field empty,\r\nthis line item will use whatever business identification number you provided at the transaction level.\r\n\r\nIf you specify a VAT business identification number for the customer in this transaction and you have also set up\r\na business identification number for your company during company setup, this transaction will be treated as a \r\nbusiness-to-business transaction for VAT purposes and it will be calculated according to VAT tax rules.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxOverride": {
          "$ref": "#/definitions/TaxOverrideModel",
          "description": "Specifies a tax override for this line"
        },
        "parameters": {
          "description": "Special parameters that apply to this line within this transaction.\r\nTo get a full list of available parameters, please use the /api/v2/definitions/parameters endpoint.",
          "type": "object",
          "properties": {}
        }
      },
      "example": {
        "number": "1",
        "quantity": 1.0,
        "amount": 100.0,
        "taxCode": "PS081282",
        "itemCode": "Y0001",
        "description": "Yarn"
      }
    },
    "TaxOverrideModel": {
      "description": "Represents a tax override for a transaction",
      "type": "object",
      "properties": {
        "type": {
          "description": "Identifies the type of tax override",
          "enum": ["None", "TaxAmount", "Exemption", "TaxDate", "AccruedTaxAmount", "DeriveTaxable"],
          "type": "string",
          "example": "TaxAmount",
          "x-enum-type": "TaxOverrideType",
          "x-enum-description": "TaxOverride reasons",
          "x-enum-value-comments": {
            "None": "No override",
            "TaxAmount": "Tax was overriden by the client",
            "Exemption": "Entity exemption was ignored (e.g. item was consumed)",
            "TaxDate": "Only the tax date was overriden",
            "AccruedTaxAmount": "To support Consumer Use Tax",
            "DeriveTaxable": "Derive the taxable amount from the tax amount"
          }
        },
        "taxAmount": {
          "format": "double",
          "description": "Indicates a total override of the calculated tax on the document.  AvaTax will distribute\r\nthe override across all the lines.",
          "type": "number",
          "example": 6.25
        },
        "taxDate": {
          "format": "date-time",
          "description": "The override tax date to use",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "reason": {
          "description": "This provides the reason for a tax override for audit purposes.  It is required for types 2-4.",
          "type": "string",
          "example": "Precalculated Tax"
        }
      },
      "example": {
        "type": "TaxAmount",
        "taxAmount": 6.25,
        "taxDate": "2017-05-16",
        "reason": "Precalculated Tax"
      }
    },
    "AddressLocationInfo": {
      "description": "Represents an address to resolve.",
      "type": "object",
      "properties": {
        "locationCode": {
          "description": "If you wish to use the address of an existing location for this company, specify the address here.\r\nOtherwise, leave this value empty.",
          "type": "string"
        },
        "line1": {
          "description": "Line1",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "123 Main Street"
        },
        "line2": {
          "description": "Line2",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "line3": {
          "description": "Line3",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "city": {
          "description": "City",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Irvine"
        },
        "region": {
          "description": "State / Province / Region",
          "maxLength": 3,
          "minLength": 0,
          "type": "string",
          "example": "CA"
        },
        "country": {
          "description": "Two character ISO 3166 Country Code",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "postalCode": {
          "description": "Postal Code / Zip Code",
          "maxLength": 11,
          "minLength": 0,
          "type": "string",
          "example": "92615"
        },
        "latitude": {
          "format": "double",
          "description": "Geospatial latitude measurement",
          "type": "number"
        },
        "longitude": {
          "format": "double",
          "description": "Geospatial longitude measurement",
          "type": "number"
        }
      },
      "example": {
        "line1": "123 Main Street",
        "city": "Irvine",
        "region": "CA",
        "country": "US",
        "postalCode": "92615"
      }
    },
    "VoidTransactionModel": {
      "description": "A request to void a previously created transaction",
      "required": ["code"],
      "type": "object",
      "properties": {
        "code": {
          "description": "Please specify the reason for voiding or cancelling this transaction",
          "enum": ["Unspecified", "PostFailed", "DocDeleted", "DocVoided", "AdjustmentCancelled"],
          "type": "string",
          "example": "DocVoided",
          "x-enum-type": "VoidReasonCode",
          "x-enum-description": "Reason code for voiding or cancelling a transaction",
          "x-enum-value-comments": {
            "Unspecified": "Unspecified reason",
            "PostFailed": "Post operation failed - Document status will be changed to unposted",
            "DocDeleted": "Document deleted - If committed, document status will be changed to Cancelled.  If not committed, document will be\n                deleted.",
            "DocVoided": "Document has been voided and DocStatus will be set to Cancelled",
            "AdjustmentCancelled": "AdjustTax operation has been cancelled.  Adjustment will be reversed."
          }
        }
      },
      "example": {
        "code": "DocVoided"
      }
    },
    "SettleTransactionModel": {
      "description": "Settle this transaction with your ledger by executing one or many actions against that transaction.  \r\nYou may use this endpoint to verify the transaction, change the transaction's code, and commit the transaction for reporting purposes.\r\nThis endpoint may be used to execute any or all of these actions at once.",
      "type": "object",
      "properties": {
        "verify": {
          "$ref": "#/definitions/VerifyTransactionModel",
          "description": "To use the \"Settle\" endpoint to verify a transaction, fill out this value.",
          "example": {
            "verifyTransactionDate": "2017-05-16T00:00:00-07:00",
            "verifyTotalAmount": 100.0,
            "verifyTotalTax": 6.25
          }
        },
        "changeCode": {
          "$ref": "#/definitions/ChangeTransactionCodeModel",
          "description": "To use the \"Settle\" endpoint to change a transaction's code, fill out this value.",
          "example": {
            "newCode": "ab28cc36-b9e8-4f0b-8acf-086333b52689"
          }
        },
        "commit": {
          "$ref": "#/definitions/CommitTransactionModel",
          "description": "To use the \"Settle\" endpoint to commit a transaction for reporting purposes, fill out this value.\r\nIf you use Avalara Returns, committing a transaction will cause that transaction to be filed.",
          "example": {
            "commit": true
          }
        }
      },
      "example": {
        "verify": {
          "verifyTransactionDate": "2017-05-16T00:00:00-07:00",
          "verifyTotalAmount": 100.0,
          "verifyTotalTax": 6.25
        },
        "changeCode": {
          "newCode": "ab28cc36-b9e8-4f0b-8acf-086333b52689"
        },
        "commit": {
          "commit": true
        }
      }
    },
    "VerifyTransactionModel": {
      "description": "Verify this transaction by matching it to values in your accounting system.",
      "type": "object",
      "properties": {
        "verifyTransactionDate": {
          "format": "date-time",
          "description": "Transaction Date - The date on the invoice, purchase order, etc.",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "verifyTotalAmount": {
          "format": "double",
          "description": "Total Amount - The total amount (not including tax) for the document.",
          "type": "number",
          "example": 100.0
        },
        "verifyTotalTax": {
          "format": "double",
          "description": "Total Tax - The total tax for the document.",
          "type": "number",
          "example": 6.25
        }
      },
      "example": {
        "verifyTransactionDate": "2017-05-16T00:00:00-07:00",
        "verifyTotalAmount": 100.0,
        "verifyTotalTax": 6.25
      }
    },
    "ChangeTransactionCodeModel": {
      "description": "Settle this transaction with your ledger by verifying its amounts.\r\nIf the transaction is not yet committed, you may specify the \"commit\" value to commit it to the ledger and allow it to be reported.\r\nYou may also optionally change the transaction's code by specifying the \"newTransactionCode\" value.",
      "required": ["newCode"],
      "type": "object",
      "properties": {
        "newCode": {
          "description": "To change the transaction code for this transaction, specify the new transaction code here.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "5575f9fa-3adc-439b-99b9-62c3a2249697"
        }
      },
      "example": {
        "newCode": "5575f9fa-3adc-439b-99b9-62c3a2249697"
      }
    },
    "CommitTransactionModel": {
      "description": "Commit this transaction as permanent",
      "required": ["commit"],
      "type": "object",
      "properties": {
        "commit": {
          "description": "Set this value to be true to commit this transaction.\r\nCommitting a transaction allows it to be reported on a tax return.  Uncommitted transactions will not be reported.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "commit": true
      }
    },
    "LockTransactionModel": {
      "description": "Commit this transaction as permanent",
      "required": ["isLocked"],
      "type": "object",
      "properties": {
        "isLocked": {
          "description": "Set this value to be true to commit this transaction.\r\nCommitting a transaction allows it to be reported on a tax return.  Uncommitted transactions will not be reported.",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "isLocked": true
      }
    },
    "BulkLockTransactionModel": {
      "description": "Bulk lock documents model",
      "required": ["documentIds", "isLocked"],
      "type": "object",
      "properties": {
        "documentIds": {
          "description": "List of documents to lock",
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          },
          "example": [1, 2, 3, 4, 5]
        },
        "isLocked": {
          "description": "The lock status to set for the documents designated in this API",
          "type": "boolean",
          "example": true
        }
      },
      "example": {
        "documentIds": [1, 2, 3, 4, 5],
        "isLocked": true
      }
    },
    "BulkLockTransactionResult": {
      "description": "Returns information about transactions that were locked",
      "type": "object",
      "properties": {
        "numberOfRecords": {
          "format": "int32",
          "description": "Number of records that have been modified",
          "type": "integer"
        }
      },
      "example": {}
    },
    "CreateOrAdjustTransactionModel": {
      "description": "Create or adjust transaction model",
      "type": "object",
      "properties": {
        "createTransactionModel": {
          "$ref": "#/definitions/CreateTransactionModel",
          "description": "The create transaction model to be created or updated.",
          "example": {
            "type": "SalesInvoice",
            "companyCode": "DEFAULT",
            "date": "2017-05-16",
            "customerCode": "ABC",
            "purchaseOrderNo": "2017-05-16-001",
            "addresses": {
              "singleLocation": {
                "line1": "123 Main Street",
                "city": "Irvine",
                "region": "CA",
                "country": "US",
                "postalCode": "92615"
              }
            },
            "lines": [{
              "number": "1",
              "quantity": 1.0,
              "amount": 100.0,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }],
            "commit": true,
            "currencyCode": "USD",
            "description": "Yarn"
          }
        }
      },
      "example": {
        "createTransactionModel": {
          "type": "SalesInvoice",
          "companyCode": "DEFAULT",
          "date": "2017-05-16",
          "customerCode": "ABC",
          "purchaseOrderNo": "2017-05-16-001",
          "addresses": {
            "singleLocation": {
              "line1": "123 Main Street",
              "city": "Irvine",
              "region": "CA",
              "country": "US",
              "postalCode": "92615"
            }
          },
          "lines": [{
            "number": "1",
            "quantity": 1.0,
            "amount": 100.0,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }],
          "commit": true,
          "currencyCode": "USD",
          "description": "Yarn"
        }
      }
    },
    "AuditTransactionModel": {
      "description": "Information about a previously created transaction",
      "type": "object",
      "properties": {
        "companyId": {
          "format": "int32",
          "description": "Unique ID number of the company that created this transaction",
          "type": "integer",
          "example": 0
        },
        "serverTimestamp": {
          "format": "date-time",
          "description": "Server timestamp, in UTC, of the date/time when the original transaction was created",
          "type": "string",
          "example": "2017-05-16T09:28:32.2123358-07:00"
        },
        "serverDuration": {
          "format": "date-time",
          "description": "Length of time the original API call took",
          "type": "string"
        },
        "apiCallStatus": {
          "description": "api call status",
          "enum": ["OriginalApiCallAvailable", "ReconstructedApiCallAvailable", "Any"],
          "type": "string",
          "example": "ReconstructedApiCallAvailable",
          "x-enum-type": "ApiCallStatus",
          "x-enum-description": "Indicates what level of auditing information is available for a transaction",
          "x-enum-value-comments": {
            "OriginalApiCallAvailable": "If the original api call is availabe on S3",
            "ReconstructedApiCallAvailable": "if the original api call is not available, reconstructed api call should always be available",
            "Any": "Any other api call status"
          }
        },
        "original": {
          "$ref": "#/definitions/OriginalApiRequestResponseModel",
          "description": "Original API request/response"
        },
        "reconstructed": {
          "$ref": "#/definitions/ReconstructedApiRequestResponseModel",
          "description": "Reconstructed API request/response",
          "example": {
            "request": {
              "type": "SalesInvoice",
              "companyCode": "DEFAULT",
              "date": "2017-05-16",
              "customerCode": "ABC",
              "purchaseOrderNo": "2017-05-16-001",
              "addresses": {
                "singleLocation": {
                  "line1": "123 Main Street",
                  "city": "Irvine",
                  "region": "CA",
                  "country": "US",
                  "postalCode": "92615"
                }
              },
              "lines": [{
                "number": "1",
                "quantity": 1.0,
                "amount": 100.0,
                "taxCode": "PS081282",
                "itemCode": "Y0001",
                "description": "Yarn"
              }],
              "commit": true,
              "currencyCode": "USD",
              "description": "Yarn"
            }
          }
        }
      },
      "example": {
        "companyId": 0,
        "serverTimestamp": "2017-05-16T09:28:32.2123358-07:00",
        "apiCallStatus": "ReconstructedApiCallAvailable",
        "reconstructed": {
          "request": {
            "type": "SalesInvoice",
            "companyCode": "DEFAULT",
            "date": "2017-05-16",
            "customerCode": "ABC",
            "purchaseOrderNo": "2017-05-16-001",
            "addresses": {
              "singleLocation": {
                "line1": "123 Main Street",
                "city": "Irvine",
                "region": "CA",
                "country": "US",
                "postalCode": "92615"
              }
            },
            "lines": [{
              "number": "1",
              "quantity": 1.0,
              "amount": 100.0,
              "taxCode": "PS081282",
              "itemCode": "Y0001",
              "description": "Yarn"
            }],
            "commit": true,
            "currencyCode": "USD",
            "description": "Yarn"
          }
        }
      }
    },
    "OriginalApiRequestResponseModel": {
      "description": "Represents the exact API request and response from the original transaction API call, if available",
      "type": "object",
      "properties": {
        "request": {
          "description": "API request",
          "type": "string"
        },
        "response": {
          "description": "API response",
          "type": "string"
        }
      },
      "example": {}
    },
    "ReconstructedApiRequestResponseModel": {
      "description": "This model contains a reconstructed CreateTransaction request object that could potentially be used\r\nto recreate this transaction.\r\n\r\nNote that the API changes over time, and this reconstructed model is likely different from the exact request\r\nthat was originally used to create this transaction.",
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/CreateTransactionModel",
          "description": "API request"
        }
      },
      "example": {}
    },
    "RefundTransactionModel": {
      "description": "Refund a committed transaction",
      "type": "object",
      "properties": {
        "refundTransactionCode": {
          "description": "the committed transaction code to be refunded",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "479f50c3-3f5c-4e69-83dc-00400100838d"
        },
        "refundDate": {
          "format": "date-time",
          "description": "The date of the refund. If null, today's date will be used",
          "type": "string",
          "example": "2017-05-16T00:00:00-07:00"
        },
        "refundType": {
          "description": "Type of this refund",
          "enum": ["Full", "Partial", "TaxOnly", "Percentage"],
          "type": "string",
          "example": "Full",
          "x-enum-type": "RefundType",
          "x-enum-description": "Refund types",
          "x-enum-value-comments": {
            "Full": "Refund the whole transaction.",
            "Partial": "Refund only specific lines from the original a transaction.",
            "TaxOnly": "Only refund the tax part of the transaction.",
            "Percentage": "Refund a percentage of the value of this transaction."
          }
        },
        "refundPercentage": {
          "format": "double",
          "description": "Percentage for refund",
          "type": "number",
          "example": 20.0
        },
        "refundLines": {
          "description": "Process refund for these lines",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["1", "2"]
        }
      },
      "example": {
        "refundTransactionCode": "479f50c3-3f5c-4e69-83dc-00400100838d",
        "refundDate": "2017-05-16",
        "refundType": "Full",
        "refundPercentage": 20.0,
        "refundLines": ["1", "2"]
      }
    },
    "AddTransactionLineModel": {
      "description": "Model to add specific lines to exising transaction",
      "required": ["companyCode", "transactionCode"],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "company code",
          "type": "string",
          "example": "DEFAULT"
        },
        "transactionCode": {
          "description": "document code for the transaction to add lines",
          "type": "string",
          "example": "1234"
        },
        "documentType": {
          "description": "document type",
          "enum": ["SalesOrder", "SalesInvoice", "PurchaseOrder", "PurchaseInvoice", "ReturnOrder", "ReturnInvoice", "InventoryTransferOrder", "InventoryTransferInvoice", "ReverseChargeOrder", "ReverseChargeInvoice", "Any"],
          "type": "string",
          "example": "SalesInvoice",
          "x-enum-type": "DocumentType",
          "x-enum-description": "Document Types",
          "x-enum-value-comments": {
            "SalesOrder": "Sales Order, estimate or quote (default).  This is a temporary document type and is not saved in tax history.",
            "SalesInvoice": "Sales Invoice",
            "PurchaseOrder": "Purchase order, estimate, or quote.  This is a temporary document type and is not saved in tax history.",
            "PurchaseInvoice": "Purchase Invoice",
            "ReturnOrder": "Sales Return Order.  This is a temporary document type and is not saved in tax history.",
            "ReturnInvoice": "Sales Return Invoice",
            "InventoryTransferOrder": "InventoryTransferOrder",
            "InventoryTransferInvoice": "InventoryTransferInvoice",
            "ReverseChargeOrder": "ReverseChargeOrder",
            "ReverseChargeInvoice": "ReverseChargeInvoice",
            "Any": "No particular type"
          }
        },
        "lines": {
          "description": "List of lines to be added",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItemModel"
          },
          "example": [{
            "number": "1",
            "quantity": 1.0,
            "amount": 100.0,
            "taxCode": "PS081282",
            "itemCode": "Y0001",
            "description": "Yarn"
          }]
        },
        "renumber": {
          "description": "Option to renumber lines after add. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
          "type": "boolean",
          "example": false
        }
      },
      "example": {
        "companyCode": "DEFAULT",
        "transactionCode": "1234",
        "documentType": "SalesInvoice",
        "lines": [{
          "number": "1",
          "quantity": 1.0,
          "amount": 100.0,
          "taxCode": "PS081282",
          "itemCode": "Y0001",
          "description": "Yarn"
        }],
        "renumber": false
      }
    },
    "RemoveTransactionLineModel": {
      "description": "Model to specify lines to be removed",
      "required": ["companyCode", "transactionCode"],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "company code",
          "type": "string",
          "example": "DEFAULT"
        },
        "transactionCode": {
          "description": "document code for the transaction to add lines",
          "type": "string",
          "example": "1234"
        },
        "documentType": {
          "description": "document type",
          "enum": ["SalesOrder", "SalesInvoice", "PurchaseOrder", "PurchaseInvoice", "ReturnOrder", "ReturnInvoice", "InventoryTransferOrder", "InventoryTransferInvoice", "ReverseChargeOrder", "ReverseChargeInvoice", "Any"],
          "type": "string",
          "example": "SalesInvoice",
          "x-enum-type": "DocumentType",
          "x-enum-description": "Document Types",
          "x-enum-value-comments": {
            "SalesOrder": "Sales Order, estimate or quote (default).  This is a temporary document type and is not saved in tax history.",
            "SalesInvoice": "Sales Invoice",
            "PurchaseOrder": "Purchase order, estimate, or quote.  This is a temporary document type and is not saved in tax history.",
            "PurchaseInvoice": "Purchase Invoice",
            "ReturnOrder": "Sales Return Order.  This is a temporary document type and is not saved in tax history.",
            "ReturnInvoice": "Sales Return Invoice",
            "InventoryTransferOrder": "InventoryTransferOrder",
            "InventoryTransferInvoice": "InventoryTransferInvoice",
            "ReverseChargeOrder": "ReverseChargeOrder",
            "ReverseChargeInvoice": "ReverseChargeInvoice",
            "Any": "No particular type"
          }
        },
        "lines": {
          "description": "List of lines to be added",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["1"]
        },
        "renumber": {
          "description": "ption to renumber lines after removal. After renumber, the line number becomes: \"1\", \"2\", \"3\", ...",
          "type": "boolean",
          "example": false
        }
      },
      "example": {
        "companyCode": "DEFAULT",
        "transactionCode": "1234",
        "documentType": "SalesInvoice",
        "lines": ["1"],
        "renumber": false
      }
    },
    "FetchResult[UPCModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UPCModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "FetchResult[UserModel]": {
      "type": "object",
      "properties": {
        "@recordsetCount": {
          "format": "int32",
          "type": "integer"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserModel"
          }
        },
        "@nextLink": {
          "type": "string"
        }
      }
    },
    "UserEntitlementModel": {
      "description": "User Entitlement Model",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "List of API names and categories that this user is permitted to access",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["CompanyFetch", "CompanySave", "NexusFetch", "NexusSave"]
        },
        "accessLevel": {
          "description": "What access privileges does the current user have to see companies?",
          "enum": ["None", "SingleCompany", "SingleAccount", "AllCompanies"],
          "type": "string",
          "example": "SingleAccount",
          "x-enum-type": "CompanyAccessLevel",
          "x-enum-description": "Indicates the level of companies that can be accessed",
          "x-enum-value-comments": {
            "None": "No permission to access companies.",
            "SingleCompany": "Permission to access a single company and its children.",
            "SingleAccount": "Permission to access all companies in a single account.",
            "AllCompanies": "Permission to access all companies in all accounts.  Reserved for system administration tasks."
          }
        },
        "companies": {
          "description": "The identities of all companies this user is permitted to access",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "example": [123, 456, 789]
        }
      },
      "example": {
        "permissions": ["CompanyFetch", "CompanySave", "NexusFetch", "NexusSave"],
        "accessLevel": "SingleAccount",
        "companies": [123, 456, 789]
      }
    },
    "PingResultModel": {
      "description": "Ping Result Model",
      "type": "object",
      "properties": {
        "version": {
          "description": "Version number",
          "type": "string",
          "example": "1.0.0.0"
        },
        "authenticated": {
          "description": "Returns true if you provided authentication for this API call; false if you did not.",
          "type": "boolean",
          "example": true
        },
        "authenticationType": {
          "description": "Returns the type of authentication you provided, if authenticated",
          "enum": ["None", "UsernamePassword", "AccountIdLicenseKey", "OpenIdBearerToken"],
          "type": "string",
          "example": "UsernamePassword",
          "x-enum-type": "AuthenticationTypeId",
          "x-enum-description": "Represents the type of authentication provided to the API call",
          "x-enum-value-comments": {
            "None": "This API call was not authenticated.",
            "UsernamePassword": "This API call was authenticated by your username/password.",
            "AccountIdLicenseKey": "This API call was authenticated by your Avalara Account ID and private license key.",
            "OpenIdBearerToken": "This API call was authenticated by OpenID Bearer Token."
          }
        },
        "authenticatedUserName": {
          "description": "The username of the currently authenticated user, if any.",
          "type": "string",
          "example": "TestUser"
        },
        "authenticatedUserId": {
          "format": "int32",
          "description": "The ID number of the currently authenticated user, if any.",
          "type": "integer",
          "example": 98765
        },
        "authenticatedAccountId": {
          "format": "int32",
          "description": "The ID number of the currently authenticated user's account, if any.",
          "type": "integer",
          "example": 123456789
        }
      },
      "example": {
        "version": "1.0.0.0",
        "authenticated": true,
        "authenticationType": "UsernamePassword",
        "authenticatedUserName": "TestUser",
        "authenticatedUserId": 98765,
        "authenticatedAccountId": 123456789
      }
    }
  },
  "securityDefinitions": {
    "OauthSecurity": {
      "flow": "implicit",
      "authorizationUrl": "https://ai-sbx.avlr.sh/connect/authorize?response_type=id_token token&scope=avatax_api avatax openid&nonce=bb67a572-ead1-48ae-af53-21f0a695eaf7&",
      "type": "oauth2",
      "description": "A bearer token provided by the Avalara Identity server."
    },
    "UserSecurity": {
      "type": "basic",
      "description": "Basic authentication supports either Username/Password or AccountId/LicenseKey, using Base64 encoding."
    }
  },
  "x-group-by-tags": true,
  "x-auth-formula": "`Basic ${btoa(`<username>:<password>`)}`",
  "x-sample-auth-header": "Basic aHR0cHdhdGNoOmY=",
  "x-ApiType": "REST",
  "x-avalara-version": "17.5.1-73",
  "x-api-proxy": {
    "route": "https://e3zwcxla5k.execute-api.us-west-2.amazonaws.com/prod/",
    "key": {
      "name": "api-key",
      "location": "api-proxy-key/key"
    }
  }
}